{"version":3,"sources":["../node_modules/tslib/tslib.es6.js","../src/animate/Tween.ts","../src/animate/Timeline.ts","../src/animate/sound.ts","../src/animate/Container.ts","../src/animate/MovieClip.ts","../src/animate/utils.ts","../src/animate/load.ts","../src/animate/Scene.ts","../src/animate/Text.ts","../src/animate/AnimatorTimeline.ts","../src/animate/Animator.ts","../src/animate/Sprite.ts","../src/animate/Graphics.ts","../src/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","lerpValue","start","end","t","PI","Math","TWO_PI","COLOR_HELPER","PROP_LERPS","x","y","sx","sy","kx","ky","r","abs","a","sR","sG","sB","g","v","c","m","setPropFromShorthand","target","prop","value","transform","position","scale","skew","rotation","alpha","i","setColorTransform","apply","visible","ma","buildPowIn","power","pow","buildPowOut","buildPowInOut","EASE_DICT","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","sineIn","cos","sineOut","sin","sineInOut","backIn","backOut","backInOut","circIn","sqrt","circOut","circInOut","bounceIn","bounceOut","bounceInOut","elasticIn","s","asin","elasticOut","elasticInOut","getEaseFromConfig","config","n","s_1","Tween","startProps","endProps","startFrame","duration","ease","endFrame","isTweenlessFrame","_a","e","setPosition","currentFrame","setToEnd","time","lerp","lerpedTime","Timeline","_super","call","out","_currentProps","addTween","properties","extendLastFrame","assign","startValue","getPropFromShorthand","length","tween","push","addKeyframe","prevTween","mask","destroy","sound","EventEmitter","AnimateContainer","_this","arguments","ac","addChild","re","setRenderable","setTransform","setMask","setAlpha","setTint","renderable","Graphics","Sprite","console","warn","tint","utils","hexToUint","rA","gA","bA","filter","colorTransformFilter","matrix","filters","defineProperty","_colorTransformFilter","ColorMatrixFilter","Container","SharedTicker","Ticker","shared","MovieClip","options","loop","framerate","labels","am","addTimedMask","tw","at","addTimedChild","aa","addAction","ps","playSound","undefined","mode","INDEPENDENT","startPosition","_labels","_labelDict","name_1","label","sort","selfAdvance","paused","actionsEnabled","autoReset","_synchOffset","_prevPos","_t","_framerate","_duration","_totalFrames","_timelines","_timedChildTimelines","_depthSorted","_actions","_beforeUpdate","parentStartPosition","_tickListener","bind","_onAdded","_onRemoved","on","advance","_updateTimeline","_setTimelinePosition","_goto","parentFramerate","add","tickerDeltaTime","seconds","settings","TARGET_FPMS","remove","current","len","_autoExtend","_parseProperties","_getChildTimeline","instance","timeline","keyframes","parseInt","SYNCHED","fillFrames","deserializeKeyframes","callback","index","Error","actions","alias","emit","play","stop","gotoAndPlay","positionOrLabel","gotoAndStop","o","fps","parent","DEFAULT_FRAMERATE","afterUpdateOnce","floor","pos","NaN","_reset","synched","SINGLE_FRAME","doActions","startPos","actionFrames","isNaN","oldCurrentFrame","frame","j","length_1","timedChildTimelines","depthSorted","length_2","shouldBeChild","removeChild","length_3","children","indexOf","addChildAt","length_4","child","frameActions","hiddenChildren","timelines","childTimelines","_prepare","hex","substr","replace","oldLength","fill","keysMap","X","Y","A","B","C","D","R","L","T","F","V","parseValue","buffer","buff","split","forEach","val","parseFloat","tweenKeysMap","P","basicEase","parseTween","tweenBuffer","result","handlingProps","easeBuffer","substring","test","exec","strength","addMovieClips","item","isFrameStarted","deserializeShapes","str","shapes","isCommand","shape","arg","upload","renderer","displayObject","done","plugins","prepare","registerFindHook","EXPECTED_ASSET_VERSION","load","scene","optionsOrComplete","metadata","loader","complete","basePath","createInstance","version","stage","Loader","assets","keys","id","data","default","resource","spritesheet","spritesheets","nodeName","textures","name","texture","url","search","items","onComplete","once","ALIGN_VALUES","Scene","asset","removeView","stageOptions","Application","pool","AnimatorTimeline","_update","update","init","_pool","completed","Animator","_internalStop","progress","max","min","pop","labelsMap","STOP_LABEL","LOOP_LABEL","totalFrames","fromTo","to","startLabel","endLabel","stopAll","splice","AnimateSprite","AnimateGraphics","geometry","drawCommands","cp","closePath","bh","beginHole","eh","endHole","moveTo","l","lineTo","q","quadraticCurveTo","bezierCurveTo","f","beginFill","dr","drawRect","rr","drawRoundedRect","rc","dc","drawCircle","ar","arc","arcTo","de","drawEllipse","lineStyle","commands","currentCommand","params","args","_i","lf","colorArray","rf","bf","sd","bs","ls","rs","STYLE_PROPS","z","w","h","isUndefinedOr","defaultValue","AnimateText","setAlign","ss","setStyle","sh","setShadow","align","style","anchor","k","color","angle","distance","dropShadow","toString","dropShadowColor","dropShadowAngle","dropShadowDistance","Text"],"mappings":"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","file":"dist/pixi-animate-legacy.min.js.map","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AnimateDisplayObject } from './DisplayObject';\nimport { Graphics } from '@pixi/graphics';\nimport { Sprite } from '@pixi/sprite';\n\nexport type EaseMethod = (input: number) => number;\n\n// NOTE ABOUT KEYS OF TweenProps: Use \"(myProps[key] as any) = myVal;\"\n// Typescript is unhelpful in this case: https://github.com/microsoft/TypeScript/issues/31663\nexport interface TweenProps {\n    x?: number;\n    y?: number;\n    sx?: number;\n    sy?: number;\n    kx?: number;\n    ky?: number;\n    r?: number;\n    a?: number;\n    t?: number;\n    v?: boolean;\n    c?: number[];\n    m?: Graphics|Sprite;\n    g?: any;\n    /** Eases for any of the tweenable properties, if published as a per-property ease */\n    e?: {[P in TweenablePropNames]?: EaseMethod|{n: string; s: number}};\n}\n\nexport type TweenablePropNames = keyof Omit<TweenProps, 'm'|'g'|'e'|'v'>;\n\nexport interface TweenData\n{\n    d: number;\n    p: TweenProps;\n    e?: EaseMethod|{n: string; s: number};\n}\n\nexport interface KeyframeData extends TweenProps\n{\n    /** Not tweenable, but information about a tween that starts on this frame */\n    tw?: TweenData;\n}\n\n// standard tweening\nfunction lerpValue(start: number, end: number, t: number): number\n{\n    return start + ((end - start) * t);\n}\n\nconst PI = Math.PI;\nconst TWO_PI = PI * 2;\n\n// handle 355 -> 5 degrees only going through a 10 degree change instead of\n// the long way around\n// Math from http://stackoverflow.com/a/2708740\nfunction lerpRotation(start: number, end: number, t: number): number\n{\n    const difference = Math.abs(end - start);\n\n    if (difference > PI)\n    {\n        // We need to add on to one of the values.\n        if (end > start)\n        {\n            // We'll add it on to start...\n            start += TWO_PI;\n        }\n        else\n        {\n            // Add it on to end.\n            end += PI + TWO_PI;\n        }\n    }\n\n    // Interpolate it.\n    const value = (start + ((end - start) * t));\n\n    // wrap to 0-2PI\n    /* if (value >= 0 && value <= TWO_PI)\n        return value;\n    return value % TWO_PI;*/\n\n    // just return, as it's faster\n    return value;\n}\n\n// split r, g, b into separate values for tweening\nfunction lerpTint(start: number, end: number, t: number): number\n{\n    // split start color into components\n    const sR = (start >> 16) & 0xFF;\n    const sG = (start >> 8) & 0xFF;\n    const sB = start & 0xFF;\n    // split end color into components\n    const eR = (end >> 16) & 0xFF;\n    const eG = (end >> 8) & 0xFF;\n    const eB = end & 0xFF;\n    // lerp red\n    let r = sR + ((eR - sR) * t);\n\n    // clamp red to valid values\n    if (r < 0) r = 0;\n    else if (r > 255) r = 255;\n    // lerp green\n    let g = sG + ((eG - sG) * t);\n\n    // clamp green to valid values\n    if (g < 0) g = 0;\n    else if (g > 255) g = 255;\n    // lerp blue\n    let b = sB + ((eB - sB) * t);\n\n    // clamp blue to valid values\n    if (b < 0) b = 0;\n    else if (b > 255) b = 255;\n\n    const combined = (r << 16) | (g << 8) | b;\n\n    return combined;\n}\n\nconst COLOR_HELPER: number[] = [];\n\nfunction lerpColor(start: number[], end: number[], t: number): number[]\n{\n    COLOR_HELPER[0] = start[0] + ((end[0] - start[0]) * t);\n    COLOR_HELPER[1] = start[1] + ((end[1] - start[1]) * t);\n    COLOR_HELPER[2] = start[2] + ((end[2] - start[2]) * t);\n    COLOR_HELPER[3] = start[3] + ((end[3] - start[3]) * t);\n    COLOR_HELPER[4] = start[4] + ((end[4] - start[4]) * t);\n    COLOR_HELPER[5] = start[5] + ((end[5] - start[5]) * t);\n\n    return COLOR_HELPER;\n}\n\nconst PROP_LERPS: {[P in keyof TweenProps]: (start: number, end: number, t: number) => number} = {\n    // position\n    x: lerpValue,\n    y: lerpValue,\n    // scale\n    sx: lerpValue,\n    sy: lerpValue,\n    // skew\n    kx: lerpValue,\n    ky: lerpValue,\n    // rotation\n    r: lerpRotation,\n    // alpha\n    a: lerpValue,\n    // tinting\n    t: lerpTint,\n    // values to be set\n    v: null, // visible\n    c: lerpColor as any, // colorTransform\n    m: null, // mask\n    g: null, // not sure if we'll actually handle graphics this way?\n};\n\nfunction setPropFromShorthand(target: AnimateDisplayObject, prop: keyof TweenProps, value: any): void\n{\n    switch (prop)\n    {\n        case 'x':\n            target.transform.position.x = value;\n            break;\n        case 'y':\n            target.transform.position.y = value;\n            break;\n        case 'sx':\n            target.transform.scale.x = value;\n            break;\n        case 'sy':\n            target.transform.scale.y = value;\n            break;\n        case 'kx':\n            target.transform.skew.x = value;\n            break;\n        case 'ky':\n            target.transform.skew.y = value;\n            break;\n        case 'r':\n            target.transform.rotation = value;\n            break;\n        case 'a':\n            target.alpha = value;\n            break;\n        case 't':\n            target.i(value); // i = setTint\n            break;\n        case 'c':\n            target.setColorTransform(...value as [number, number, number, number, number, number]); // c = setColorTransform\n            break;\n        case 'v':\n            target.visible = value;\n            break;\n        case 'm':\n            target.ma(value); // ma = setMask\n            break;\n    }\n}\n\n// builds an ease in function for a specific exponential power, i.e. quadratic easing is power 2 and cubic is 3\nfunction buildPowIn(power: number): EaseMethod\n{\n    return (t): number => Math.pow(t, power);\n}\n\n// builds an ease out function for a specific exponential power, i.e. quadratic easing is power 2 and cubic is 3\nfunction buildPowOut(power: number): EaseMethod\n{\n    return (t): number => 1 - Math.pow(1 - t, power);\n}\n\n// builds an ease in & out function for a specific exponential power, i.e. quadratic easing is power 2 and cubic is 3\nfunction buildPowInOut(power: number): EaseMethod\n{\n    return (t): number =>\n    {\n        if ((t *= 2) < 1) return 0.5 * Math.pow(t, power);\n\n        return 1 - (0.5 * Math.abs(Math.pow(2 - t, power)));\n    };\n}\nconst ELASTIC_AMPLITUDE = 1;\nconst ELASTIC_PERIOD = 0.3;\nconst ELASTIC_INOUT_PERIOD = 0.3 * 1.5;\n\nconst EASE_DICT: { [name: string]: EaseMethod } = {\n    quadIn: buildPowIn(2),\n    quadOut: buildPowOut(2),\n    quadInOut: buildPowInOut(2),\n    cubicIn: buildPowIn(3),\n    cubicOut: buildPowOut(3),\n    cubicInOut: buildPowInOut(3),\n    quartIn: buildPowIn(4),\n    quartOut: buildPowOut(4),\n    quartInOut: buildPowInOut(4),\n    quintIn: buildPowIn(5),\n    quintOut: buildPowOut(5),\n    quintInOut: buildPowInOut(5),\n    sineIn: (t) => 1 - Math.cos(t * PI / 2),\n    sineOut: (t) => Math.sin(t * PI / 2),\n    sineInOut: (t) => -0.5 * (Math.cos(PI * t) - 1),\n    backIn: (t) => t * t * (((1.7 + 1) * t) - 1.7),\n    backOut: (t) => (--t * t * (((1.7 + 1) * t) + 1.7)) + 1,\n    backInOut: (t) =>\n    {\n        const constVal = 1.7 * 1.525;\n\n        if ((t *= 2) < 1) return 0.5 * (t * t * (((constVal + 1) * t) - constVal));\n\n        return 0.5 * (((t -= 2) * t * (((constVal + 1) * t) + constVal)) + 2);\n    },\n    circIn: (t) => -(Math.sqrt(1 - (t * t)) - 1),\n    circOut: (t) => Math.sqrt(1 - ((--t) * t)),\n    circInOut: (t) =>\n    {\n        if ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - (t * t)) - 1);\n\n        return 0.5 * (Math.sqrt(1 - ((t -= 2) * t)) + 1);\n    },\n    bounceIn: (t) => 1 - EASE_DICT.bounceOut(1 - t),\n    bounceOut: (t) =>\n    {\n        if (t < 1 / 2.75)\n        {\n            return 7.5625 * t * t;\n        }\n        else if (t < 2 / 2.75)\n        {\n            return (7.5625 * (t -= 1.5 / 2.75) * t) + 0.75;\n        }\n        else if (t < 2.5 / 2.75)\n        {\n            return (7.5625 * (t -= 2.25 / 2.75) * t) + 0.9375;\n        }\n\n        return (7.5625 * (t -= 2.625 / 2.75) * t) + 0.984375;\n    },\n    // eslint-disable-next-line no-confusing-arrow\n    bounceInOut: (t) => t < 0.5 ? EASE_DICT.bounceIn(t * 2) * 0.5 : (EASE_DICT.bounceOut((t * 2) - 1) * 0.5) + 0.5,\n    elasticIn: (t) =>\n    {\n        if (t === 0 || t === 1) return t;\n        const s = ELASTIC_PERIOD / TWO_PI * Math.asin(1 / ELASTIC_AMPLITUDE);\n\n        return -(ELASTIC_AMPLITUDE * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TWO_PI / ELASTIC_PERIOD));\n    },\n    elasticOut: (t) =>\n    {\n        if (t === 0 || t === 1) return t;\n        const s = ELASTIC_PERIOD / TWO_PI * Math.asin(1 / ELASTIC_AMPLITUDE);\n\n        return (ELASTIC_AMPLITUDE * Math.pow(2, -10 * t) * Math.sin((t - s) * TWO_PI / ELASTIC_PERIOD)) + 1;\n    },\n    elasticInOut: (t) =>\n    {\n        const s = ELASTIC_INOUT_PERIOD / TWO_PI * Math.asin(1 / ELASTIC_AMPLITUDE);\n\n        if ((t *= 2) < 1)\n        {\n            return -0.5 * (ELASTIC_AMPLITUDE * Math.pow(2, 10 * (t -= 1))\n                * Math.sin((t - s) * TWO_PI / ELASTIC_INOUT_PERIOD));\n        }\n\n        return (ELASTIC_AMPLITUDE * Math.pow(2, -10 * (t -= 1))\n            * Math.sin((t - s) * TWO_PI / ELASTIC_INOUT_PERIOD) * 0.5) + 1;\n    },\n};\n\nexport function getEaseFromConfig(config: EaseMethod | { n: string; s: number }): EaseMethod | null\n{\n    if (!config) return null;\n    if (typeof config === 'function') return config;\n    // TODO: use config (name, strength) to determine an ease method\n    // In order to figure that out, we need to test out Animate's actual output values so we know what to use.\n\n    if (config.n === 'classic')\n    {\n        const s = config.s / 100;\n\n        // (s + 1)t + (-s)(t^2)\n        return (t: number): number => ((s + 1) * t) + ((-s) * t * t);\n    }\n\n    return EASE_DICT[config.n];\n}\n\n/**\n * Provides timeline playback of movieclip\n */\nexport class Tween\n{\n    /**\n     * Target display object.\n     */\n    public target: AnimateDisplayObject;\n    /**\n     * Properties at the start of the tween\n     */\n    public startProps: TweenProps;\n    /**\n     * Properties at the end of the tween, as well as any properties that are set\n     * instead of tweened\n     */\n    public endProps: TweenProps;\n    /**\n     * duration of tween in frames. For a keyframe with no tweening, the duration will be 0.\n     */\n    public duration: number;\n    /**\n     * The frame that the tween starts on\n     */\n    public startFrame: number;\n    /**\n     * the frame that the tween ends on\n     */\n    public endFrame: number;\n    /**\n     * easing function to use, if any\n     */\n    public ease: {[P in TweenablePropNames]?: EaseMethod};\n    /**\n     * If we don't tween.\n     */\n    public isTweenlessFrame: boolean;\n\n    /**\n     * @param target The target to play\n     * @param startProps The starting properties\n     * @param endProps The ending properties\n     * @param startFrame frame number on which to begin tweening\n     * @param duration Number of frames to tween\n     * @param ease Ease function to use\n     */\n    constructor(target: AnimateDisplayObject,\n        startProps: TweenProps,\n        endProps: TweenProps|null,\n        startFrame: number,\n        duration: number,\n        ease?: EaseMethod)\n    {\n        this.target = target;\n        this.startProps = startProps;\n        this.endProps = {};\n        this.duration = duration;\n        this.startFrame = startFrame;\n        this.endFrame = startFrame + duration;\n        this.ease = {};\n        this.isTweenlessFrame = !endProps;\n\n        if (endProps)\n        {\n            // make a copy to safely include any unchanged values from the start of the tween\n            for (const prop in endProps)\n            {\n                if (prop === 'e') continue;\n                // read the end value\n                (this.endProps[prop as TweenablePropNames] as any) = endProps[prop as TweenablePropNames];\n                // if there is an ease for that property, use that\n                if (endProps.e?.[prop as TweenablePropNames])\n                {\n                    this.ease[prop as TweenablePropNames] = getEaseFromConfig(endProps.e[prop as TweenablePropNames]);\n                }\n                // otherwise use the global ease for this tween (if any)\n                else\n                {\n                    this.ease[prop as TweenablePropNames] = ease;\n                }\n            }\n        }\n\n        // copy in any starting properties don't change\n        for (const prop in startProps)\n        {\n            // eslint-disable-next-line no-prototype-builtins\n            if (!this.endProps.hasOwnProperty(prop))\n            {\n                (this.endProps[prop as keyof TweenProps] as any) = startProps[prop as keyof TweenProps];\n            }\n        }\n    }\n\n    /**\n     * Set the current frame.\n     */\n    public setPosition(currentFrame: number): void\n    {\n        // if this is a single frame with no tweening, or at the end of the tween, then\n        // just speed up the process by setting values\n        if (currentFrame >= this.endFrame)\n        {\n            this.setToEnd();\n\n            return;\n        }\n\n        if (this.isTweenlessFrame)\n        {\n            this.setToEnd();\n\n            return;\n        }\n\n        const time = (currentFrame - this.startFrame) / this.duration;\n\n        const target = this.target;\n        const startProps = this.startProps;\n        const endProps = this.endProps;\n\n        for (const prop in endProps)\n        {\n            const p = prop as keyof TweenProps;\n            const lerp = PROP_LERPS[p];\n            let lerpedTime = time;\n\n            if (this.ease[prop as TweenablePropNames])\n            {\n                lerpedTime = this.ease[prop as TweenablePropNames](time);\n            }\n\n            if (lerp)\n            {\n                setPropFromShorthand(target, p, lerp(startProps[p], endProps[p], lerpedTime));\n            }\n            else\n            {\n                setPropFromShorthand(target, p, startProps[p]);\n            }\n        }\n    }\n\n    /**\n     * Set to the end position\n     */\n    setToEnd(): void\n    {\n        const endProps = this.endProps;\n        const target = this.target;\n\n        for (const prop in endProps)\n        {\n            setPropFromShorthand(target, prop as keyof TweenProps, endProps[prop as keyof TweenProps]);\n        }\n    }\n}\n","import { Tween, TweenProps, EaseMethod } from './Tween';\nimport { AnimateDisplayObject } from './DisplayObject';\n\n/**\n * The Timeline class represents a series of tweens, tied to keyframes.\n */\nexport class Timeline extends Array<Tween>\n{\n    /**\n     * The target DisplayObject.\n     */\n    public target: AnimateDisplayObject;\n    /**\n     * Current properties in the tween, to make building the timeline more\n     * efficient.\n     */\n    private _currentProps: TweenProps;\n\n    /**\n     * Creates a new Timeline. Must be used instead of a constructor because extending the Array\n     * class is a pain: https://blog.simontest.net/extend-array-with-typescript-965cc1134b3\n     * @param target The target for this string of tweens.\n     * @returns A new Timeline instance.\n     */\n    public static create(target: AnimateDisplayObject): Timeline\n    {\n        const out = Object.create(Timeline.prototype) as Timeline;\n\n        out.target = target;\n        out._currentProps = {};\n\n        return out;\n    }\n\n    // exists to be private to prevent usage\n    private constructor()\n    {\n        super();\n    }\n\n    /**\n     * Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to\n     * remove them from the normal ticking system and managed by this timeline. Adding a tween to\n     * multiple timelines will result in unexpected behaviour.\n     * @method PIXI.animate.Timeline#addTween\n     * @param tween The tween(s) to add. Accepts multiple arguments.\n     * @return Tween The first tween that was passed in.\n     */\n    public addTween(properties: TweenProps, startFrame: number, duration: number, ease?: EaseMethod): void\n    {\n        this.extendLastFrame(startFrame - 1);\n        // figure out what the starting values for this tween should be\n        // ownership of startProps is passed to the new Tween - this object should not be reused\n        const startProps: TweenProps = Object.assign({}, this._currentProps);\n\n        for (const prop in properties)\n        {\n            const p = prop as keyof TweenProps;\n\n            // if we have not already set that property in an earlier tween, handle that property\n            if (!Object.hasOwnProperty.call(this._currentProps, prop))\n            {\n                const startValue = (startProps[p] as any) = this.getPropFromShorthand(p);\n\n                // go through previous tweens to set the value so that when the timeline loops\n                // around, the values are set properly - having each tween know what came before\n                // allows us to set to a specific frame without running through the entire timeline\n                for (let i = this.length - 1; i >= 0; --i)\n                {\n                    (this[i].startProps[p] as any) = startValue;\n                    (this[i].endProps[p] as any) = startValue;\n                }\n            }\n        }\n        // create the new Tween and add it to the list\n        const tween = new Tween(this.target, startProps, properties, startFrame, duration, ease);\n\n        // if we have this frame already, replace it\n        if (startFrame === this[this.length - 1].startFrame)\n        {\n            this[this.length - 1] = tween;\n        }\n        // otherwise add it to the list\n        else\n        {\n            this.push(tween);\n        }\n        // update starting values for the next tween - if tweened values included 'p', then Tween\n        // parsed that to add additional data that is required\n        Object.assign(this._currentProps, tween.endProps);\n    }\n\n    /**\n     * Add a single keyframe that doesn't tween.\n     * @method PIXI.animate.Timeline#addKeyframe\n     * @param {Object} properties The properties to set.\n     * @param {int} startFrame The starting frame index.\n     */\n    public addKeyframe(properties: TweenProps, startFrame: number): void\n    {\n        this.extendLastFrame(startFrame - 1);\n        const startProps = Object.assign({}, this._currentProps, properties);\n        // create the new Tween and add it to the list\n        const tween = new Tween(this.target, startProps, null, startFrame, 0);\n\n        this.push(tween);\n        Object.assign(this._currentProps, tween.endProps);\n    }\n\n    /**\n     * Extend the last frame of the tween.\n     * @method PIXI.animate.Timeline#extendLastFrame\n     * @param {int} endFrame The ending frame index.\n     */\n    public extendLastFrame(endFrame: number): void\n    {\n        if (this.length)\n        {\n            const prevTween = this[this.length - 1];\n\n            if (prevTween.endFrame < endFrame)\n            {\n                if (prevTween.isTweenlessFrame)\n                {\n                    prevTween.endFrame = endFrame;\n                }\n                else\n                {\n                    this.addKeyframe(\n                        this._currentProps,\n                        prevTween.endFrame + 1,\n                        // endFrame - prevTween.endFrame + 1\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the value for a property\n     * @method PIXI.animate.Timeline#getPropFromShorthand\n     * @param {string} prop\n     */\n    private getPropFromShorthand<P extends keyof TweenProps>(prop: P): TweenProps[P]\n    {\n        const target = this.target;\n\n        switch (prop)\n        {\n            case 'x':\n                return target.position.x as any;\n            case 'y':\n                return target.position.y as any;\n            case 'sx':\n                return target.scale.x as any;\n            case 'sy':\n                return target.scale.y as any;\n            case 'kx':\n                return target.skew.x as any;\n            case 'ky':\n                return target.skew.y as any;\n            case 'r':\n                return target.rotation as any;\n            case 'a':\n                return target.alpha as any;\n            case 'v':\n                return target.visible as any;\n            case 'm':\n                return target.mask as any;\n                // case 't':\n                //   return target.tint;\n                // not sure if we'll actually handle graphics this way?\n                // g: return null;\n        }\n\n        return null;\n    }\n\n    public destroy(): void\n    {\n        this._currentProps = null;\n        this.length = 0;\n    }\n}\n","import { EventEmitter } from '@pixi/utils';\n/**\n * @description Event emitter for all sound events. This emits a single\n * `play` event which contains the alias, loop and MovieClip which is playing\n * the sound.\n * @example\n *\n * PIXI.animate.sound.on('play', (alias, loop, context) => {\n *    // custom handle sounds being played\n *    // where 'alias' is the ID in stage assets\n * });\n */\nexport const sound = new EventEmitter();\n","import { ColorMatrixFilter } from '@pixi/filter-color-matrix';\nimport { Container } from '@pixi/display';\nimport { Graphics } from '@pixi/graphics';\nimport { Sprite } from '@pixi/sprite';\nimport { utils } from './utils';\n\n/**\n * Utility subclass of PIXI.Container\n */\nexport class AnimateContainer extends Container\n{\n    // **************************\n    //     Container methods\n    // **************************\n\n    /**\n     * Shortcut for `addChild`.\n     */\n    public ac = super.addChild;\n\n    // **************************\n    //     DisplayObject methods\n    // **************************\n\n    /**\n     * Function to set if this is renderable or not. Useful for setting masks.\n     * @param renderable Make renderable. Defaults to false.\n     * @return This instance, for chaining.\n     */\n    public setRenderable(renderable?: boolean): this\n    {\n        this.renderable = !!renderable;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setRenderable`.\n     */\n    public re = this.setRenderable;\n\n    /**\n     * Shortcut for `setTransform`.\n     */\n    public t = super.setTransform;\n\n    /**\n     * Setter for mask to be able to chain.\n     * @param mask The mask shape to use\n     * @return Instance for chaining\n     */\n    public setMask(mask: Graphics|Sprite): this\n    {\n        // According to PIXI, only Graphics and Sprites can\n        // be used as mask, let's ignore everything else, like other\n        // movieclips and displayobjects/containers\n        if (mask)\n        {\n            if (!(mask instanceof Graphics) && !(mask instanceof Sprite))\n            {\n                if (typeof console !== 'undefined' && console.warn)\n                {\n                    console.warn('Warning: Masks can only be PIXI.Graphics or PIXI.Sprite objects.');\n                }\n\n                return this;\n            }\n        }\n        this.mask = mask;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setMask`.\n     */\n    public ma = this.setMask;\n\n    /**\n     * Chainable setter for alpha\n     * @param alpha The alpha amount to use, from 0 to 1\n     * @return Instance for chaining\n     */\n    public setAlpha(alpha: number): this\n    {\n        this.alpha = alpha;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setAlpha`.\n     */\n    public a = this.setAlpha;\n\n    /**\n     * Set the tint values by color.\n     * @param tint The color value to tint\n     * @return Object for chaining\n     */\n    public setTint(tint: string|number): this\n    {\n        if (typeof tint === 'string')\n        {\n            tint = utils.hexToUint(tint);\n        }\n        // this.tint = tint\n        // return this;\n        // TODO: Replace with DisplayObject.tint setter\n        // once the functionality is added to Pixi.js, for\n        // now we'll use the slower ColorMatrixFilter to handle\n        // the color transformation\n        const r = (tint >> 16) & 0xFF;\n        const g = (tint >> 8) & 0xFF;\n        const b = tint & 0xFF;\n\n        return this.setColorTransform(r / 255, 0, g / 255, 0, b / 255, 0);\n    }\n    /**\n     * Shortcut for `setTint`.\n     */\n    public i = this.setTint;\n\n    /**\n     * Set additive and multiply color, tinting\n     * @param r The multiply red value\n     * @param rA The additive red value\n     * @param g The multiply green value\n     * @param gA The additive green value\n     * @param b The multiply blue value\n     * @param bA The additive blue value\n     * @return Object for chaining\n     */\n    public setColorTransform(r: number, rA: number, g: number, gA: number, b: number, bA: number): this\n    {\n        const filter = this.colorTransformFilter;\n\n        filter.matrix[0] = r;\n        filter.matrix[4] = rA;\n        filter.matrix[6] = g;\n        filter.matrix[9] = gA;\n        filter.matrix[12] = b;\n        filter.matrix[14] = bA;\n        this.filters = [filter];\n\n        return this;\n    }\n    /**\n     * Shortcut for `setColor`.\n     */\n    public c = this.setColorTransform;\n\n    protected _colorTransformFilter: ColorMatrixFilter;\n    /**\n     * The current default color transforming filters\n     */\n    public set colorTransformFilter(filter: ColorMatrixFilter)\n    {\n        this._colorTransformFilter = filter;\n    }\n    public get colorTransformFilter(): ColorMatrixFilter\n    {\n        return this._colorTransformFilter || new ColorMatrixFilter();\n    }\n}\n","import { Timeline } from './Timeline';\nimport { TweenProps, EaseMethod, getEaseFromConfig, KeyframeData } from './Tween';\nimport { utils } from './utils';\nimport { sound } from './sound';\nimport { AnimateContainer } from './Container';\nimport { AnimateDisplayObject } from './DisplayObject';\nimport { Ticker } from '@pixi/ticker';\nimport { settings } from '@pixi/settings';\nimport { Graphics } from '@pixi/graphics';\nimport { Sprite } from '@pixi/sprite';\nimport { IDestroyOptions } from '@pixi/display';\nconst SharedTicker = Ticker.shared;\n\nexport interface MovieClipOptions\n{\n    /**\n     * The default playback mode is independent (0). Child movieclips are given a different value as subordinate objects.\n     */\n    mode?: number;\n    /**\n     * The starting frame. Default is 0.\n     */\n    startPosition?: number;\n    /**\n     * If playback is looped. Default is true.\n     */\n    loop?: boolean;\n    /**\n     * The frame labels map - label to frames\n     */\n    labels?: LabelMap;\n    /**\n     * The duration of the clip. If no duration is provided, length is automatically determined.\n     */\n    duration?: number;\n    /**\n     * The framerate to use for an independent mode MovieClip. Default is 24.\n     */\n    framerate?: number;\n}\n\nexport interface FrameLabel\n{\n    label: string;\n    position: number;\n}\n\nexport interface LabelMap\n{\n    [label: string]: number;\n}\n\nexport type FrameAction = (this: MovieClip) => void;\n\ntype TimedChildTimeline = boolean[] & {target?: AnimateDisplayObject};\n\n/**\n * Provide timeline playback of movieclip\n */\nexport class MovieClip extends AnimateContainer\n{\n    /**\n     * The MovieClip will advance independently of its parent, even if its parent is paused.\n     * This is the default mode.\n     */\n    public static readonly INDEPENDENT = 0;\n\n    /**\n     * The MovieClip will only display a single frame (as determined by the startPosition property).\n     */\n    public static readonly SINGLE_FRAME = 1;\n\n    /**\n     * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n     * the parent MovieClip.\n     */\n    public static readonly SYNCHED = 2;\n\n    /**\n     * The default framerate if none is specified or there's not parent clip with a framerate.\n     */\n    public static readonly DEFAULT_FRAMERATE = 24;\n\n    /**\n     * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n     * See each constant for a description of the behaviour.\n     */\n    public mode: number;\n\n    /**\n     * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n     */\n    public startPosition: number;\n\n    /**\n     * Indicates whether this MovieClip should loop when it reaches the end of its timeline.\n     */\n    public loop: boolean;\n\n    /**\n     * The current frame of the movieclip.\n     * @readOnly\n     */\n    public currentFrame: number;\n\n    /**\n     * The collection of private labels\n     */\n    private _labels: FrameLabel[];\n\n    /**\n     * The collection of private labels\n     */\n    private _labelDict: LabelMap;\n\n    /**\n     * If true, this movieclip will animate automatically whenever it is on the stage.\n     */\n    public selfAdvance: boolean;\n\n    /**\n     * If true, the MovieClip's position will not advance when ticked.\n     */\n    public paused: boolean;\n\n    /**\n     * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n     */\n    public actionsEnabled: boolean;\n\n    /**\n     * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n     * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n     * <br><br>\n     * For example, if you had a character animation with a 'body' child MovieClip instance\n     * with different costumes on each frame, you could set body.autoReset = false, so that\n     * you can manually change the frame it is on, without worrying that it will be reset\n     * automatically.\n     */\n    public autoReset: boolean;\n\n    /**\n     * Offset from parent frame for a synched movieclip.\n     */\n    private _synchOffset: number;\n\n    /**\n     * Previous position that this movieclip was stopped on.\n     */\n    private _prevPos: number;\n\n    /**\n     * Note - changed from default: When the MovieClip is framerate independent, this is the time\n     * elapsed from frame 0 in seconds.\n     */\n    private _t: number;\n\n    /**\n     * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n     * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     */\n    protected _framerate: number;\n\n    /**\n     * The total time in seconds for the animation. This is changed when setting the framerate.\n     */\n    private _duration: number;\n\n    /**\n     * The total duration in frames for the animation.\n     */\n    private _totalFrames: number;\n\n    /**\n     * Standard tween timelines for all objects. Each element in the _timelines array\n     * is a Timeline object - an array of tweens for one target, in order of occurrence.\n     */\n    protected _timelines: Timeline[];\n\n    /**\n     * Array of child timelines denoting if a child is actively a child of this movieclip\n     * on any given frame. Each element in the _timedChildTimelines is an array with a 'target'\n     * property, and is an array of boolean values indexed by frame.\n     * @private\n     */\n    public _timedChildTimelines: TimedChildTimeline[];\n\n    /**\n     * Array to depth sort timed children\n     */\n    protected _depthSorted: AnimateDisplayObject[];\n\n    /**\n     * Array of frame scripts, indexed by frame.\n     */\n    protected _actions: FrameAction[][];\n\n    /**\n     * Optional callback fired before timeline is updated.\n     * Can be used to clamp or update the currentFrame.\n     * @private\n     */\n    public _beforeUpdate: (target: MovieClip) => (() => void|null);\n\n    /**\n     * Internal property used to control child MovieClips relative to parents.\n     */\n    private parentStartPosition: number;\n\n    /**\n     * @param options The options object\n     */\n    constructor(options?: MovieClipOptions);\n    /**\n     * @param mode The playback mode default is independent (0),\n     * @param startPosition The starting frame\n     * @param loop If playback is looped\n     * @param labels The frame labels map of label to frames\n     * @param duration The duration, if no duration is provided, auto determines length\n     * @param framerate The framerate to use for independent mode\n     */\n    constructor(mode?: number, duration?: number, loop?: boolean, framerate?: number, labels?: LabelMap);\n    constructor(options?: MovieClipOptions|number, duration?: number, loop?: boolean, framerate?: number, labels?: LabelMap)\n    {\n        super();\n\n        // Default options\n        options = options === undefined ? {} : options;\n\n        // Options can also be the mode\n        if (typeof options === 'number')\n        {\n            options = {\n                mode: options || MovieClip.INDEPENDENT,\n                duration: duration || 0,\n                loop: loop === undefined ? true : loop,\n                labels: labels || {},\n                framerate: framerate || 0,\n                startPosition: 0,\n            };\n        }\n        else\n        {\n            // Apply defaults to options\n            options = Object.assign({\n                mode: MovieClip.INDEPENDENT,\n                startPosition: 0,\n                loop: true,\n                labels: {},\n                duration: 0,\n                framerate: 0,\n            }, options);\n        }\n\n        this.mode = options.mode;\n        this.startPosition = options.startPosition;\n        this.loop = !!options.loop;\n        this.currentFrame = 0;\n        this._labels = [];\n        this._labelDict = options.labels;\n\n        if (options.labels)\n        {\n            for (const name in options.labels)\n            {\n                const label = {\n                    label: name,\n                    position: options.labels[name],\n                };\n\n                this._labels.push(label);\n            }\n            this._labels.sort((a, b) => a.position - b.position);\n        }\n\n        this.selfAdvance = true;\n        this.paused = false;\n        this.actionsEnabled = true;\n        this.autoReset = true;\n        this._synchOffset = 0;\n        this._prevPos = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n        this._t = 0;\n        this._framerate = options.framerate;\n        this._duration = 0;\n        this._totalFrames = options.duration;\n        this._timelines = [];\n        this._timedChildTimelines = [];\n        this._depthSorted = [];\n        this._actions = [];\n        this._beforeUpdate = null;\n        this.parentStartPosition = 0;\n\n        if (this.mode === MovieClip.INDEPENDENT)\n        {\n            this._tickListener = this._tickListener.bind(this);\n            this._onAdded = this._onAdded.bind(this);\n            this._onRemoved = this._onRemoved.bind(this);\n            this.on('added', this._onAdded);\n            this.on('removed', this._onRemoved);\n        }\n\n        if (options.framerate)\n        {\n            this.framerate = options.framerate;\n        }\n\n        // save often used methods on the instance so that they can be fetched slightly faster\n        // than if they had to be fetched from the prototype\n        /* eslint-disable no-self-assign */\n        this.advance = this.advance;\n        this._updateTimeline = this._updateTimeline;\n        this._setTimelinePosition = this._setTimelinePosition;\n        this._goto = this._goto;\n        /* eslint-enable no-self-assign */\n    }\n\n    private _onAdded(): void\n    {\n        if (!this._framerate)\n        {\n            this.framerate = this.parentFramerate;\n        }\n        SharedTicker.add(this._tickListener, null);\n    }\n\n    private _tickListener(tickerDeltaTime: number): void\n    {\n        if (this.paused || !this.selfAdvance)\n        {\n            // see if the movieclip needs to be updated even though it isn't animating\n            if (this._prevPos < 0)\n            {\n                this._goto(this.currentFrame);\n            }\n\n            return;\n        }\n        const seconds = tickerDeltaTime / settings.TARGET_FPMS / 1000;\n\n        this.advance(seconds);\n    }\n\n    private _onRemoved(): void\n    {\n        SharedTicker.remove(this._tickListener, null);\n    }\n\n    /**\n     * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n     */\n    public get labels(): FrameLabel[]\n    {\n        return this._labels;\n    }\n\n    /**\n     * Returns a dictionary of labels where key is the label and value is the frame.\n     */\n    public get labelsMap(): LabelMap\n    {\n        return this._labelDict;\n    }\n\n    /**\n     * Returns the name of the label on or immediately before the current frame.\n     */\n    public get currentLabel(): string|null\n    {\n        const labels = this._labels;\n        let current: string = null;\n\n        for (let i = 0, len = labels.length; i < len; ++i)\n        {\n            if (labels[i].position <= this.currentFrame)\n            {\n                current = labels[i].label;\n            }\n            else\n            {\n                break;\n            }\n        }\n\n        return current;\n    }\n\n    /**\n     * When the MovieClip is framerate independent, this is the time elapsed from frame 0 in seconds.\n     */\n    public get elapsedTime(): number\n    {\n        return this._t;\n    }\n\n    public set elapsedTime(value)\n    {\n        this._t = value;\n    }\n\n    /**\n     * By default MovieClip instances advance one frame per tick. Specifying a framerate for the\n     * MovieClip will cause it to advance based on elapsed time between ticks as appropriate to\n     * maintain the target framerate.\n     *\n     * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at\n     * 40fps, then the MovieClip advance roughly one frame every 4 ticks. This will not be exact,\n     * because the time between each tick vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate 'delta' property) being\n     * passed into {{#crossLink 'Stage/update'}}{{/crossLink}}.\n     */\n    public get framerate(): number\n    {\n        return this._framerate;\n    }\n    public set framerate(value)\n    {\n        if (value > 0)\n        {\n            if (this._framerate)\n            {\n                // recalculate time based on difference between new and old framerate:\n                this._t *= this._framerate / value;\n            }\n            else\n            {\n                this._t = this.currentFrame / value;\n            }\n            this._framerate = value;\n            this._duration = value ? this._totalFrames / value : 0;\n        }\n        else\n        {\n            this._t = this._framerate = this._duration = 0;\n        }\n    }\n\n    /**\n     * Get the total number of frames (duration) of this MovieClip\n     */\n    public get totalFrames(): number\n    {\n        return this._totalFrames;\n    }\n\n    /**\n     * Extend the timeline to the last frame.\n     */\n    private _autoExtend(endFrame: number): void\n    {\n        if (this._totalFrames < endFrame)\n        {\n            this._totalFrames = endFrame;\n        }\n    }\n\n    /**\n     * Convert values of properties\n     */\n    private _parseProperties(properties: TweenProps & {t?: string|number; v?: number|boolean}): void\n    {\n        // Convert any string colors to uints\n        if (typeof properties.t === 'string')\n        {\n            properties.t = utils.hexToUint(properties.t);\n        }\n        else if (typeof properties.v === 'number')\n        {\n            properties.v = !!properties.v;\n        }\n    }\n\n    /**\n     * Get a timeline for a child, synced timeline.\n     */\n    private _getChildTimeline(instance: AnimateDisplayObject): Timeline\n    {\n        for (let i = this._timelines.length - 1; i >= 0; --i)\n        {\n            if (this._timelines[i].target === instance)\n            {\n                return this._timelines[i];\n            }\n        }\n        const timeline = Timeline.create(instance);\n\n        this._timelines.push(timeline);\n\n        return timeline;\n    }\n\n    /**\n     * Add mask or masks\n     */\n    public addTimedMask(instance: AnimateDisplayObject, keyframes: {[frame: number]: Graphics|Sprite}): this\n    {\n        for (const i in keyframes)\n        {\n            this.addKeyframe(instance, {\n                m: keyframes[i],\n            }, parseInt(i, 10));\n        }\n\n        // Set the initial position/add\n        this._setTimelinePosition(this.currentFrame, this.currentFrame, true);\n\n        return this;\n    }\n\n    /**\n     * Shortcut alias for `addTimedMask`\n     */\n    public am = this.addTimedMask;\n\n    /**\n     * Shortcut alias for `addTween`\n     */\n    public tw = this.addTween;\n\n    /**\n     * Add a tween to the clip\n     * @param instance The clip to tween\n     * @param properties The property or property to tween\n     * @param startFrame The frame to start tweening\n     * @param duration Number of frames to tween. If 0, then the properties are set with no tweening.\n     * @param ease An optional easing function that takes the tween time from 0-1.\n     */\n    public addTween(instance: AnimateDisplayObject,\n        properties: TweenProps,\n        startFrame: number,\n        duration?: number,\n        ease?: EaseMethod): this\n    {\n        const timeline = this._getChildTimeline(instance);\n\n        this._parseProperties(properties);\n        timeline.addTween(properties, startFrame, duration, ease);\n        this._autoExtend(startFrame + duration);\n\n        return this;\n    }\n\n    /**\n     * Add a tween to the clip\n     * @param instance The clip to tween\n     * @param properties The property or property to tween\n     * @param startFrame The frame to start tweening\n     */\n    public addKeyframe(instance: AnimateDisplayObject, properties: KeyframeData, startFrame: number): this\n    {\n        const timeline = this._getChildTimeline(instance);\n        const { tw } = properties;\n\n        // remove tw property just so that it doesn't mess anything up or confuse anyone doing debugging\n        delete properties.tw;\n        this._parseProperties(properties);\n        // add keyframe - note that even if we add a tween immediately afterwards, we want to\n        // add this keyframe in order to make sure the starting properties are set\n        timeline.addKeyframe(properties, startFrame);\n        this._autoExtend(startFrame);\n        // Add a tween if present in the keyframe data\n        if (tw)\n        {\n            this.addTween(instance, tw.p, startFrame, tw.d, getEaseFromConfig(tw.e));\n        }\n\n        return this;\n    }\n\n    /**\n     * Alias for method `addTimedChild`\n     */\n    public at = this.addTimedChild;\n\n    /**\n     * Add a child to show for a certain number of frames before automatic removal.\n     * @param instance The clip to show\n     * @param startFrame The starting frame\n     * @param duration The number of frames to display the child before removing it.\n     * @param keyframes The collection of static keyframes to add\n     */\n    public addTimedChild(instance: AnimateDisplayObject,\n        startFrame: number,\n        duration?: number,\n        keyframes?: string|{[frame: number]: TweenProps}): this\n    {\n        if (startFrame === undefined) // jshint ignore:line\n        {\n            startFrame = 0;\n        }\n        if (duration === undefined || duration < 1) // jshint ignore:line\n        {\n            duration = this._totalFrames || 1;\n        }\n\n        // Add the starting offset for synced movie clips\n        if (instance instanceof MovieClip && instance.mode === MovieClip.SYNCHED)\n        {\n            (instance as MovieClip).parentStartPosition = startFrame;\n        }\n\n        // add tweening info about this child's presence on stage\n        // when the child is (re)added, if it has 'autoReset' set to true, then it\n        // should be set back to frame 0\n        let timeline: TimedChildTimeline;\n\n        // get existing timeline\n        for (let i = this._timedChildTimelines.length - 1; i >= 0; --i)\n        {\n            if (this._timedChildTimelines[i].target === instance)\n            {\n                timeline = this._timedChildTimelines[i];\n                break;\n            }\n        }\n        // if there wasn't one, make a new one\n        if (!timeline)\n        {\n            timeline = [];\n            timeline.target = instance;\n            this._timedChildTimelines.push(timeline);\n        }\n\n        // Fill the timeline with keyframe booleans\n        utils.fillFrames(timeline, startFrame, duration);\n\n        // Update the total frames if the instance extends our current\n        // total frames for this movieclip\n        if (this._totalFrames < startFrame + duration)\n        {\n            this._totalFrames = startFrame + duration;\n        }\n\n        // Add the collection of keyframes\n        if (keyframes)\n        {\n            if (typeof keyframes === 'string')\n            {\n                keyframes = utils.deserializeKeyframes(keyframes);\n            }\n            for (const i in keyframes)\n            {\n                this.addKeyframe(instance, keyframes[i], parseInt(i, 10));\n            }\n            this._getChildTimeline(instance)\n                // subtract 1 from duration because we are using 0 based frame indices\n                // and duration is calculated as total frames\n                .extendLastFrame(startFrame + duration - 1);\n        }\n\n        // Set the initial position/add\n        this._setTimelinePosition(startFrame, this.currentFrame, true);\n\n        return this;\n    }\n\n    /**\n     * Short cut for `addAction`\n     */\n    public aa = this.addAction;\n\n    /**\n     * Handle frame actions, callback is bound to the instance of the MovieClip.\n     * @param callback The clip call on a certain frame\n     * @param startFrame The starting frame index or label\n     */\n    public addAction(callback: FrameAction, startFrame: number|string): this\n    {\n        if (typeof startFrame === 'string')\n        {\n            const index = this._labelDict[startFrame];\n\n            if (index === undefined)\n            {\n                throw new Error(`The label '${startFrame}' does not exist on this timeline`);\n            }\n            startFrame = index;\n        }\n\n        const actions = this._actions;\n\n        // ensure that the movieclip timeline is long enough to support the target frame\n        if (actions.length <= startFrame)\n        {\n            actions.length = startFrame + 1;\n        }\n        if (this._totalFrames < startFrame)\n        {\n            this._totalFrames = startFrame;\n        }\n        // add the action\n        if (actions[startFrame])\n        {\n            actions[startFrame].push(callback);\n        }\n        else\n        {\n            actions[startFrame] = [callback];\n        }\n\n        return this;\n    }\n\n    /**\n     * Short cut for `playSound`\n     */\n    public ps = this.playSound;\n\n    /**\n     * Handle sounds.\n     * @method PIXI.animate.MovieClip#playSound\n     * @param {String} alias The name of the Sound\n     * @param {Boolean} [loop=false] The loop property of the sound\n     */\n    public playSound(alias: string, loop?: boolean): this\n    {\n        sound.emit('play', alias, !!loop, this);\n\n        return this;\n    }\n\n    /**\n     * Sets paused to false.\n     */\n    play(): void\n    {\n        this.paused = false;\n    }\n\n    /**\n     * Sets paused to true.\n     */\n    stop(): void\n    {\n        this.paused = true;\n    }\n\n    /**\n     * Advances this movie clip to the specified position or label and sets paused to false.\n     * @param positionOrLabel The animation name or frame number to go to.\n     */\n    public gotoAndPlay(positionOrLabel: string|number): void\n    {\n        this.paused = false;\n        this._goto(positionOrLabel);\n    }\n\n    /**\n     * Advances this movie clip to the specified position or label and sets paused to true.\n     * @param positionOrLabel The animation or frame name to go to.\n     */\n    public gotoAndStop(positionOrLabel: string|number): void\n    {\n        this.paused = true;\n        this._goto(positionOrLabel);\n    }\n\n    /**\n     * Get the close parent with a valid framerate. If no parent, returns the default framerate.\n     */\n    public get parentFramerate(): number\n    {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let o: MovieClip = this;\n        let fps = o._framerate;\n\n        while ((o = o.parent as MovieClip) && !fps)\n        {\n            if (o.mode === MovieClip.INDEPENDENT)\n            {\n                fps = o._framerate;\n            }\n        }\n\n        return fps || MovieClip.DEFAULT_FRAMERATE;\n    }\n\n    /**\n     * Advances the playhead. This occurs automatically each tick by default.\n     * @param time The amount of time in seconds to advance by. Only applicable if framerate is set.\n     */\n    public advance(time?: number): void\n    {\n        // Handle any other cases where starting to play\n        // and no framerate has been set yet\n        if (!this._framerate)\n        {\n            this.framerate = this.parentFramerate;\n        }\n\n        if (time)\n        {\n            this._t += time;\n        }\n        if (this._t > this._duration)\n        {\n            this._t = this.loop ? this._t % this._duration : this._duration;\n        }\n        // add a tiny amount to account for potential floating point errors\n        this.currentFrame = Math.floor((this._t * this._framerate) + 0.00000001);\n        // final error checking\n        if (this.currentFrame >= this._totalFrames)\n        {\n            this.currentFrame = this._totalFrames - 1;\n        }\n        let afterUpdateOnce;\n\n        if (this._beforeUpdate)\n        {\n            afterUpdateOnce = this._beforeUpdate(this);\n        }\n        // update all tweens & actions in the timeline\n        this._updateTimeline();\n\n        // Do the animator callback here\n        if (afterUpdateOnce)\n        {\n            afterUpdateOnce();\n        }\n    }\n\n    /**\n     * @param positionOrLabel The animation name or frame number to go to.\n     */\n    protected _goto(positionOrLabel: string|number): void\n    {\n        const pos = typeof positionOrLabel === 'string' ? this._labelDict[positionOrLabel] : positionOrLabel;\n\n        if (pos === undefined) // jshint ignore:line\n        {\n            return;\n        }\n        // prevent _updateTimeline from overwriting the new position because of a reset:\n        this._prevPos = NaN;\n        this.currentFrame = pos;\n\n        // Handle the case where trying to play but haven't\n        // added to the stage yet\n        if (!this._framerate)\n        {\n            this.framerate = this.parentFramerate;\n        }\n\n        // update the elapsed time if a time based movieclip\n        if (this._framerate > 0)\n        {\n            this._t = pos / this._framerate;\n        }\n        else\n        {\n            this._t = 0;\n        }\n        this._updateTimeline();\n    }\n\n    /**\n     * Reset the movieclip to the first frame (without advancing the timeline).\n     */\n    private _reset(): void\n    {\n        this._prevPos = -1;\n        this._t = 0;\n        this.currentFrame = 0;\n    }\n\n    /**\n     * Update timeline position according to playback, performing actions and updating children.\n     * @private\n     */\n    public _updateTimeline(): void\n    {\n        const synched = this.mode !== MovieClip.INDEPENDENT;\n\n        if (synched)\n        {\n            this.currentFrame = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset);\n            if (this.currentFrame >= this._totalFrames)\n            {\n                this.currentFrame %= this._totalFrames;\n            }\n        }\n\n        if (this._prevPos === this.currentFrame)\n        {\n            return;\n        }\n\n        // update timeline position, ignoring actions if this is a graphic.\n        this._setTimelinePosition(this._prevPos, this.currentFrame, synched ? false : this.actionsEnabled);\n\n        this._prevPos = this.currentFrame;\n    }\n\n    /**\n     * Set the timeline position\n     */\n    protected _setTimelinePosition(startFrame: number, currentFrame: number, doActions: boolean): void\n    {\n        if (startFrame !== currentFrame && doActions)\n        {\n            let startPos: number;\n\n            if (isNaN(startFrame))\n            {\n                startPos = currentFrame;\n            }\n            else\n            {\n                startPos = (startFrame >= this._totalFrames - 1 ? 0 : startFrame + 1);\n            }\n            // generate actionFrames on the way\n            const actionFrames: number[] = [];\n\n            // loop\n            if (currentFrame < startPos)\n            {\n                for (let i = startPos; i < this._actions.length; ++i)\n                {\n                    if (this._actions[i])\n                    {\n                        actionFrames.push(i);\n                    }\n                }\n                for (let i = 0; i <= currentFrame; ++i)\n                {\n                    if (this._actions[i])\n                    {\n                        actionFrames.push(i);\n                    }\n                }\n            }\n            // no loop\n            else\n            {\n                for (let i = startPos; i <= currentFrame; ++i)\n                {\n                    if (this._actions[i])\n                    {\n                        actionFrames.push(i);\n                    }\n                }\n            }\n\n            if (actionFrames.length)\n            {\n                const oldCurrentFrame = this.currentFrame;\n\n                for (let i = 0; i < actionFrames.length; ++i)\n                {\n                    const frame = actionFrames[i];\n\n                    this._setTimelinePosition(frame, frame, true);\n                    // _goto is called OR last frame reached\n                    if (this.currentFrame !== oldCurrentFrame || frame === currentFrame)\n                    {\n                        return;\n                    }\n                    // stop is called\n                    else if (this.paused)\n                    {\n                        this.currentFrame = frame;\n\n                        return;\n                    }\n                }\n            }\n        }\n\n        // handle all tweens\n        const _timelines = this._timelines;\n\n        for (let i = _timelines.length - 1; i >= 0; --i)\n        {\n            const timeline = _timelines[i];\n\n            for (let j = 0, length = timeline.length; j < length; ++j)\n            {\n                const tween = timeline[j];\n\n                // if the tween contains part of the timeline that we are travelling through\n                if (currentFrame >= tween.startFrame && currentFrame <= tween.endFrame)\n                {\n                    // set the position within that tween\n                    // and break the loop to move onto the next timeline\n                    tween.setPosition(currentFrame);\n                    break;\n                }\n            }\n        }\n\n        const timedChildTimelines = this._timedChildTimelines;\n        const depthSorted = this._depthSorted;\n\n        for (let i = 0, length = timedChildTimelines.length; i < length; ++i)\n        {\n            const target = timedChildTimelines[i].target;\n            const shouldBeChild = timedChildTimelines[i][currentFrame];\n\n            // if child should be on stage and is not:\n            if (shouldBeChild)\n            {\n                // Add to the depthSorted object so we can\n                // check that items are property drawn later\n                depthSorted.push(target);\n                if (target.parent !== this)\n                {\n                    // add the target if it's not there already\n                    this.addChild(target);\n                    if (target instanceof MovieClip && target.mode === MovieClip.INDEPENDENT && target.autoReset)\n                    {\n                        target._reset();\n                    }\n                }\n            }\n            else if (!shouldBeChild && target.parent === this)\n            {\n                this.removeChild(target);\n            }\n        }\n\n        // Properly depth sort the children\n        for (let i = 0, length = depthSorted.length; i < length; i++)\n        {\n            const target = depthSorted[i];\n            const currentIndex = this.children.indexOf(target);\n\n            if (currentIndex !== i)\n            {\n                this.addChildAt(target, i);\n            }\n        }\n\n        // Clear the temporary depth sorting array\n        depthSorted.length = 0;\n\n        // go through all children and update synched movieclips that are not single frames\n        const children = this.children;\n\n        for (let i = 0, length = children.length; i < length; ++i)\n        {\n            const child = children[i];\n\n            if (child instanceof MovieClip && child.mode === MovieClip.SYNCHED)\n            {\n                child._synchOffset = currentFrame - child.parentStartPosition;\n                child._updateTimeline();\n            }\n        }\n\n        // handle actions\n        if (doActions && this._actions && this._actions[currentFrame])\n        {\n            const frameActions = this._actions[currentFrame];\n\n            for (let j = 0; j < frameActions.length; ++j)\n            {\n                frameActions[j].call(this);\n            }\n        }\n    }\n\n    destroy(options?: IDestroyOptions|boolean): void\n    {\n        if (this._tickListener)\n        {\n            SharedTicker.remove(this._tickListener, null);\n            this._tickListener = null;\n        }\n        const hiddenChildren = [];\n        const timelines = this._timelines;\n\n        if (timelines)\n        {\n            for (let i = 0; i < timelines.length; i++)\n            {\n                const timeline = timelines[i];\n\n                hiddenChildren.push(timeline.target);\n                timeline.destroy();\n            }\n        }\n        const childTimelines = this._timedChildTimelines;\n\n        if (childTimelines)\n        {\n            for (let i = 0; i < childTimelines.length; i++)\n            {\n                const timeline = childTimelines[i];\n\n                if (hiddenChildren.indexOf(timeline.target) < 0)\n                {\n                    hiddenChildren.push(timeline.target);\n                }\n                timeline.length = 0;\n            }\n        }\n        // Destroy all the children\n        for (let i = 0; i < hiddenChildren.length; i++)\n        {\n            // Don't destroy children in the display list\n            if (this.children.indexOf(hiddenChildren[i]) < 0)\n            {\n                hiddenChildren[i].destroy(options as IDestroyOptions);\n            }\n        }\n        hiddenChildren.length = 0;\n        this._actions = null;\n        this._timelines = null;\n        this._depthSorted = null;\n        this._timedChildTimelines = null;\n        this._beforeUpdate = null;\n        this._labels = null;\n        this._labelDict = null;\n        super.destroy(options as IDestroyOptions);\n    }\n}\n","import { DrawCommands } from './Graphics';\nimport { TweenProps, KeyframeData, TweenData, TweenablePropNames } from './Tween';\nimport { MovieClip } from './MovieClip';\nimport { DisplayObject } from '@pixi/display';\nimport { Renderer } from '@pixi/core';\nimport { Prepare } from '@pixi/prepare';\n\n// If the movieclip plugin is installed\nlet _prepare: Prepare = null;\n\n/* eslint-disable @typescript-eslint/no-namespace, no-inner-declarations */\n// awkwardly named instead of the final export of 'utils' to avoid problems in .d.ts build tools.\nexport namespace utils {\n\n    /**\n     * Convert the Hexidecimal string (e.g., \"#fff\") to uint\n     */\n    export function hexToUint(hex: string): number\n    {\n        // Remove the hash\n        hex = hex.substr(1);\n\n        // Convert shortcolors fc9 to ffcc99\n        if (hex.length === 3)\n        {\n            hex = hex.replace(/([a-f0-9])/g, '$1$1');\n        }\n\n        return parseInt(hex, 16);\n    }\n\n    /**\n     * Fill frames with booleans of true (showing) and false (hidden).\n     * @param timeline\n     * @param startFrame The start frame when the timeline shows up\n     * @param duration The length of showing\n     */\n    export function fillFrames(timeline: boolean[], startFrame: number, duration: number): void\n    {\n        // ensure that the timeline is long enough\n        const oldLength = timeline.length;\n\n        if (oldLength < startFrame + duration)\n        {\n            timeline.length = startFrame + duration;\n            // fill any gaps with false to denote that the child should be removed for a bit\n            if (oldLength < startFrame)\n            {\n                // if the browser has implemented the ES6 fill() function, use that\n                if (timeline.fill)\n                {\n                    timeline.fill(false, oldLength, startFrame);\n                }\n                else\n                {\n                    // if we can't use fill, then do a for loop to fill it\n                    for (let i = oldLength; i < startFrame; ++i)\n                    {\n                        timeline[i] = false;\n                    }\n                }\n            }\n        }\n        // if the browser has implemented the ES6 fill() function, use that\n        if (timeline.fill)\n        {\n            timeline.fill(true, startFrame, startFrame + duration);\n        }\n        else\n        {\n            const length = timeline.length;\n            // if we can't use fill, then do a for loop to fill it\n\n            for (let i = startFrame; i < length; ++i)\n            {\n                timeline[i] = true;\n            }\n        }\n    }\n\n    const keysMap: {[s: string]: keyof TweenProps} = {\n        X: 'x', // x position\n        Y: 'y', // y position\n        A: 'sx', // scale x\n        B: 'sy', // scale y\n        C: 'kx', // skew x\n        D: 'ky', // skew y\n        R: 'r', // rotation\n        L: 'a', // alpha\n        T: 't', // tint\n        F: 'c', // colorTransform\n        V: 'v', // visibility\n    };\n\n    /**\n     * Parse the value of the compressed keyframe.\n     * @param prop The property key\n     * @param buffer The contents\n     * @return The parsed value\n     */\n    function parseValue(prop: string, buffer: string): string|number|boolean|(string|number)[]\n    {\n        switch (prop)\n        {\n            // Color transforms are parsed as an array\n            case 'c':\n            {\n                const buff: (string|number)[] = buffer.split(',');\n\n                buff.forEach((val, i, buffer) =>\n                {\n                    buffer[i] = parseFloat(val as string);\n                });\n\n                return buff;\n            }\n            // Tint value should not be converted\n            // can be color uint or string\n            case 't':\n            {\n                return buffer;\n            }\n            // The visiblity parse as boolean\n            case 'v':\n            {\n                return !!parseInt(buffer, 10);\n            }\n            // Everything else parse a floats\n            default:\n            {\n                return parseFloat(buffer);\n            }\n        }\n    }\n\n    const tweenKeysMap: { [s: string]: keyof TweenData } = {\n        D: 'd', // duration\n        // E: 'e', // easing - disabled for manual handling\n        P: 'p', // props\n    };\n\n    /**\n     * Regex to test for a basic ease desccriptor\n     */\n    const basicEase = /(\\-?\\d*\\.?\\d*)([a-zA-Z]+)/;\n\n    /**\n     * Convert serialized tween from a serialized keyframe into TweenData\n     * `\"D20E25EaseIn;PX3Y5A1.2\"` to: `{ d: 20, e: { s: 25, n: \"EaseIn\" }, p: { x:3, y: 5, sx: 1.2 } }`\n     * @param tweenBuffer\n     * @return Resulting TweenData\n     */\n    function parseTween(tweenBuffer: string): TweenData\n    {\n        const result: TweenData = { d: 0, p: {} };\n\n        let i = 0;\n        let buffer = '';\n        let handlingProps = false;\n        let prop: keyof TweenProps|keyof TweenData;\n\n        // tween format:\n        // D20E25EaseIn;PX3Y5A1.2\n\n        while (i <= tweenBuffer.length)\n        {\n            const c = tweenBuffer[i];\n\n            if (!handlingProps && (tweenKeysMap[prop] || tweenKeysMap[c]))\n            {\n                // handle potential active duration property, which is the only normal one\n                if (prop === 'd')\n                {\n                    (result.d as any) = parseValue(prop, buffer);\n                    prop = null;\n                }\n\n                // seeing the p property kicks us immediately into props mode\n                if (c === 'P')\n                {\n                    handlingProps = true;\n                    ++i;\n                }\n                else\n                {\n                    // only handles D, really\n                    prop = tweenKeysMap[c];\n                    ++i;\n                }\n                buffer = '';\n            }\n            // seeing easing means we need to read ahead to the end of the easing section\n            else if (c === 'E')\n            {\n                // search for the next space or end of the string to see where the tween ends\n                let index = tweenBuffer.indexOf(';', i);\n\n                // should never end early, but just in case we are somehow tweening 0 properties\n                if (index < 0)\n                {\n                    index = tweenBuffer.length;\n                }\n                const easeBuffer = tweenBuffer.substring(i + 1, index);\n\n                if (basicEase.test(easeBuffer))\n                {\n                    const [, strength, name] = basicEase.exec(easeBuffer);\n\n                    // if not yet handling props, apply ease to whole tween\n                    if (!handlingProps)\n                    {\n                        result.e = {\n                            s: parseFloat(strength),\n                            n: name,\n                        };\n                    }\n                    // apply ease to last property read\n                    else if (prop)\n                    {\n                        (result.p[prop as TweenablePropNames] as any) = parseValue(prop, buffer);\n                        if (!result.p.e)\n                        {\n                            result.p.e = {};\n                        }\n                        result.p.e[prop as TweenablePropNames] = {\n                            s: parseFloat(strength),\n                            n: name,\n                        };\n                        prop = null;\n                        buffer = '';\n                    }\n                }\n                else\n                {\n                    // TODO: encode some sort of function for a custom ease\n                }\n\n                i = index + 1;\n            }\n            // normal prop/buffer handling, like in the main deserializeKeyframes function\n            else if (keysMap[c])\n            {\n                if (prop)\n                {\n                    (result.p[prop as keyof TweenProps] as any) = parseValue(prop, buffer);\n                }\n                prop = keysMap[c];\n                buffer = '';\n                i++;\n            }\n            else if (!c)\n            {\n                if (prop)\n                {\n                    (result.p[prop as keyof TweenProps] as any) = parseValue(prop, buffer);\n                }\n                buffer = '';\n                prop = null;\n                i++;\n            }\n            else\n            {\n                buffer += c;\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Convert serialized array into keyframes\n     * `\"0x100y100 1x150\"` to: `{ \"0\": {\"x\":100, \"y\": 100}, \"1\": {\"x\": 150} }`\n     * @param keyframes\n     * @return Resulting keyframes\n     */\n    export function deserializeKeyframes(keyframes: string): {[s: number]: KeyframeData}\n    {\n        const result: {[s: number]: KeyframeData} = {};\n        let i = 0;\n\n        let buffer = '';\n        let isFrameStarted = false;\n        let prop: keyof TweenProps;\n        let frame: KeyframeData = {};\n\n        while (i <= keyframes.length)\n        {\n            const c = keyframes[i];\n\n            // if we found the name of a property\n            if (keysMap[c])\n            {\n                // start a new frame if we need to\n                if (!isFrameStarted)\n                {\n                    isFrameStarted = true;\n                    result[buffer as any] = frame;\n                }\n                // finish a previous prop if one is running\n                if (prop)\n                {\n                    (frame[prop] as any) = parseValue(prop, buffer);\n                }\n                // save the new prop that we are now handling\n                prop = keysMap[c];\n                // reset buffer (because we did the previous prop if we had to)\n                buffer = '';\n                i++;\n            }\n            // contains a tween\n            else if (c === 'W')\n            {\n                // start a new frame if we need to\n                if (!isFrameStarted)\n                {\n                    isFrameStarted = true;\n                    result[buffer as any] = frame;\n                }\n                // finish previous prop\n                if (prop)\n                {\n                    (frame[prop] as any) = parseValue(prop, buffer);\n                    buffer = '';\n                    prop = null;\n                }\n                // search for the next space or end of the string to see where the tween ends\n                let index = keyframes.indexOf(' ', i);\n\n                if (index < 0)\n                {\n                    index = keyframes.length;\n                }\n                // parse the tween section\n                frame.tw = parseTween(keyframes.substring(i + 1, index));\n                // skip past the tween section\n                i = index;\n            }\n            // finish existing prop & frame on end of string or space\n            else if (!c || c === ' ')\n            {\n                i++;\n                if (prop)\n                {\n                    (frame[prop] as any) = parseValue(prop, buffer);\n                }\n                buffer = '';\n                prop = null;\n                frame = {};\n                isFrameStarted = false;\n            }\n            // add to the buffer for the next parse\n            else\n            {\n                buffer += c;\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Convert serialized shapes into draw commands for PIXI.Graphics.\n     * @param str\n     * @param Resulting shapes map\n     */\n    export function deserializeShapes(str: string): DrawCommands[]\n    {\n        const result = [];\n        // each shape is a new line\n        const shapes = str.split('\\n');\n        const isCommand = /^[a-z]{1,2}$/;\n\n        for (let i = 0; i < shapes.length; i++)\n        {\n            const shape: DrawCommands = shapes[i].split(' '); // arguments are space separated\n\n            for (let j = 0; j < shape.length; j++)\n            {\n                // Convert all numbers to floats, ignore colors\n                const arg = shape[j] as string;\n\n                if (arg[0] !== '#' && !isCommand.test(arg))\n                {\n                    shape[j] = parseFloat(arg);\n                }\n            }\n            result.push(shape);\n        }\n\n        return result;\n    }\n\n    /**\n     * Add movie clips to the upload prepare.\n     * @param {*} item To add to the queue\n     */\n    export function addMovieClips(item: any): boolean\n    {\n        if (item instanceof MovieClip)\n        {\n            item._timedChildTimelines.forEach((timeline) =>\n            {\n                const index = item.children.indexOf(timeline.target);\n\n                if (index === -1)\n                {\n                    // eslint-disable-next-line no-unused-expressions\n                    _prepare?.add(timeline.target);\n                }\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Upload all the textures and graphics to the GPU.\n     * @param renderer Render to upload to\n     * @param clip MovieClip to upload\n     * @param done When complete\n     */\n    export function upload(renderer: Renderer, displayObject: DisplayObject, done: () => void): void\n    {\n        if (!_prepare)\n        {\n            _prepare = renderer.plugins.prepare;\n            _prepare.registerFindHook(addMovieClips);\n        }\n        // eslint-disable-next-line no-unused-expressions\n        _prepare?.upload(displayObject, done);\n    }\n}\n","import { Loader, ILoaderResource } from '@pixi/loaders';\nimport { Container } from '@pixi/display';\nimport { AnimateAsset } from '../AnimateAsset';\nimport { MovieClip } from './MovieClip';\nimport { DrawCommands } from './Graphics';\nimport { utils } from './utils';\n\ntype Complete = (instance: MovieClip|null, loader: Loader) => void;\nexport interface LoadOptions {\n    /**\n     * The Container to auto-add the stage to, if createInstance is true.\n     */\n    parent?: Container;\n    /**\n     * Callback for load completion.\n     */\n    complete?: Complete;\n    /**\n     * Base root directory\n     */\n    basePath?: string;\n    /**\n     * Enable or disable automatic instantiation of stage - defaults to false.\n     */\n    createInstance?: boolean;\n    /**\n     * Metadata to be handed off to the loader for assets that are loaded.\n     */\n    metadata?: any;\n    /**\n     * Pre-existing loader to use.\n     */\n    loader?: Loader;\n}\n\nconst EXPECTED_ASSET_VERSION = 2;\n\n/**\n * Load the stage class and preload any assets\n * ```\n * import MyAsset from './myAsset.js';\n * let renderer = new PIXI.autoDetectRenderer(1280, 720);\n * let stage = new PIXI.Container();\n * PIXI.animate.load(MyAsset, function(asset){\n *     stage.addChild(new asset.stage());\n * });\n * function update() {\n *      renderer.render(stage);\n *      update();\n * }\n * update();\n * ```\n * @param scene Reference to the scene data.\n * @param complete The callback function when complete.\n * @return instance of PIXI resource loader\n */\nexport function load(scene: AnimateAsset, complete?: Complete): Loader;\n/**\n * Load the stage class and preload any assets\n * ```\n * import MyAsset from './myAsset.js';\n * let basePath = 'file:/path/to/assets';\n * let renderer = new PIXI.Renderer(1280, 720);\n *\n * let extensions = PIXI.compressedTextures.detectExtensions(renderer);\n * let loader = new PIXI.Loader();\n * // this is an example of setting up a pre loader plugin to handle compressed textures in this case\n * loader.pre(PIXI.compressedTextures.extensionChooser(extensions));\n *\n * // specify metadata this way if you want to provide a default loading strategy for all assets listed in the PIXI animation\n * let metadata = { default: { metadata: { imageMetadata: { choice: ['.crn'] } } } };\n * // specify metadata this way if you want to provide a specific loading strategy for a\n * // certain asset listed inside the PIXI animation library\n * let metadata = { MyStage_atlas_1: { metadata: { imageMetadata: { choice: ['.crn'] } } } };\n *\n * let stage = new PIXI.Container();\n * PIXI.animate.load(MyAsset, {\n *     parent: stage,\n *     complete: ()=>{},\n *     basePath: basePath,\n *     loader: loader,\n *     metadata: metadata\n * });\n * function update() {\n *      renderer.render(stage);\n *      update();\n * }\n * update();\n * ```\n * @param scene Reference to the scene data.\n * @param options Options for loading.\n * @return instance of PIXI resource loader\n */\nexport function load(scene: AnimateAsset, options: LoadOptions): Loader;\nexport function load(scene: AnimateAsset, optionsOrComplete?: Complete|LoadOptions): Loader\n{\n    const complete: Complete = typeof optionsOrComplete === 'function' ? optionsOrComplete : optionsOrComplete?.complete;\n    let basePath = '';\n    let parent: Container = null;\n    let metadata: any;\n    let createInstance = false;\n    let loader: Loader;\n\n    // check scene and warn about it\n    const { version } = scene;\n\n    if (typeof version === 'number')\n    {\n        /* eslint-disable max-len */\n        if (Math.floor(version) !== Math.floor(EXPECTED_ASSET_VERSION))\n        {\n            console.warn(`Asset version is not the major version expected of ${Math.floor(EXPECTED_ASSET_VERSION)} - it may not load properly`, scene);\n        }\n        else if (version > EXPECTED_ASSET_VERSION)\n        {\n            console.warn('Asset has been published with a newer version than PixiAnimate expects. It may not load properly.', scene);\n        }\n        /* eslint-enable max-len */\n    }\n\n    if (optionsOrComplete && typeof optionsOrComplete !== 'function')\n    {\n        basePath = optionsOrComplete.basePath || '';\n        parent = optionsOrComplete.parent;\n        metadata = optionsOrComplete.metadata;\n        createInstance = !!optionsOrComplete.createInstance;\n        loader = optionsOrComplete.loader;\n    }\n\n    loader = loader || new Loader();\n\n    function done(): void\n    {\n        const instance = (createInstance && typeof scene.stage === 'function') ? new scene.stage() : null;\n\n        if (parent && instance)\n        {\n            parent.addChild(instance);\n        }\n        if (complete)\n        {\n            complete(instance, loader);\n        }\n    }\n\n    // Check for assets to preload\n    const assets = scene.assets || {};\n\n    if (assets && Object.keys(assets).length)\n    {\n        // assetBaseDir can accept either with trailing slash or not\n        if (basePath)\n        {\n            basePath += '/';\n        }\n        for (const id in assets)\n        {\n            let data = null;\n\n            if (metadata)\n            {\n                // if the metadata was supplied for this particular asset, use these options\n                if (metadata[id])\n                {\n                    data = metadata[id];\n                }\n                // if the metadata supplied a default option\n                else if (metadata.default)\n                {\n                    data = metadata.default;\n                }\n            }\n            loader.add(id, basePath + assets[id], data, (resource: ILoaderResource) =>\n            {\n                if (!resource.data)\n                {\n                    return;\n                }\n                if (resource.spritesheet)\n                {\n                    // handle spritesheets\n                    scene.spritesheets.push(resource.spritesheet);\n                }\n                else if (resource.data.nodeName === 'IMG')\n                {\n                    // handle individual textures\n                    scene.textures[resource.name] = resource.texture;\n                }\n                else if (resource.url.search(/\\.shapes\\.(json|txt)$/i) > -1)\n                {\n                    // save shape data\n                    let items: string|DrawCommands[] = resource.data;\n\n                    // Decode string to map of files\n                    if (typeof items === 'string')\n                    {\n                        items = utils.deserializeShapes(items);\n                    }\n\n                    // Convert all hex string colors (animate) to int (pixi.js)\n                    for (let i = 0; i < items.length; i++)\n                    {\n                        const item = items[i];\n\n                        for (let j = 0; j < item.length; j++)\n                        {\n                            const arg = item[j];\n\n                            if (typeof arg === 'string' && arg[0] === '#')\n                            {\n                                item[j] = utils.hexToUint(arg);\n                            }\n                        }\n                    }\n                    scene.shapes[resource.name] = items;\n                }\n            });\n        }\n        loader.onComplete.once(done);\n        loader.load();\n    }\n    else\n    {\n        // tiny case where there's only text and no shapes/animations\n        done();\n    }\n\n    return loader;\n}\n","import { load } from './load';\nimport { sound } from './sound';\nimport { MovieClip } from './MovieClip';\nimport { Application } from '@pixi/app';\nimport { EventEmitter } from '@pixi/utils';\nimport { Loader } from '@pixi/loaders';\nimport { IDestroyOptions } from '@pixi/display';\nimport { AnimateAsset } from '../AnimateAsset';\n\n/**\n * Extends the PIXI.Application class to provide easy loading.\n * ```\n * const scene = new PIXI.animate.Scene();\n * scene.load(lib.StageName);\n * ```\n */\nexport class Scene extends Application\n{\n    /**\n     * Reference to the global sound object\n     * @readOnly\n     */\n    public readonly sound: EventEmitter = sound;\n\n    /**\n     * The stage object created.\n     */\n    public instance: MovieClip = null;\n\n    /**\n     * Load a stage scene and add it to the stage.\n     * @param asset Reference to the scene to load.\n     * @param complete Callback when finished loading.\n     * @param basePath Optional base directory to prepend to assets.\n     * @return instance of PIXI resource loader\n     */\n    public load(asset: AnimateAsset, complete?: (instance?: MovieClip) => void, basePath?: string): Loader\n    {\n        return load(asset, {\n            parent: this.stage,\n            createInstance: true,\n            complete: (instance) =>\n            {\n                this.instance = instance as MovieClip;\n                if (complete)\n                {\n                    complete(this.instance);\n                }\n            },\n            basePath,\n        });\n    }\n\n    /**\n     * Destroy and don't use after calling.\n     * @param removeView Automatically remove canvas from DOM.\n     * @param stageOptions Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     */\n    destroy(removeView?: boolean, stageOptions?: IDestroyOptions | boolean): void\n    {\n        if (this.instance)\n        {\n            this.instance.destroy(true);\n            this.instance = null;\n        }\n        super.destroy(removeView, stageOptions as IDestroyOptions);\n    }\n}\n","import { ColorMatrixFilter } from '@pixi/filter-color-matrix';\nimport { Text, TextStyleAlign } from '@pixi/text';\nimport { Graphics } from '@pixi/graphics';\nimport { Sprite } from '@pixi/sprite';\nimport { utils } from './utils';\n\n// Possible align values\nenum ALIGN_VALUES {\n    center = 0,\n    right = 1,\n    left = -1\n}\n\n// Map of short names to long names\nconst STYLE_PROPS = {\n    o: 'font', // TODO: deprecate in Pixi v4\n    z: 'fontSize',\n    f: 'fontFamily',\n    y: 'fontStyle',\n    g: 'fontWeight',\n    i: 'fill',\n    a: 'align',\n    s: 'stroke',\n    t: 'strokeThickness',\n    w: 'wordWrap',\n    d: 'wordWrapWidth',\n    l: 'lineHeight',\n    h: 'dropShadow',\n    c: 'dropShadowColor',\n    n: 'dropShadowAngle',\n    b: 'dropShadowBlur',\n    p: 'padding',\n    x: 'textBaseline',\n    j: 'lineJoin',\n    m: 'miterLimit',\n    e: 'letterSpacing',\n};\n\n/**\n * Check if a value is undefined, fallback to default value\n * @param value The value to check\n * @param defaultValue The default value if value is undefined\n * @return Either the value or the default value\n */\nfunction isUndefinedOr<T>(value: T, defaultValue: T): T\n{\n    return value === undefined ? defaultValue : value;\n}\n\nexport class AnimateText extends Text\n{\n    // **************************\n    //     Text methods\n    // **************************\n\n    /**\n     * Setter for the alignment, also sets the anchor point\n     * to make sure the positioning is correct.\n     * @param align Either center (0), right (1), left (-1)\n     * @return This instance for chaining\n     */\n    public setAlign(align: 'center'|'right'|'left'|0|1|-1): this\n    {\n        if (typeof align === 'string')\n        {\n            align = ALIGN_VALUES[align];\n        }\n        this.style.align = ALIGN_VALUES[align] as TextStyleAlign || 'left';\n        this.anchor.x = (align + 1) / 2;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setAlign`.\n     */\n    public g = this.setAlign;\n\n    /**\n     * Set the style, a chainable version of style setter\n     * @param style\n     * @return This instance for chaining.\n     */\n    // TODO: improve typing of style parameter (needs ITextStyle interface to exist)\n    public setStyle(style: any): this\n    {\n        // Replace short STYLE_PROPS with long names\n        for (const k in STYLE_PROPS)\n        {\n            if ((style as any)[k] !== undefined)\n            {\n                (style as any)[(STYLE_PROPS as any)[k]] = (style as any)[k];\n                delete (style as any)[k];\n            }\n        }\n        this.style = style as any;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setStyle`.\n     */\n    public ss = this.setStyle;\n\n    /**\n     * Initial setting of the drop shadow.\n     * @param color The color to set\n     * @param angle The angle of offset, in radians\n     * @param distance The offset distance\n     * @return This instance for chaining\n     */\n    public setShadow(color: string|number, angle: number, distance: number): this\n    {\n        const style = this.style;\n\n        style.dropShadow = true;\n\n        // Convert color to hex string\n        if (color && typeof color === 'number')\n        {\n            color = `#${color.toString(16)}`;\n        }\n        style.dropShadowColor = isUndefinedOr(color, style.dropShadowColor);\n        style.dropShadowAngle = isUndefinedOr(angle, style.dropShadowAngle);\n        style.dropShadowDistance = isUndefinedOr(distance, style.dropShadowDistance);\n\n        return this;\n    }\n    /**\n     * Shortcut for `setShadow`.\n     */\n    public sh = this.setShadow;\n\n    // **************************\n    //     DisplayObject methods\n    // **************************\n\n    /**\n     * Function to set if this is renderable or not. Useful for setting masks.\n     * @param renderable Make renderable. Defaults to false.\n     * @return This instance, for chaining.\n     */\n    public setRenderable(renderable?: boolean): this\n    {\n        this.renderable = !!renderable;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setRenderable`.\n     */\n    public re = this.setRenderable;\n\n    /**\n     * Shortcut for `setTransform`.\n     */\n    public t = super.setTransform;\n\n    /**\n     * Setter for mask to be able to chain.\n     * @param mask The mask shape to use\n     * @return Instance for chaining\n     */\n    public setMask(mask: Graphics|Sprite): this\n    {\n        // According to PIXI, only Graphics and Sprites can\n        // be used as mask, let's ignore everything else, like other\n        // movieclips and displayobjects/containers\n        if (mask)\n        {\n            if (!(mask instanceof Graphics) && !(mask instanceof Sprite))\n            {\n                if (typeof console !== 'undefined' && console.warn)\n                {\n                    console.warn('Warning: Masks can only be PIXI.Graphics or PIXI.Sprite objects.');\n                }\n\n                return this;\n            }\n        }\n        this.mask = mask;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setMask`.\n     */\n    public ma = this.setMask;\n\n    /**\n     * Chainable setter for alpha\n     * @param alpha The alpha amount to use, from 0 to 1\n     * @return Instance for chaining\n     */\n    public setAlpha(alpha: number): this\n    {\n        this.alpha = alpha;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setAlpha`.\n     */\n    public a = this.setAlpha;\n\n    /**\n     * Set the tint values by color.\n     * @param tint The color value to tint\n     * @return Object for chaining\n     */\n    public setTint(tint: string|number): this\n    {\n        if (typeof tint === 'string')\n        {\n            tint = utils.hexToUint(tint);\n        }\n        // this.tint = tint\n        // return this;\n        // TODO: Replace with DisplayObject.tint setter\n        // once the functionality is added to Pixi.js, for\n        // now we'll use the slower ColorMatrixFilter to handle\n        // the color transformation\n        const r = (tint >> 16) & 0xFF;\n        const g = (tint >> 8) & 0xFF;\n        const b = tint & 0xFF;\n\n        return this.setColorTransform(r / 255, 0, g / 255, 0, b / 255, 0);\n    }\n    /**\n     * Shortcut for `setTint`.\n     */\n    public i = this.setTint;\n\n    /**\n     * Set additive and multiply color, tinting\n     * @param r The multiply red value\n     * @param rA The additive red value\n     * @param g The multiply green value\n     * @param gA The additive green value\n     * @param b The multiply blue value\n     * @param bA The additive blue value\n     * @return Object for chaining\n     */\n    public setColorTransform(r: number, rA: number, g: number, gA: number, b: number, bA: number): this\n    {\n        const filter = this.colorTransformFilter;\n\n        filter.matrix[0] = r;\n        filter.matrix[4] = rA;\n        filter.matrix[6] = g;\n        filter.matrix[9] = gA;\n        filter.matrix[12] = b;\n        filter.matrix[14] = bA;\n        this.filters = [filter];\n\n        return this;\n    }\n    /**\n     * Shortcut for `setColor`.\n     */\n    public c = this.setColorTransform;\n\n    protected _colorTransformFilter: ColorMatrixFilter;\n    /**\n     * The current default color transforming filter\n     */\n    public set colorTransformFilter(filter: ColorMatrixFilter)\n    {\n        this._colorTransformFilter = filter;\n    }\n    public get colorTransformFilter(): ColorMatrixFilter\n    {\n        return this._colorTransformFilter || new ColorMatrixFilter();\n    }\n}\n","import { MovieClip } from './MovieClip';\nimport { Animator } from './Animator';\n\nconst pool: AnimatorTimeline[] = [];\n\n/**\n * Represents a single animation play.\n */\nexport class AnimatorTimeline\n{\n    /**\n     * Bound copy of update().\n     */\n    private _update: (instance: MovieClip) => (() => void|null);\n\n    /**\n     * Instance of clip to play.\n     * @readOnly\n     */\n    public instance: MovieClip;\n\n    /**\n     * `true` if the timeline is suppose to loop.\n     * @readOnly\n     */\n    public loop: boolean;\n\n    /**\n     * Frame number of the starting farme.\n     * @readOnly\n     */\n    public start: number;\n\n    /**\n     * Frame number of the ending frame.\n     * @readOnly\n     */\n    public end: number;\n\n    /**\n     * Callback called when completed (non-looping animation).\n     * @readOnly\n     */\n    public callback: () => void;\n\n    constructor()\n    {\n        this._update = this.update.bind(this);\n        this.init(null, 0, 0, false, null);\n    }\n\n    /**\n     * The pool of timelines to use\n     * @param instance\n     * @param start\n     * @param end\n     * @param loop\n     * @param callback\n     */\n    private init(instance: MovieClip, start: number, end: number, loop: boolean, callback: () => void): void\n    {\n        this.instance = instance;\n        this.loop = loop;\n        this.start = start;\n        this.end = end;\n        this.callback = callback;\n\n        if (instance)\n        {\n            // Prevent overshooting the end frame and looping back around:\n            instance.loop = false;\n            instance.gotoAndStop(start);\n            instance._beforeUpdate = this._update;\n        }\n    }\n\n    /**\n     * Don't use after this\n     * @private\n     */\n    destroy(): void\n    {\n        this.instance._beforeUpdate = null;\n        this.init(null, 0, 0, false, null);\n        AnimatorTimeline._pool.push(this);\n    }\n\n    /**\n     * Is the animation complete\n     * @method PIXI.animate.AnimatorTimeline#update\n     * @param instance\n     * @return Callback to do after updateTimeline\n     * @private\n     */\n    update(instance: MovieClip): (() => void) | null\n    {\n        let completed: () => void;\n\n        if (instance.currentFrame >= this.end)\n        {\n            // In case we over-shoot the current frame becuase of low FPS\n            instance.currentFrame = this.end;\n\n            if (this.loop)\n            {\n                // Update timeline so we get actions at the end frame\n                instance._updateTimeline();\n                instance.gotoAndPlay(this.start);\n            }\n            else\n            {\n                instance.stop();\n                if (this.callback)\n                {\n                    completed = this.callback;\n                }\n                this.stop(); // cleanup timeline\n            }\n        }\n\n        return completed;\n    }\n\n    /**\n     * Stop the animation, cannot be reused.\n     */\n    stop(): void\n    {\n        Animator._internalStop(this);\n    }\n\n    /**\n     * The progress from 0 to 1 of the playback.\n     */\n    get progress(): number\n    {\n        const progress = (this.instance.currentFrame - this.start) / (this.end - this.start);\n\n        return Math.max(0, Math.min(1, progress)); // clamp\n    }\n\n    /**\n     * The pool of timelines to use\n     * @private\n     */\n    static get _pool(): AnimatorTimeline[]\n    {\n        return pool;\n    }\n\n    /**\n     * Create a new timeline\n     */\n    static create(instance: MovieClip, start: number, end: number, loop: boolean, callback: () => void): AnimatorTimeline\n    {\n        let timeline: AnimatorTimeline;\n\n        if (this._pool.length)\n        {\n            timeline = this._pool.pop();\n        }\n        else\n        {\n            timeline = new AnimatorTimeline();\n        }\n        timeline.init(instance, start, end, loop, callback);\n\n        return timeline;\n    }\n}\n","import { AnimatorTimeline } from './AnimatorTimeline';\nimport { MovieClip } from './MovieClip';\n\n// Static collection of timelines\nconst timelines: AnimatorTimeline[] = [];\n\n/**\n * Play animation via start/stop frame labels\n * @class Animator\n */\nexport class Animator\n{\n    /**\n     * The collection of timelines\n     */\n    private static get _timelines(): AnimatorTimeline[]\n    {\n        return timelines;\n    }\n\n    /**\n     * Suffix added to label for a stop.\n     */\n    static get STOP_LABEL(): string\n    {\n        return '_stop';\n    }\n\n    /**\n     * Suffix added to label for a loop.\n     */\n    static get LOOP_LABEL(): string\n    {\n        return '_loop';\n    }\n\n    /**\n     * Play the entire duration of the MovieClip.\n     * @param instance Movie clip to play.\n     * @param callback Optional callback when complete\n     * @return Timeline object for stopping or getting progress.\n     */\n    static play(instance: MovieClip, callback?: () => void): AnimatorTimeline;\n    /**\n     * Play an animation by frame labels. For instance, play animation sequence from\n     * 'idle' to 'idle_stop' or 'idle_loop'. If no event label is provided, will\n     * play the entire duration of the MovieClip.\n     * @param instance Movie clip to play.\n     * @param label The frame label event to call, if no event is provided\n     *        will use the entire length of the MovieClip.\n     * @param callback Optional callback when complete\n     * @return Timeline object for stopping or getting progress.\n     */\n    static play(instance: MovieClip, label: string, callback?: () => void): AnimatorTimeline;\n    static play(instance: MovieClip, label?: string|(() => void), callback?: () => void): AnimatorTimeline\n    {\n        let loop = false;\n        let start;\n        let end;\n\n        if (!label || typeof label === 'function')\n        {\n            start = 0;\n            end = instance.totalFrames - 1;\n            if (label && typeof label === 'function')\n            {\n                callback = label;\n                label = null;\n            }\n        }\n        else\n        {\n            start = instance.labelsMap[label];\n            end = instance.labelsMap[label + this.STOP_LABEL];\n            if (end === undefined)\n            {\n                end = instance.labelsMap[label + this.LOOP_LABEL];\n                loop = true;\n            }\n            if (start === undefined)\n            {\n                throw new Error(`No start label matching \"${label}\"`);\n            }\n            else if (end === undefined)\n            {\n                throw new Error(`No end label matching \"${label}\"`);\n            }\n        }\n\n        return this.fromTo(\n            instance,\n            start,\n            end,\n            loop,\n            callback,\n        );\n    }\n\n    /**\n     * Play an animation from the current frame to an end frame or label.\n     * @param instance Movie clip to play.\n     * @param end The end frame or label.\n     * @param callback Optional callback when complete\n     * @return Timeline object for stopping or getting progress.\n     */\n    static to(instance: MovieClip, end: string|number, callback?: () => void): AnimatorTimeline\n    {\n        return this.fromTo(\n            instance,\n            instance.currentFrame,\n            end,\n            false,\n            callback,\n        );\n    }\n\n    /**\n     * Play a MovieClip from a start to end frame.\n     * @param instance Movie clip to play.\n     * @param start The starting frame index or label.\n     * @param end The ending frame index or label.\n     * @param loop If the animation should loop.\n     * @param callback Optional callback when complete\n     * @return Timeline object for stopping or getting progress.\n     */\n    static fromTo(instance: MovieClip,\n        start: number|string,\n        end: number|string,\n        loop?: boolean,\n        callback?: () => void): AnimatorTimeline\n    {\n        if (typeof start === 'string')\n        {\n            const startLabel = start;\n\n            start = instance.labelsMap[startLabel];\n            if (start === undefined)\n            {\n                throw new Error(`No start label matching \"${startLabel}\"`);\n            }\n        }\n        if (typeof end === 'string')\n        {\n            const endLabel = end;\n\n            end = instance.labelsMap[endLabel];\n            if (end === undefined)\n            {\n                throw new Error(`No end label matching \"${endLabel}\"`);\n            }\n        }\n        if (start < 0)\n        {\n            throw new Error('Start frame is out of bounds');\n        }\n        if (end >= instance.totalFrames)\n        {\n            throw new Error('End frame is out of bounds');\n        }\n        if (start >= end)\n        {\n            throw new Error('End frame is before start frame');\n        }\n\n        // Stop any animation that's playing\n        this.stop(instance);\n\n        loop = !!loop;\n\n        // Add a new timeline\n        const timeline = AnimatorTimeline.create(\n            instance,\n            start,\n            end,\n            loop,\n            callback,\n        );\n\n        this._timelines.push(timeline);\n\n        // Set the current frame\n        if (instance.currentFrame !== start)\n        {\n            instance.gotoAndPlay(start);\n        }\n        else\n        {\n            instance.play();\n        }\n\n        return timeline;\n    }\n\n    /**\n     * Stop the animation by instance.\n     * @param instance Movie clip to play.\n     */\n    static stop(instance: MovieClip): void\n    {\n        for (let i = 0, len = this._timelines.length; i < len; i++)\n        {\n            const timeline = this._timelines[i];\n\n            if (timeline.instance === instance)\n            {\n                this._internalStop(timeline);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Stop all the currently playing animations.\n     */\n    static stopAll(): void\n    {\n        for (let i = this._timelines.length - 1; i >= 0; i--)\n        {\n            this._internalStop(this._timelines[i]);\n        }\n    }\n\n    /**\n     * Stop the animation\n     * @private\n     * @param timeline Timeline to stop.\n     */\n    static _internalStop(timeline: AnimatorTimeline): void\n    {\n        this._timelines.splice(this._timelines.indexOf(timeline), 1);\n        timeline.instance.stop();\n        timeline.destroy();\n    }\n}\n","import { Sprite } from '@pixi/sprite';\nimport { Graphics } from '@pixi/graphics';\nimport { ColorMatrixFilter } from '@pixi/filter-color-matrix';\nimport { utils } from './utils';\n\n/**\n * Utility subclass of PIXI.Sprite\n */\nexport class AnimateSprite extends Sprite\n{\n    // **************************\n    //     DisplayObject methods\n    // **************************\n\n    /**\n     * Function to set if this is renderable or not. Useful for setting masks.\n     * @param renderable Make renderable. Defaults to false.\n     * @return This instance, for chaining.\n     */\n    public setRenderable(renderable?: boolean): this\n    {\n        this.renderable = !!renderable;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setRenderable`.\n     */\n    public re = this.setRenderable;\n\n    /**\n     * Shortcut for `setTransform`.\n     */\n    public t = super.setTransform;\n\n    /**\n     * Setter for mask to be able to chain.\n     * @param mask The mask shape to use\n     * @return Instance for chaining\n     */\n    public setMask(mask: Graphics|Sprite): this\n    {\n        // According to PIXI, only Graphics and Sprites can\n        // be used as mask, let's ignore everything else, like other\n        // movieclips and displayobjects/containers\n        if (mask)\n        {\n            if (!(mask instanceof Graphics) && !(mask instanceof Sprite))\n            {\n                if (typeof console !== 'undefined' && console.warn)\n                {\n                    console.warn('Warning: Masks can only be PIXI.Graphics or PIXI.Sprite objects.');\n                }\n\n                return this;\n            }\n        }\n        this.mask = mask;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setMask`.\n     */\n    public ma = this.setMask;\n\n    /**\n     * Chainable setter for alpha\n     * @param alpha The alpha amount to use, from 0 to 1\n     * @return Instance for chaining\n     */\n    public setAlpha(alpha: number): this\n    {\n        this.alpha = alpha;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setAlpha`.\n     */\n    public a = this.setAlpha;\n\n    /**\n     * Set the tint values by color.\n     * @param tint The color value to tint\n     * @return Object for chaining\n     */\n    public setTint(tint: string|number): this\n    {\n        if (typeof tint === 'string')\n        {\n            tint = utils.hexToUint(tint);\n        }\n        this.tint = tint;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setTint`.\n     */\n    public i = this.setTint;\n\n    /**\n     * Set additive and multiply color, tinting\n     * @param r The multiply red value\n     * @param rA The additive red value\n     * @param g The multiply green value\n     * @param gA The additive green value\n     * @param b The multiply blue value\n     * @param bA The additive blue value\n     * @return Object for chaining\n     */\n    public setColorTransform(r: number, rA: number, g: number, gA: number, b: number, bA: number): this\n    {\n        const filter = this.colorTransformFilter;\n\n        filter.matrix[0] = r;\n        filter.matrix[4] = rA;\n        filter.matrix[6] = g;\n        filter.matrix[9] = gA;\n        filter.matrix[12] = b;\n        filter.matrix[14] = bA;\n        this.filters = [filter];\n\n        return this;\n    }\n    /**\n     * Shortcut for `setColor`.\n     */\n    public c = this.setColorTransform;\n\n    protected _colorTransformFilter: ColorMatrixFilter;\n    /**\n     * The current default color transforming filter\n     */\n    public set colorTransformFilter(filter: ColorMatrixFilter)\n    {\n        this._colorTransformFilter = filter;\n    }\n    public get colorTransformFilter(): ColorMatrixFilter\n    {\n        return this._colorTransformFilter || new ColorMatrixFilter();\n    }\n}\n","import { ColorMatrixFilter } from '@pixi/filter-color-matrix';\nimport { Graphics, GraphicsGeometry, ILineStyleOptions } from '@pixi/graphics';\nimport { Sprite } from '@pixi/sprite';\nimport { utils } from './utils';\n\nexport type DrawCommands = (string|number)[];\n\nexport class AnimateGraphics extends Graphics\n{\n    constructor(geometry?: GraphicsGeometry)\n    {\n        super(geometry);\n\n        // overwrite with a cleaner version, so fewer function calls are involved\n        this.s = super.lineStyle;\n    }\n\n    // **************************\n    //     Graphics methods\n    // **************************\n\n    /**\n     * Execute a series of commands, this is the name of the short function\n     * followed by the parameters, e.g., `[\"f\", \"#ff0000\", \"r\", 0, 0, 100, 200]`\n     * @param commands The commands and parameters to draw\n     * @return This instance for chaining.\n     */\n    public drawCommands(commands: DrawCommands): this\n    {\n        let currentCommand: string; const params = [];\n        let i = 0;\n\n        while (i <= commands.length)\n        {\n            const item = commands[i++];\n\n            if (item === undefined || (this as any)[item])\n            {\n                if (currentCommand)\n                {\n                    (this as any)[currentCommand].apply(this, params);\n                    params.length = 0;\n                }\n                currentCommand = item as string;\n            }\n            else\n            {\n                params.push(item);\n            }\n        }\n\n        return this;\n    }\n    /**\n     * Shortcut for `drawCommands`.\n     */\n    public d = this.drawCommands;\n\n    /**\n     * Shortcut for `closePath`.\n     **/\n    public cp = super.closePath;\n\n    /**\n     * Shortcut for `beginHole`\n     **/\n    public bh = super.beginHole;\n\n    /**\n     * Shortcut for `endHole`\n     **/\n    public eh = super.endHole;\n\n    /**\n     * Shortcut for `moveTo`.\n     **/\n    public m = super.moveTo;\n\n    /**\n     * Shortcut for `lineTo`.\n     **/\n    public l = super.lineTo;\n\n    /**\n     * Shortcut for `quadraticCurveTo`.\n     **/\n    public q = super.quadraticCurveTo;\n\n    /**\n     * Shortcut for `bezierCurveTo`.\n     **/\n    public b = super.bezierCurveTo;\n\n    /**\n     * Shortcut for `beginFill`.\n     **/\n    public f = super.beginFill;\n\n    /**\n     * Shortcut for `lineStyle`.\n     **/\n    public s(width: number, color?: number, alpha?: number, alignment?: number, native?: boolean): this;\n    public s(options?: ILineStyleOptions): this;\n    public s(...args: any[]): this\n    {\n        return super.lineStyle(...args);\n    }\n\n    /**\n     * Shortcut for `drawRect`.\n     **/\n    public dr = super.drawRect;\n\n    /**\n     * Shortcut for `drawRoundedRect`.\n     **/\n    public rr = super.drawRoundedRect;\n\n    /**\n     * Shortcut for `drawRoundedRect`.\n     **/\n    public rc = super.drawRoundedRect;\n\n    /**\n     * Shortcut for `drawCircle`.\n     **/\n    public dc = super.drawCircle;\n\n    /**\n     * Shortcut for `arc`.\n     **/\n    public ar = super.arc;\n\n    /**\n     * Shortcut for `arcTo`.\n     **/\n    public at = super.arcTo;\n\n    /**\n     * Shortcut for `drawEllipse`.\n     */\n    public de = super.drawEllipse;\n\n    /**\n     * Placeholder method for a linear gradient fill. Pixi does not support linear gradient fills,\n     * so we just pick the first color in colorArray\n     * @param colorArray An array of CSS compatible color values @see `f`\n     * @return The Graphics instance the method is called on (useful for chaining calls.)\n     **/\n    public lf(colorArray: number[]): this\n    {\n        // @if DEBUG\n        console.warn('Linear gradient fills are not supported');\n        // @endif\n\n        return this.f(colorArray[0]) as this;\n    }\n\n    /**\n     * Placeholder method for a radial gradient fill. Pixi does not support radial gradient fills,\n     * so we just pick the first color in colorArray\n     * @param colorArray An array of CSS compatible color values @see `f`\n     * @return The Graphics instance the method is called on (useful for chaining calls.)\n     **/\n    public rf(colorArray: number[]): this\n    {\n        // @if DEBUG\n        console.warn('Radial gradient fills are not supported');\n        // @endif\n\n        return this.f(colorArray[0]) as this;\n    }\n\n    /**\n     * Placeholder method for a `beginBitmapFill`. Pixi does not support bitmap fills.\n     * @return The Graphics instance the method is called on (useful for chaining calls.)\n     **/\n    public bf(): this\n    {\n        // @if DEBUG\n        console.warn('Bitmap fills are not supported');\n        // @endif\n\n        return this.f(0x0) as this;\n    }\n\n    /**\n     * Placeholder method for a `setStrokeDash`. Pixi does not support dashed strokes.\n     * @return The Graphics instance the method is called on (useful for chaining calls.)\n     **/\n    public sd(): this\n    {\n        // @if DEBUG\n        console.warn('Dashed strokes are not supported');\n        // @endif\n\n        return this;\n    }\n\n    /**\n     * Placeholder method for a `beginBitmapStroke`. Pixi does not support bitmap strokes.\n     * @return The Graphics instance the method is called on (useful for chaining calls.)\n     **/\n    public bs(): this\n    {\n        // @if DEBUG\n        console.warn('Bitmap strokes are not supported');\n        // @endif\n\n        return this;\n    }\n\n    /**\n     * Placeholder method for a `beginLinearGradientStroke`. Pixi does not support gradient strokes.\n     * @return The Graphics instance the method is called on (useful for chaining calls.)\n     **/\n    public ls(): this\n    {\n        // @if DEBUG\n        console.warn('Linear gradient strokes are not supported');\n        // @endif\n\n        return this;\n    }\n\n    /**\n     * Placeholder method for a `beginRadialGradientStroke`. Pixi does not support gradient strokes.\n     * @return The Graphics instance the method is called on (useful for chaining calls.)\n     **/\n    public rs(): this\n    {\n        // @if DEBUG\n        console.warn('Radial gradient strokes are not supported');\n        // @endif\n\n        return this;\n    }\n\n    // **************************\n    //     DisplayObject methods\n    // **************************\n\n    /**\n     * Function to set if this is renderable or not. Useful for setting masks.\n     * @param renderable Make renderable. Defaults to false.\n     * @return This instance, for chaining.\n     */\n    public setRenderable(renderable?: boolean): this\n    {\n        this.renderable = !!renderable;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setRenderable`.\n     */\n    public re = this.setRenderable;\n\n    /**\n     * Shortcut for `setTransform`.\n     */\n    public t = super.setTransform;\n\n    /**\n     * Setter for mask to be able to chain.\n     * @param mask The mask shape to use\n     * @return Instance for chaining\n     */\n    public setMask(mask: Graphics|Sprite): this\n    {\n        // According to PIXI, only Graphics and Sprites can\n        // be used as mask, let's ignore everything else, like other\n        // movieclips and displayobjects/containers\n        if (mask)\n        {\n            if (!(mask instanceof Graphics) && !(mask instanceof Sprite))\n            {\n                if (typeof console !== 'undefined' && console.warn)\n                {\n                    console.warn('Warning: Masks can only be PIXI.Graphics or PIXI.Sprite objects.');\n                }\n\n                return this;\n            }\n        }\n        this.mask = mask;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setMask`.\n     */\n    public ma = this.setMask;\n\n    /**\n     * Chainable setter for alpha\n     * @param alpha The alpha amount to use, from 0 to 1\n     * @return Instance for chaining\n     */\n    public setAlpha(alpha: number): this\n    {\n        this.alpha = alpha;\n\n        return this;\n    }\n    /**\n     * Shortcut for `setAlpha`.\n     */\n    public a = this.setAlpha;\n\n    /**\n     * Set the tint values by color.\n     * @param tint The color value to tint\n     * @return Object for chaining\n     */\n    public setTint(tint: string|number): this\n    {\n        if (typeof tint === 'string')\n        {\n            tint = utils.hexToUint(tint);\n        }\n        // this.tint = tint\n        // return this;\n        // TODO: Replace with DisplayObject.tint setter\n        // once the functionality is added to Pixi.js, for\n        // now we'll use the slower ColorMatrixFilter to handle\n        // the color transformation\n        const r = (tint >> 16) & 0xFF;\n        const g = (tint >> 8) & 0xFF;\n        const b = tint & 0xFF;\n\n        return this.setColorTransform(r / 255, 0, g / 255, 0, b / 255, 0);\n    }\n    /**\n     * Shortcut for `setTint`.\n     */\n    public i = this.setTint;\n\n    /**\n     * Set additive and multiply color, tinting\n     * @param r The multiply red value\n     * @param rA The additive red value\n     * @param g The multiply green value\n     * @param gA The additive green value\n     * @param b The multiply blue value\n     * @param bA The additive blue value\n     * @return Object for chaining\n     */\n    public setColorTransform(r: number, rA: number, g: number, gA: number, b: number, bA: number): this\n    {\n        const filter = this.colorTransformFilter;\n\n        filter.matrix[0] = r;\n        filter.matrix[4] = rA;\n        filter.matrix[6] = g;\n        filter.matrix[9] = gA;\n        filter.matrix[12] = b;\n        filter.matrix[14] = bA;\n        this.filters = [filter];\n\n        return this;\n    }\n    /**\n     * Shortcut for `setColor`.\n     */\n    // method instead of direct reference to allow override in v1 shim\n    public c(r: number, rA: number, g: number, gA: number, b: number, bA: number): this\n    {\n        return this.setColorTransform(r, rA, g, gA, b, bA);\n    }\n    // public c = this.setColorTransform;\n\n    protected _colorTransformFilter: ColorMatrixFilter;\n    /**\n     * The current default color transforming filter\n     */\n    public set colorTransformFilter(filter: ColorMatrixFilter)\n    {\n        this._colorTransformFilter = filter;\n    }\n    public get colorTransformFilter(): ColorMatrixFilter\n    {\n        return this._colorTransformFilter || new ColorMatrixFilter();\n    }\n}\n","export { load, sound, utils, MovieClip, Scene, Timeline, Tween, Animator, AnimatorTimeline, DrawCommands } from './animate';\n\nexport {\n    AnimateContainer as Container,\n    AnimateSprite as Sprite,\n    AnimateGraphics as Graphics,\n    AnimateText as Text,\n    AnimateDisplayObject as DisplayObject,\n} from './animate';\n\nexport const VERSION = '__VERSION__';\n\nexport * from './AnimateAsset';\n"]}