{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA,+CAA+C;AAC/C;AACA;AACA,4DAA4D,oBAAoB,gBAAgB;AAChG,wDAAwD,mBAAmB,qBAAqB,gBAAgB;AAChH,2DAA2D,oBAAoB,qBAAqB,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,oBAAoB,qBAAqB,uDAAuD;AACzJ;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB,gBAAgB;AAC3F,wDAAwD,oBAAoB,gBAAgB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,kEAAkE;AAClE,gEAAgE;AAChE,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA,iDAAiD,uHAAuH;AACxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA,sDAAsD,0DAA0D;AAChH;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,0GAA0G;AAC7J,iDAAiD,4DAA4D;AAC7G;AACA;AACA;AACA;AACA;AACA,+CAA+C,4CAA4C,QAAQ;AACnG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kDAAkD;AACpG;AACA;AACA;AACA,kDAAkD;AAClD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uCAAuC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6CAA6C;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAA0D;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAA0D;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAoD;AAChF;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAsD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,8DAA8D;AAC9D,kEAAkE,mDAAmD;AACrH;AACA;AACA,cAAc;AACd,UAAU;AACV;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,kEAAkE;AAClE,sEAAsE,qGAAqG;AAC3K,mBAAmB;AACnB,eAAe;AACf,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2IAA2I;AACnM,qDAAqD,2IAA2I;AAChM,sDAAsD,2IAA2I;AACjM,sDAAsD,2IAA2I;AACjM;AACA;AACA,wDAAwD,2IAA2I;AACnM;AACA,wDAAwD,2IAA2I;AACnM,4DAA4D,2IAA2I;AACvM;AACA,mDAAmD,0JAA0J;AAC7M;AACA;AACA;;;;;;;;;;;;;;AC/2Be;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC,2BAA2B,uCAAuC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD,iDAAiD;AACjD;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAsD;AAC/F;AACA;;;;;;;;;;;;;;AC3Pe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kCAAkC;AAC1D;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA,+CAA+C,oBAAoB,cAAc;AACjF;AACA,6CAA6C,oBAAoB,gBAAgB;AACjF;AACA,0CAA0C,oBAAoB,gBAAgB;AAC9E;AACA,+CAA+C,oBAAoB,oBAAoB;AACvF,4DAA4D,mBAAmB,oBAAoB;AACnG;AACA,wEAAwE,mBAAmB,sBAAsB;AACjH;AACA,+EAA+E,oBAAoB,2BAA2B;AAC9H,gFAAgF,oBAAoB,4BAA4B;AAChI;AACA,sEAAsE,oBAAoB,mBAAmB;AAC7G,sEAAsE,oBAAoB,mBAAmB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,wDAAwD;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD,+CAA+C,+DAA+D;AAC9G;AACA;AACA,4CAA4C,0EAA0E;AACtH,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD,+CAA+C,kEAAkE;AACjH;AACA;AACA,4CAA4C,uEAAuE;AACnH,2CAA2C;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mGAAmG;AACpI,4BAA4B,4EAA4E;AACxG,+BAA+B,4EAA4E;AAC3G,iCAAiC,4EAA4E;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kCAAkC,wCAAwC,mEAAmE;AACrK;AACA,iDAAiD,wHAAwH;AACzK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,wEAAwE;AACxE;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+HAA+H;AAC/H;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,wGAAwG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8HAA8H;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2HAA2H;AACzK,oDAAoD,oIAAoI;AACxL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,gFAAgF;AAChF;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA,+IAA+I;AAC/I;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,wHAAwH;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sJAAsJ;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2IAA2I;AACzL,oDAAoD,sJAAsJ;AAC1M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,kDAAkD,+DAA+D;AACjH,oDAAoD,iEAAiE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mGAAmG,qDAAqD,OAAO;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,cAAc;AACd;AACA,wDAAwD,2IAA2I;AACnM,SAAS;AACT;AACA;AACA;AACA,+CAA+C,oBAAoB,YAAY;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,uEAAuE;AACvE;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yCAAyC,yCAAyC;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,0CAA0C;AAC1E;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,2BAA2B;AAClF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,uCAAuC,gDAAgD;AACvF;AACA;AACA;AACA,iDAAiD,2IAA2I;AAC5L,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,iDAAiD;AAC/H;AACA;AACA;AACA;AACA,kDAAkD,6DAA6D;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0IAA0I;AACjL,0CAA0C,0IAA0I;AACpL;AACA;AACA;AACA;;;;;;;;;;;;;;ACv1Be;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,wBAAwB;AACxB,sBAAsB;AACtB,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;AACA,8DAA8D;AAC9D,gEAAgE;AAChE;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B,2EAA2E;AACvG,SAAS,0EAA0E;AACnF,SAAS,uEAAuE;AAChF,SAAS,wEAAwE;AACjF;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qCAAqC;AACrC,wCAAwC;AACxC;AACA,gBAAgB;AAChB,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,oBAAoB,kBAAkB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD,2IAA2I;AAC/L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,iFAAiF;AACjF;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,mBAAmB,eAAe;AAClC,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yHAAyH;AAC9J,2CAA2C,+HAA+H;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,+DAA+D;AAC/D;AACA,+FAA+F;AAC/F;AACA,iCAAiC;AACjC;AACA,0CAA0C,+HAA+H;AACzK;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C,mBAAmB,6BAA6B;AAChD;AACA,kDAAkD;AAClD;AACA,oDAAoD;AACpD;AACA;AACA,KAAK,gEAAgE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,oBAAoB,QAAQ;AAC5B;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,6CAA6C;AAC7C,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,qCAAqC;AACrC;AACA;AACA;AACA,+HAA+H;AAC/H,qCAAqC;AACrC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB,KAAK;AAC1C,mBAAmB,iBAAiB;AACpC,yCAAyC;AACzC;AACA,4DAA4D;AAC5D;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qGAAqG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sEAAsE;AAC1F,sBAAsB;AACtB;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,kBAAkB,gCAAgC;AAClD,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,iBAAiB,0CAA0C,8HAA8H;AACzL,iBAAiB,0CAA0C,8HAA8H;AACzL;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gCAAgC,qCAAqC;AACvF;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gGAAgG;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,mEAAmE;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;AChmBe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO,uEAAuE,oBAAoB,0CAA0C;AACpK;AACA,wDAAwD,mBAAmB,gBAAgB;AAC3F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO,yDAAyD,4CAA4C;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2IAA2I;AAC/L;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gBAAgB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,0FAA0F;AACtI;AACA;AACA;AACA,iCAAiC,wEAAwE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,yCAAyC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kBAAkB;AACjE,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,sCAAsC;AAChG;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yCAAyC,kBAAkB;AAC3D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0CAA0C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,2IAA2I;AAC5L;AACA;AACA;;;;;;;;;;;;;;ACxUe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;AC5CgC;AACA;AACA;AACE;AAClC;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,qBAAqB,mDAAK;AAC1B;AACA;AACA;AACA,oBAAoB,kDAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvHA,CAA6C;AAC7C;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,qCAAqC,IAAI,kCAAkC,IAAI,6CAA6C,EAAE;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAsD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,kCAAkC;AAClC;AACA,mDAAmD;AACnD;AACA,6FAA6F;AAC7F;AACA,8JAA8J;AAC9J,2CAA2C;AAC3C,+CAA+C;AAC/C;AACA,2CAA2C;AAC3C;AACA,iFAAiF;AACjF;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4DAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvIe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,6DAA6D;AAC7D,mCAAmC;AACnC,yBAAyB;AACzB;AACA,YAAY;AACZ,IAAI;AACJ,mFAAmF;AACnF;AACA,8DAA8D;AAC9D,aAAa;AACb,KAAK;AACL,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,WAAW;AACX;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,WAAW;AACX;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,sCAAsC;AACtC,sBAAsB;AACtB,4BAA4B;AAC5B;AACA,YAAY;AACZ,IAAI;AACJ,oFAAoF;AACpF;AACA,+DAA+D;AAC/D,aAAa;AACb,KAAK;AACL,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;AC1Ge;AACf;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA,kCAAkC,qDAAqD;AACvF;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0IAA0I;AACnK;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,cAAc;AACd;AACA;AACA;AACA,kCAAkC;AAClC;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,0CAA0C;AAC1C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,+BAA+B,2EAA2E;AACjL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+DAA+D;AAChG;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,+BAA+B,sFAAsF;AAC3K,4BAA4B,6BAA6B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;;;;;UC1WA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACN0D;AACJ;AACI;AACf;AACL;AACtC;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,mBAAmB;AACnB,eAAe,sBAAsB;AACrC,uCAAuC;AACvC,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sEAAO;AAC3B,qBAAqB,oEAAa;AAClC;AACA,oBAAoB,uDAAM;AAC1B;AACA;AACA;AACA;AACA,gBAAgB,4DAAM;AACtB;AACA,qBAAqB;AACrB,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAsD;AAC/E;AACA;AACA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iCAAiC,0DAA0D;AAC3I;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yMAAyM;AAClP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iEAAgB;AACpC;AACA;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA,qFAAqF;AACrF;AACA,+CAA+C,iCAAiC,8GAA8G;AAC9L;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,yCAAyC,oCAAoC;AAC7E,wCAAwC,yCAAyC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,C","sources":["webpack:///./src/game/game.js","webpack:///./src/game/learn.js","webpack:///./src/game/menu.js","webpack:///./src/game/preloadercontrol.js","webpack:///./src/game/shop.js","webpack:///./src/game/sounds.js","webpack:///./src/tolmasoft/module_control.js","webpack:///./src/tolmasoft/server.js","webpack:///./src/tolmasoft/timers.js","webpack:///./src/tolmasoft/universal_helper.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/index.js"],"sourcesContent":["export default class Game {\r\n    \r\n    constructor(game_movie, lines_movie, sky_body, yellow_char, red_char, complete_movie) {\r\n        this.game = game_movie;\r\n        this.bg_lines = lines_movie;\r\n        this.sky = sky_body;\r\n\r\n        this.compl = complete_movie;\r\n        //this.compl_game = complete_game_movie;\r\n\r\n        this.big_char = yellow_char;\r\n        this.small_char = red_char;\r\n\r\n        this.compl_stars = [];\r\n        //this.compl_game_stars = [];\r\n\r\n        this.up_blows = [];\r\n        this.down_blows = [];\r\n\r\n        this.big_chars = [];\r\n        this.small_chars = [];\r\n\r\n        this.sky_trigger = 0;\r\n\r\n        this.game.interactive = true;\r\n\r\n        this.rounds = [];\r\n        this.rounds_trig = false;\r\n\r\n        this.local_start = this.server_start = this.local_end = this.server_end = 0;\r\n        \r\n\r\n        this.mask_mc = new PIXI.Graphics();\r\n\r\n        this.arr_RU = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ь', 'Ы', 'Ъ', 'Э', 'Ю', 'Я'];\r\n        this.keys_RU = [70,188,68,85,76,84,220,186,80,66,81,82,75,86,89,74,71,72,67,78,69,65,219,87,88,73,79,77,83,221,222,190,90];\r\n\r\n        this.constructScene();\r\n        this.initButtons();\r\n        this.initStyles();\r\n\r\n        root.interactive = true;\r\n\r\n        for (let i = 1; i <= 7; i++){\r\n            this.compl_stars.push(this.compl.win['star' + i]);\r\n            this.compl.win['star' + i].scl = { x: this.compl.win['star' + i].scale.x, y: this.compl.win['star' + i].scale.y};\r\n        }\r\n\r\n        this.game.board_mc.exit_mc.on('pointertap', () => { sounds.playClick(); this.hideGame()});\r\n        this.compl.win.menu_mc.on('pointertap', () => { sounds.playClick();this.hideComplete(); this.hideGame()});\r\n        this.compl.win.next_mc.bg.on('pointertap', () => { sounds.playClick(); this.hideComplete(); this.init() });\r\n\r\n        this.game.board_mc.picture_mc.mask = this.mask_mc;\r\n\r\n        this.compl.interactive = true;\r\n\r\n        this.game.board_mc.buttmask_mc.on('pointermove', (e) => this.moveBoard(e));\r\n\r\n        this.game.board_mc.buttmask_mc.on('pointerdown', (e) => this.downMasker(e));\r\n\r\n        this.compl.win.close_mc.on('pointertap', () => { sounds.playClick(); this.hideComplete(); if(this.compl.win.menu_mc.interactive)this.hideGame() });\r\n\r\n        root.on('pointerup', () => this.upMasker());\r\n\r\n\r\n        this.game.open_word.bg.on('pointertap', () => { sounds.playClick();this.openWord()})\r\n        this.game.open_char.bg.on('pointertap', () => { sounds.playClick(); this.openChar()})\r\n\r\n        this.compl.win.share_btn.on('pointertap', () => this.clickRepostButt());\r\n\r\n        this.compl.win.restart_btn.on('pointertap', () => window.open(\"https://vk.com/app\" + vk_params['api_id'], \"_parent\"));\r\n    \r\n        window.addEventListener('keyup', (e) => this.pressKey(e))\r\n    }\r\n\r\n    init(){\r\n        learn.nullPointer();\r\n        this.game.board_mc.picture_mc.mask = this.mask_mc;\r\n\r\n        this.game.btree1_mc.y = menu.blur_trees_array[0].y;\r\n        this.game.btree2_mc.y = menu.blur_trees_array[1].y;\r\n        \r\n\r\n        this.game.lifes_mc.blow_mc.visible = false;\r\n\r\n        menu.showBigTrees(()=>this.showGame());\r\n        window.complete_tree = false;\r\n        \r\n        TS.php('game.getLevel', {}, (e) => this.onGetLevel(e), pre_control.onError);\r\n       \r\n        if (!TIMERS.timers['energy']) TIMERS.timers['energy'] = { 'init': true, 'tick': (e) =>  this.updateEnergyTimer(e) };\r\n        if (!TIMERS.timers['otkat']) TIMERS.timers['otkat'] = { 'init': true, 'tick': (e) =>  this.updateOtkatTimer(e) };\r\n        if (!TIMERS.timers['lifes']) TIMERS.timers['lifes'] = { 'init': true, 'tick': (e) =>  this.updateLifesTimer(e) };\r\n    }\r\n\r\n\r\n    showComplete(reward_cfg){\r\n        if (!this.compl.shadow_mc.children.length)helper.drawShadow(this.compl.shadow_mc);\r\n\r\n\r\n        //config window\r\n        \r\n        this.compl.win.first_mc.exp_txt.text = reward_cfg['exp'];\r\n\r\n        reward_cfg['second']['isset'] = Boolean(reward_cfg['second']['isset']);\r\n\r\n        this.compl.win.second_mc.visible = reward_cfg['second']['isset'];\r\n\r\n        if (reward_cfg['second']['isset']){\r\n            this.compl.win.first_mc.x = -116;\r\n\r\n            this.compl.win.second_mc.icons_mc.gotoAndStop(reward_cfg['second']['key']);\r\n            this.compl.win.second_mc.second_txt.text = reward_cfg['second']['value'];\r\n        }else{\r\n            this.compl.win.first_mc.x = -65;\r\n        }\r\n\r\n        this.compl.win.share_btn.scale.x = this.compl.win.share_btn.scale.y = 0;\r\n\r\n        if(Boolean(reward_cfg['share']['isset'])){\r\n            this.compl.win.share_btn.icons_mc.gotoAndStop(reward_cfg['share']['key']);\r\n            this.compl.win.share_btn.tf_txt.text = '+' + reward_cfg['share']['value']; \r\n\r\n            this.showRepostButt();\r\n        }\r\n\r\n        this.compl.win.restart_btn.visible = Boolean(reward_cfg['type'] == 'game');\r\n        this.compl.win.menu_mc.visible = this.compl.win.next_mc.visible = Boolean(reward_cfg['type'] != 'game');\r\n\r\n        this.compl.win.congrat_txt.text = reward_cfg['type'] == 'game' ? 'Игра пройдена!' : (reward_cfg['type'] == 'level' ? 'Уровень завершен!' : 'Cлово отгадано!');\r\n\r\n\r\n        //end config window\r\n\r\n        sounds.playComplete();\r\n\r\n        this.game.board_mc.picture_mc.mask = null;\r\n\r\n        while (this.mask_mc.children.length) this.mask_mc.removeChildAt(0);\r\n\r\n        for(let i = 0; i < this.compl_stars.length; i++){\r\n            this.compl_stars[i].scale.x = this.compl_stars[i].scale.y = 0;\r\n            gsap.to(this.compl_stars[i].scale, { duration: 0.5 + Math.random(), x: this.compl_stars[i].scl['x'], y: this.compl_stars[i].scl['y'], ease: 'back.out(1.7)'})\r\n        }\r\n\r\n        this.compl.scale.x = this.compl.scale.y = scale_coef;\r\n        \r\n        this.compl.win.x = this.compl.light_mc.x = my_width / scale_coef / 2;\r\n        this.compl.win.y = this.compl.light_mc.y = my_height / scale_coef / 2;\r\n\r\n\r\n        this.compl.win.menu_mc.bg.gotoAndStop(0);\r\n        this.compl.win.menu_mc.buttonMode = this.compl.win.menu_mc.interactive = true;\r\n\r\n        if(!this.compl.stage)root.layer2_mc.addChild(this.compl);\r\n\r\n        learn.check();\r\n\r\n        if (typeof (reward_cfg['bonus_id']) != 'undefined') this.bonus_id = reward_cfg['bonus_id'];\r\n    }\r\n\r\n    clickRepostButt(){\r\n        bridge.send(\"VKWebAppCheckAllowedScopes\", { scopes: \"wall\" }).then(e => {\r\n            let real_res = Boolean(e['result'][0]['allowed']);\r\n\r\n            if (!real_res) {\r\n                bridge.send(\"VKWebAppGetAuthToken\", { \"app_id\": parseInt(vk_params['api_id']), \"scope\": \"wall\" }).then(e => {\r\n                    VK_token = e.access_token;\r\n\r\n                    //тут пробуем сделать пост\r\n                    this.formRepostMessage();\r\n\r\n                }).catch(e => e => this.hideRepostButt())\r\n            } else{\r\n                //тут пробуем сделать пост\r\n                this.formRepostMessage();\r\n            }\r\n        }).catch(e => this.hideRepostButt())\r\n    }\r\n\r\n    formRepostMessage(){\r\n        let message = '';\r\n\r\n        if (typeof (menu.lvl_friends[udata['level'] - 1]) !== 'undefined'){\r\n            helper.pushPhoto50([menu.lvl_friends[udata['level'] - 1][0]], () => helper.loadPhoto50(menu.lvl_friends[udata['level'] - 1][0], (e)=>{\r\n                //let name = e['name']\r\n\r\n                message = '@id' + menu.lvl_friends[udata['level'] - 1][0] + '('+e.name+')' + ', я уже на уровень выше в Игре Слов! Давай догоняй! https://vk.com/app' + vk_params['api_id']; \r\n\r\n                this.sendRepost(message);\r\n            }))\r\n        }else{\r\n            message = Math.floor(udata['real_exp'] / main_const['level_win']) + ' - вот сколько слов у меня уже отгадано в Игре Слов! Заходи и проверь свои навыки! https://vk.com/app' + vk_params['api_id'];\r\n\r\n            this.sendRepost(message);\r\n        }\r\n   \r\n    }\r\n\r\n    sendRepost(mess){\r\n        //bridge.send(\"VKWebAppShowWallPostBox\", { message: mess, attachments: main_const['repost_attachment'] +', https://vk.com/app' + vk_params['api_id']}).then(e => {\r\n        bridge.send(\"VKWebAppShowWallPostBox\", { message: mess, attachments: main_const['repost_attachment']}).then(e => {\r\n            console.log(e);\r\n            //e.post_id\r\n\r\n            //тут шлем на сервер запрос на получение награды\r\n\r\n            TS.php('security.validateRepost', {bonus_id: this.bonus_id, post_id: e.post_id}, ()=>{}, pre_control.onError);\r\n\r\n            this.hideRepostButt();\r\n\r\n        }).catch(e => this.hideRepostButt());\r\n    }\r\n\r\n    hideRepostButt(){\r\n        helper.scaleAnimator('stop', this.compl.win.share_btn);\r\n        gsap.killTweensOf(this.compl.win.share_btn);\r\n\r\n        gsap.to(this.compl.win.share_btn.scale, { duration: 0.5, x: 0, y: 0, ease: 'back.out(1.7)' });\r\n    }\r\n\r\n    showRepostButt(){\r\n        gsap.to(this.compl.win.share_btn.scale, { duration: 0.5, x: 1, y: 1, ease: 'back.out(1.7)' , onComplete: ()=>{\r\n            helper.scaleAnimator('start', this.compl.win.share_btn);\r\n        }});\r\n\r\n        this.repost_ivl = setInterval(() => {\r\n            clearInterval(this.repost_ivl);\r\n            this.hideRepostButt();\r\n        }, 60000);\r\n    }\r\n\r\n    hideComplete(){\r\n        helper.alphaAnimation(this.compl, 0, 300, ()=>{\r\n            root.layer2_mc.removeChild(this.compl);\r\n            this.compl.alpha = 1;\r\n        })\r\n        \r\n        clearInterval(this.repost_ivl);\r\n        this.hideRepostButt();\r\n    }\r\n\r\n    onGetLevel(data){\r\n        window.complete_tree = true;\r\n\r\n        if (!menu.tree_trig) menu.hideBigTrees();\r\n\r\n        while (this.game.board_mc.picture_mc.children.length) this.game.board_mc.picture_mc.removeChildAt(0);\r\n        while (this.game.board_mc.mask_mc.children.length) this.game.board_mc.mask_mc.removeChildAt(0);\r\n\r\n        let txt = new PIXI.Texture.from(data['level']['link']);\r\n        let txt_img = new PIXI.Sprite(txt);\r\n\r\n        this.game.board_mc.picture_mc.addChild(txt_img);\r\n\r\n\r\n        while (this.game.board_mc.chars_mc.children.length) this.game.board_mc.chars_mc.removeChildAt(0);\r\n        while (this.game.board_mc.small_chars_mc.children.length) this.game.board_mc.small_chars_mc.removeChildAt(0);\r\n        this.big_chars = [];\r\n        this.small_chars = [];\r\n\r\n        this.game.board_mc.chars_mc.x = -233 + ((49 * 9) / 2 - (49 * udata['level_progress']['length']) / 2);\r\n\r\n        for (let i = 0; i < udata['level_progress']['length']; i++){\r\n            let copy = helper.duplicate(this.big_char);\r\n\r\n            i in udata['level_progress']['word'] ? copy.tf_txt.text = this.arr_RU[udata['level_progress']['word'][i]] : copy.tf_txt.text = '';\r\n\r\n            copy.x = i*52;\r\n\r\n            this.big_chars.push(copy);\r\n\r\n\r\n            this.game.board_mc.chars_mc.addChild(copy)\r\n        }\r\n\r\n        for(let i = 0; i < udata['level_progress']['chars'].length; i++){\r\n            let copy_s = helper.duplicate(this.small_char);\r\n\r\n            let line = Math.floor(i/(udata['level_progress']['chars'].length/2));\r\n\r\n            copy_s.x = i * 55 - (udata['level_progress']['chars'].length / 2)*55*line;\r\n            copy_s.y = line*47;\r\n\r\n            copy_s.tf_txt.text = this.arr_RU[udata['level_progress']['chars'][i]];\r\n\r\n            if (copy_s.tf_txt.text == 'Л') {\r\n                copy_s.tf_txt.text = 'V';\r\n                copy_s.tf_txt.rotation = Math.PI;\r\n                copy_s.tf_txt.y += copy_s.tf_txt.width*2;\r\n            }\r\n\r\n            if(udata['level_progress']['open_chars'].indexOf(i) !== -1)copy_s.visible = false;\r\n\r\n            this.small_chars.push(copy_s);\r\n\r\n            setButton(copy_s.butt);\r\n            \r\n            copy_s.butt.alpha = 0.01;\r\n\r\n            copy_s.butt.on('pointerdown', (e)=>this.pressChar(e));\r\n\r\n            this.game.board_mc.small_chars_mc.addChild(copy_s);\r\n        }\r\n\r\n        this.updPrices();\r\n\r\n        if(!menu.tree_trig)this.showGame();\r\n    }\r\n\r\n    updPrices(){\r\n        udata['my_bonuses']['char'] = udata['my_bonuses']['char'] || 0;\r\n        udata['my_bonuses']['word'] = udata['my_bonuses']['word'] || 0;\r\n\r\n        this.game.open_char.price_txt.text = !udata['my_bonuses']['char'] ? '-' + main_const['price_char'] : '0';\r\n        this.game.open_word.price_txt.text = !udata['my_bonuses']['word'] ? '-' + main_const['price_word'] : '0';\r\n    }\r\n\r\n    pressChar(e){\r\n        let target = e.currentTarget.parent;\r\n        let index = this.small_chars.indexOf(target);\r\n\r\n        if (index == -1) return;\r\n\r\n        TS.php('game.selectChar', {cid: index}, (e)=>this.onSelectChar(e), pre_control.onError);\r\n    }\r\n\r\n    pressKey(e){\r\n        if (!this.game.parent || !udata['level_progress']['length'] || TS.mc.visible)return;\r\n\r\n        if (debug_mode) console.log('keyCode char: ' + e.keyCode);\r\n\r\n        for(let i = 0; i < this.small_chars.length; i++){\r\n            if(this.small_chars[i].visible){\r\n                let keyCode = this.keys_RU[udata['level_progress']['chars'][i]];\r\n\r\n                if(debug_mode){\r\n                    console.log('keyCode char: ' + keyCode);\r\n                }\r\n\r\n                if(e.keyCode == keyCode){\r\n                    return TS.php('game.selectChar', { cid: i }, (e) => this.onSelectChar(e), pre_control.onError);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    openChar() {\r\n        TS.php('game.openChar', {}, (data) => {\r\n            this.onSelectChar(data);\r\n\r\n            this.updPrices();\r\n        }, pre_control.onError)\r\n    }\r\n\r\n    openWord() {\r\n        if (this.anim_openword) return;\r\n        let old_length = udata['level_progress']['word'].length+1;\r\n        TS.php('game.openWord', {}, (data) => {\r\n            let iter = 0;\r\n            let form_data = [];\r\n\r\n            this.anim_openword = true;\r\n\r\n            this.updPrices();\r\n            \r\n\r\n            let f1 = ()=>{\r\n                form_data['word'] = data['word'].slice(0, old_length + iter);\r\n                form_data['res'] = 1;\r\n                form_data['cid'] = data['chars'][iter];\r\n                form_data['next_level'] = data['next_level'];\r\n                this.onSelectChar(form_data);\r\n            }\r\n\r\n            f1();\r\n\r\n            let ivl = setInterval(() => {\r\n                iter++;\r\n                \r\n                if (typeof(data['chars'][iter + 1]) == 'undefined'){\r\n                    form_data['complete_word'] = 1;\r\n                    form_data['reward_info'] = data['reward_info'];\r\n\r\n                    this.anim_openword = false;\r\n\r\n                    clearInterval(ivl);\r\n                }\r\n                f1();\r\n\r\n            }, 250);\r\n\r\n        }, pre_control.onError)\r\n    }\r\n\r\n    onSelectChar(data){\r\n        if(debug_mode)console.log(JSON.stringify(data['word']));\r\n\r\n        learn.check();\r\n\r\n        let res = Boolean(parseInt(data['res']));\r\n        let complete = Boolean(parseInt(data['complete_word']));\r\n        let new_level = Boolean(parseInt(data['next_level']));\r\n\r\n        if (debug_mode)console.log(data);\r\n        if (debug_mode)console.log(res);\r\n\r\n        menu.showValuta();\r\n\r\n        if(res){\r\n            this.trueSelectChar(data['word'].length-1, data['cid']);\r\n\r\n            sounds.playTrueChar();\r\n\r\n            if(complete){\r\n                let ivl = setInterval(() => {\r\n                    clearInterval(ivl);\r\n\r\n                    this.showComplete(data['reward_info']);\r\n\r\n                    if (new_level) this.hideGame();\r\n                }, 400);\r\n                \r\n            }\r\n        }else{\r\n            sounds.playLozeChar();\r\n\r\n            this.game.lifes_mc['life' + (5 - (udata['lifes'])) + '_mc'].gotoAndPlay(1);\r\n            this.game.lifes_mc['life' + (5 - (udata['lifes'])) + '_mc'].boom_mc.gotoAndPlay(1);\r\n\r\n            if (udata['lifes'] + 1 == 5 && !Boolean(parseInt(udata['lifes_unlim']))) this.showLifesBlow();\r\n        }\r\n    }\r\n\r\n    trueSelectChar(big_id, small_id){\r\n        this.big_chars[big_id].tf_txt.text = this.small_chars[small_id].tf_txt.text !== 'V'?this.small_chars[small_id].tf_txt.text : 'Л';\r\n        this.big_chars[big_id].tf_txt.alpha = 0;\r\n\r\n        helper.alphaAnimation(this.big_chars[big_id].tf_txt, 1, 150);\r\n        helper.alphaAnimation(this.small_chars[small_id], 0, 150, () => this.small_chars[small_id].visible = false);\r\n    }\r\n\r\n    downMasker(e){\r\n        if (this.rounds_trig)return;\r\n        this.up_req = false;\r\n\r\n        main_const['brush'] = helper.copyJSON(this.comboBrush());\r\n\r\n        TS.php('game.downBrush', {}, (data) => this.onValidDownBrush(data, e), pre_control.onError);\r\n    }\r\n\r\n    comboBrush(){\r\n        let lvl = udata['level'];\r\n        let cnt = udata['levels_info']['cnt'][0] || 0;\r\n        let easy = main_const['brush_learn'];\r\n        let hard = main_const['_brush'];\r\n        let combo = {};\r\n\r\n        if(cnt > 10 || (cnt == 10 && lvl == 1)) return hard;\r\n\r\n        combo['size'] = hard['size'] + (easy['size'] - hard['size'])*(1-lvl/50);\r\n        combo['first_time'] = hard['first_time'] + (easy['first_time'] - hard['first_time'])*(1-lvl/50);\r\n        combo['last_time'] = hard['last_time'] + (easy['last_time'] - hard['last_time'])*(1-lvl/50);\r\n\r\n        return combo;\r\n    }\r\n\r\n    onValidDownBrush(data, e){\r\n        this.local_start = new Date();\r\n        this.server_start = data['start_time'];\r\n        this.server_end = data['crit_time'];\r\n\r\n        \r\n\r\n        this.rounds_trig = true;\r\n\r\n        this.moveBoard(e, true);\r\n\r\n        if (this.up_req){\r\n            this.rounds_trig = false;\r\n            return TS.php('game.upBrush', { micro: this.server_start }, (e) => this.onValidUpBrush(e), pre_control.onError);\r\n        }\r\n\r\n        this.energy_ivl = setInterval(() => {\r\n            let cur_time = new Date();\r\n\r\n            if (this.server_start + (cur_time - this.local_start) >= this.server_end) {\r\n                TS.php('game.upBrush', { micro: this.server_start + (cur_time - this.local_start) }, (e) => this.onValidUpBrush(e), pre_control.onError);\r\n                this.rounds_trig = false;\r\n\r\n                clearInterval(this.energy_ivl)\r\n            }\r\n\r\n            this.showEnergy(udata['energy'] - Math.floor((cur_time - this.local_start) / udata['energytimer']));\r\n        }, 10);\r\n\r\n        if (!this.brush_ivl){\r\n            this.brush_ivl = setInterval(() => {\r\n                if (!this.rounds[0]) return;\r\n                this.rounds[0].lifetime -= 10;\r\n\r\n                if (this.rounds[0].lifetime <= 0) {\r\n                    if (this.rounds[0].parent)this.rounds[0].parent.removeChild(this.rounds[0]);\r\n\r\n                    this.rounds.shift();\r\n                }\r\n            }, 10);\r\n        }\r\n    }\r\n    onValidUpBrush(){\r\n        if(udata['level'] == 1)learn.check();\r\n        this.showEnergy(udata['energy']);\r\n    }\r\n\r\n    moveBoard(e, first = false){\r\n        if(!this.rounds_trig) return;\r\n\r\n        let copy = new PIXI.Graphics();\r\n        let mouseXY = e.data.global;\r\n\r\n        copy.beginFill();\r\n        copy.drawCircle(mouseXY['x'], mouseXY['y'], main_const['brush']['size'] * scale_coef);\r\n        copy.endFill();\r\n\r\n        first ? copy.lifetime = main_const['brush']['first_time'] : copy.lifetime = main_const['brush']['last_time'];\r\n\r\n        this.rounds.push(copy);\r\n        \r\n\r\n        this.mask_mc.addChild(copy);\r\n    }\r\n\r\n    showEnergy(energy){\r\n        this.game.energy_mc.percent_txt.text = energy + '%';\r\n        this.game.energy_mc.color_mc.y = 28 - 187 * (Math.min(100, energy) / udata['emax']);\r\n\r\n        helper.alphaAnimation(this.game.energy_mc.time_txt, energy < udata['emax'] ? 1 : 0, 150)\r\n    }\r\n\r\n    upMasker(){\r\n        this.up_req = true;\r\n        \r\n        if (!this.rounds_trig)return;\r\n\r\n        let cur_time = new Date();\r\n        \r\n        TS.php('game.upBrush', { micro: this.server_start + (cur_time - this.local_start) }, (e) => this.onValidUpBrush(e), pre_control.onError);\r\n        this.rounds_trig = false;\r\n\r\n        clearInterval(this.energy_ivl);\r\n    }\r\n\r\n\r\n    showGame(){\r\n        for (let i = 0; i < this.up_blows.length; i++) {\r\n            this.game.blows_up.addChild(this.up_blows[i]);\r\n        }\r\n\r\n        for (let i = 0; i < this.down_blows.length; i++) {\r\n            this.game.blows_down.addChild(this.down_blows[i]);\r\n        }\r\n\r\n        this.game.energy_mc.time_txt.alpha = 0;\r\n\r\n        this.showEnergy(udata['energy']);\r\n\r\n        this.updateLifes();\r\n\r\n        while (this.mask_mc.children.length) this.mask_mc.removeChildAt(0);\r\n\r\n        root.layer0_mc.addChild(this.mask_mc);\r\n        root.layer0_mc.addChild(this.game);\r\n\r\n        learn.check();\r\n    }\r\n\r\n    updateLifes(){\r\n        for (let i = 0; i < 5; i++) {\r\n            udata['lifes'] > i ? this.game.lifes_mc['life' + (5 - i) + '_mc'].gotoAndStop(1) : this.game.lifes_mc['life' + (5 - i) + '_mc'].gotoAndStop(17);\r\n        } \r\n\r\n        if (udata['lifes'] < 5 && this.game.lifes_mc.blow_mc.visible == false) this.showLifesBlow();\r\n\r\n        if (!TIMERS.timers['lifes_unlim'] && parseInt(udata['lifes_unlim']) == 1) {\r\n            this.showUnlim();\r\n\r\n            TIMERS.timers['lifes_unlim'] = { 'init': true, 'tick': (e) => this.updateLifesUnlimTimer(e) };\r\n        }\r\n    }\r\n\r\n    hideGame(){\r\n        this.compl.win.menu_mc.bg.gotoAndStop(1);\r\n        this.compl.win.menu_mc.buttonMode = this.compl.win.menu_mc.interactive = false;\r\n\r\n        //menu.initLevelIcons();\r\n        //menu.updateLevelProgress();\r\n\r\n        menu.init();\r\n\r\n        menu.showBigTrees(()=>{\r\n            for (let i = 0; i < this.up_blows.length; i++) {\r\n                pre_control.preloader.up_blows.addChild(this.up_blows[i]);\r\n            }\r\n\r\n            for (let i = 0; i < this.down_blows.length; i++) {\r\n                pre_control.preloader.down_blows.addChild(this.down_blows[i]);\r\n            }\r\n\r\n            root.layer0_mc.removeChild(this.game);\r\n        })\r\n        window.complete_tree = true;\r\n    }\r\n\r\n\r\n    constructScene(){\r\n        this.game.board_mc.x = my_width/2;\r\n        this.game.board_mc.y = my_height/2;\r\n        this.game.board_mc.scale.x = this.game.board_mc.scale.y = this.game.lifes_mc.scale.x = this.game.lifes_mc.scale.y = this.game.energy_mc.scale.x = this.game.energy_mc.scale.y = scale_coef;\r\n\r\n        this.game.lifes_mc.x = my_width / 2 - 456*scale_coef;\r\n        this.game.lifes_mc.y = my_height/2;\r\n\r\n        this.game.energy_mc.x = my_width / 2 + 374 * scale_coef;\r\n        this.game.energy_mc.y = my_height/2;\r\n\r\n        this.game.open_char.x = this.game.open_word.x = my_width/2;\r\n        this.game.open_char.y = this.game.open_word.y = my_height - 105 * scale_coef;\r\n\r\n        \r\n\r\n        this.game.open_char.scale.x = this.game.open_char.scale.y = this.game.open_word.scale.x = this.game.open_word.scale.y = scale_coef;\r\n\r\n        let grp = new PIXI.Graphics();\r\n\r\n        grp.beginFill();\r\n        grp.drawRect(0, 0, 530, 404);\r\n        grp.endFill();\r\n\r\n        this.game.board_mc.buttmask_mc.addChild(grp);\r\n\r\n        this.game.board_mc.buttmask_mc.alpha = 0.001;\r\n\r\n        this.constructBackground();\r\n        this.constructSky();\r\n    }\r\n\r\n    constructBackground(){\r\n        if (this.sky_trigger) return;\r\n\r\n        let bg = new PIXI.Graphics();\r\n        let cnt_lines = Math.ceil((my_width/scale_coef)/273);\r\n\r\n        bg.beginFill('0x573309');\r\n        bg.drawRect(0, 0, my_width, my_height);\r\n        bg.endFill();\r\n\r\n        while (this.game.bg_mc.children.length) this.game.bg_mc.removeChildAt(0);\r\n        while (this.game.lines_mc.children.length) this.game.lines_mc.removeChildAt(0);\r\n\r\n        this.game.lines_mc.y = my_height;\r\n\r\n        let doubler = my_height/devicePixelRatio > 1000?1:0;\r\n\r\n        for(let ii = 0; ii <= doubler; ii++){\r\n            for (let i = 0; i < cnt_lines; i++) {\r\n                let copy = helper.duplicate(this.bg_lines);\r\n\r\n                copy.x = 273 * i;\r\n                copy.y = -1*(copy.height-10)*ii*2;\r\n\r\n                if(ii)copy.scale.y = -1;\r\n                copy.x -= 136*ii;\r\n\r\n                this.game.lines_mc.addChild(copy);\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        this.game.lines_mc.scale.x = this.game.lines_mc.scale.y = scale_coef;\r\n\r\n        this.game.tree1_mc.scale.x = this.game.tree1_mc.scale.y = scale_coef;\r\n        this.game.btree1_mc.scale.x = this.game.btree1_mc.scale.y = scale_coef;\r\n\r\n        this.game.tree2_mc.scale.x = this.game.tree2_mc.scale.y = scale_coef;\r\n        this.game.btree2_mc.scale.x = this.game.btree2_mc.scale.y = scale_coef;\r\n\r\n        this.game.tree1_mc.x = -1 * this.game.tree1_mc.width/5;\r\n        this.game.btree1_mc.x = -1 * this.game.btree1_mc.width/2;\r\n\r\n        this.game.tree2_mc.x = my_width - this.game.tree2_mc.width/3*2\r\n        this.game.btree2_mc.x = my_width -  this.game.btree2_mc.width / 2;\r\n\r\n        this.game.bg_mc.addChild(bg);\r\n    }\r\n\r\n    constructSky(){\r\n        this.game.sun_mc.x = my_width/2;\r\n        this.game.sunlight_mc.x = my_width/2;\r\n\r\n        this.game.sky_mc.x = my_width/2;\r\n\r\n        this.game.blows_up.y = this.game.blows_down.y = -150*scale_coef;\r\n\r\n        if (this.sky_trigger) return;\r\n\r\n        if (!this.up_blows[0]) {\r\n            for (let i = 0; i < pre_control.preloader.up_blows.children.length; i++) {\r\n                this.up_blows.push(pre_control.preloader.up_blows.children[i]);\r\n            }\r\n        }\r\n\r\n        if (!this.down_blows[0]) {\r\n            for (let i = 0; i < pre_control.preloader.down_blows.children.length; i++) {\r\n                this.down_blows.push(pre_control.preloader.down_blows.children[i]);\r\n            }\r\n        }\r\n\r\n        let cnt = Math.ceil((my_width/2-501*scale_coef)/110);\r\n        if (scale_coef !== 1) cnt = Math.ceil((my_width / 2 - 501 * scale_coef) / 108);\r\n\r\n        for(let i = 0; i < cnt; i++){\r\n            let copy = helper.duplicate(this.sky);\r\n            let copy1 = helper.duplicate(this.sky);\r\n\r\n            if (scale_coef !== 1){\r\n                copy.x = 500 + 108 * i;\r\n                copy1.x = -610 - 108 * i;\r\n            }else{\r\n                copy.x = 501 + 110 * i;\r\n                copy1.x = -611 - 110 * i;\r\n            }\r\n            \r\n\r\n            this.game.sky_mc.addChild(copy);\r\n            this.game.sky_mc.addChild(copy1);\r\n        }\r\n\r\n        this.game.sky_mc.scale.x = this.game.sky_mc.scale.y = scale_coef;\r\n\r\n        this.sky_trigger = 1;\r\n    }\r\n\r\n    showLifesBlow(){\r\n        this.game.lifes_mc.blow_mc.p1_mc.scale.x = this.game.lifes_mc.blow_mc.p1_mc.scale.y = 0;\r\n        this.game.lifes_mc.blow_mc.p2_mc.scale.x = this.game.lifes_mc.blow_mc.p2_mc.scale.y = 0;\r\n        this.game.lifes_mc.blow_mc.p3_mc.scale.x = this.game.lifes_mc.blow_mc.p3_mc.scale.y = 0;\r\n\r\n        this.game.lifes_mc.blow_mc.tf_txt.alpha = 0;\r\n\r\n        this.game.lifes_mc.blow_mc.visible = true;\r\n\r\n        gsap.to(this.game.lifes_mc.blow_mc.p1_mc.scale, {duration: 0.15, x:1, y:1, ease: 'back.out(1.7)', onComplete: () => {\r\n            gsap.to(this.game.lifes_mc.blow_mc.p2_mc.scale, { duration: 0.15, x: 1, y: 1, ease: 'back.out(1.7)', onComplete: () => {\r\n                gsap.to(this.game.lifes_mc.blow_mc.p3_mc.scale, { duration: 0.15, x: 1, y: 1, ease: 'back.out(1.7)' });\r\n\r\n                helper.alphaAnimation(this.game.lifes_mc.blow_mc.tf_txt, 1, 300);\r\n            }})\r\n        }})\r\n    }\r\n    \r\n    hideLifesBlow(){\r\n        helper.alphaAnimation(this.game.lifes_mc.blow_mc.tf_txt, 0, 150, ()=>{\r\n            gsap.to(this.game.lifes_mc.blow_mc.p3_mc.scale, { duration: 0.15, x: 0, y: 0, ease: 'none', onComplete: ()=>{\r\n                gsap.to(this.game.lifes_mc.blow_mc.p2_mc.scale, { duration: 0.15, x: 0, y: 0, ease: 'none', onComplete: ()=>{\r\n                    gsap.to(this.game.lifes_mc.blow_mc.p1_mc.scale, { duration: 0.15, x: 0, y: 0, ease: 'none', onComplete: ()=>this.game.lifes_mc.blow_mc.visible = false});\r\n                } });\r\n            } });\r\n        });\r\n    }\r\n\r\n    updateOtkatTimer(data) {\r\n        if (data['status'] == 'max'){\r\n            udata['energytimer'] = main_const['energy_diff'];\r\n            return helper.alphaAnimation(this.game.energy_mc.bonus_mc, 0);\r\n        }\r\n\r\n        helper.alphaAnimation(this.game.energy_mc.bonus_mc, 1);\r\n    }\r\n\r\n    updateEnergyTimer(data) {\r\n        if (data['status'] == 'max') return this.showEnergy(udata['energy']);\r\n\r\n        let num = data['time']\r\n\r\n        let mins = parseInt(num / 60);//количество минут без остатка\r\n        num %= 60;//функция берет остаток после деления на 60 (прим. при 100 будет 40, при 200 будет 20)\r\n        mins %= 60;\r\n\r\n        this.game.energy_mc.time_txt.text = helper.getZeros(mins) + ':' + helper.getZeros(num)\r\n\r\n        this.showEnergy(udata['energy']);\r\n    }\r\n\r\n    updateLifesTimer(data){\r\n        if (data['status'] == 'max'){\r\n            if (this.game.lifes_mc.blow_mc.visible && !Boolean(parseInt(udata['lifes_unlim'])))this.hideLifesBlow();\r\n            return this.updateLifes();\r\n        }\r\n\r\n        if (Boolean(parseInt(udata['lifes_unlim']))) return;\r\n\r\n        let num = data['time']\r\n\r\n        let mins = parseInt(num / 60);//количество минут без остатка\r\n        num %= 60;//функция берет остаток после деления на 60 (прим. при 100 будет 40, при 200 будет 20)\r\n        mins %= 60;\r\n\r\n        this.game.lifes_mc.blow_mc.tf_txt.text = '+1 через \\n' + helper.getZeros(mins) + ':' + helper.getZeros(num);\r\n\r\n        this.updateLifes();\r\n    }\r\n\r\n    updateLifesUnlimTimer(data) {\r\n        if (data['status'] == 'max') {\r\n            udata['lifes_unlim'] = 0;\r\n\r\n            console.log('sasay');\r\n            //if (this.game.lifes_mc.blow_mc.visible && !udata['lifes_unlim']) this.hideLifesBlow();\r\n            this.hideUnlim();\r\n            return this.updateLifes();\r\n        }\r\n\r\n        if (!Boolean(parseInt(udata['lifes_unlim']))) return;\r\n\r\n        this.showUnlim();\r\n\r\n        let num = data['time']\r\n\r\n        let mins = parseInt(num / 60);//количество минут без остатка\r\n        num %= 60;//функция берет остаток после деления на 60 (прим. при 100 будет 40, при 200 будет 20)\r\n        mins %= 60;\r\n\r\n        this.game.lifes_mc.blow_mc.tf_txt.text = 'активно \\n' + helper.getZeros(mins) + ':' + helper.getZeros(num);\r\n    }\r\n\r\n    showUnlim(){\r\n        if (!this.game.lifes_mc.blow_mc.visible)this.showLifesBlow();\r\n\r\n        for (let i = 1; i <= 5; i++)helper.alphaAnimation(this.game.lifes_mc['life' + i + '_mc'], 0);\r\n\r\n        helper.alphaAnimation(this.game.lifes_mc.unlim_mc, 1);\r\n    }\r\n\r\n    hideUnlim(){\r\n        for (let i = 1; i <= 5; i++)helper.alphaAnimation(this.game.lifes_mc['life' + i + '_mc'], 1);\r\n\r\n        helper.alphaAnimation(this.game.lifes_mc.unlim_mc, 0);\r\n    }\r\n\r\n    initButtons(){\r\n        setButton(this.game.board_mc.exit_mc);\r\n        setButton(this.game.board_mc.buttmask_mc);\r\n        setButton(this.compl.win.close_mc);\r\n\r\n        setButton(this.compl.win.next_mc.bg);\r\n        setButton(this.compl.win.menu_mc);\r\n        setButton(this.compl.win.share_btn);\r\n\r\n        setButton(this.compl.win.restart_btn);\r\n\r\n        setButton(this.game.open_char.bg);\r\n        setButton(this.game.open_word.bg);\r\n    }\r\n    initStyles(){\r\n        setTextStyle(this.game.energy_mc.percent_txt, { dropShadow: true, dropShadowAlpha: 0.24, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#6e2613\", strokeThickness: 5 });\r\n        setTextStyle(this.game.energy_mc.time_txt, { dropShadow: true, dropShadowAlpha: 0.24, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#6e2613\", strokeThickness: 5 });\r\n        setTextStyle(this.game.open_char.price_txt, { dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 2, stroke: \"#763c24\", strokeThickness: 4 });\r\n        setTextStyle(this.game.open_word.price_txt, { dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 2, stroke: \"#763c24\", strokeThickness: 4 });\r\n\r\n\r\n        setTextStyle(this.compl.win.share_btn.tf_txt, { dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 2, stroke: \"#763c24\", strokeThickness: 4 });\r\n\r\n        setTextStyle(this.compl.win.first_mc.exp_txt, { dropShadow: true, dropShadowAlpha: 0.24, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#996602\", strokeThickness: 5 });\r\n        setTextStyle(this.compl.win.second_mc.second_txt, { dropShadow: true, dropShadowAlpha: 0.24, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#996602\", strokeThickness: 5 });\r\n\r\n        setTextStyle(this.compl.win.congrat_txt, { dropShadow: true, dropShadowAlpha: 1, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#622703\", strokeThickness: 7, stroke: \"#843606\"});\r\n    }\r\n\r\n}","export default class Learn {\r\n\r\n    constructor(hand_mov){\r\n        this.hand = hand_mov;\r\n\r\n        this.initStyles();\r\n    }\r\n\r\n    init(){\r\n        this.learn = new PIXI.Container();\r\n        this.learn.down_mc = new PIXI.Container();\r\n\r\n        this.hand.scale.x = this.hand.scale.y = window.devicePixelRatio;\r\n\r\n        this.learn.addChild(this.learn.down_mc);\r\n        this.learn.addChild(this.hand);\r\n\r\n        root.layer2_mc.addChild(this.learn);\r\n\r\n        this.learn.visible = false;\r\n        this.learn.down_mc.alpha = debug_mode?0.4:0.01;\r\n\r\n        this.learn.down_mc.interactive = true;\r\n    }\r\n\r\n    check() {\r\n        //learn_cfg is global config variable\r\n        while (this.learn.down_mc.children.length) this.learn.down_mc.removeChildAt(0);\r\n\r\n        for (let i = 0; i < learn_cfg.triggers.length; i++) {\r\n            //skip trigger\r\n            if (!this.checkVars(learn_cfg.triggers[i].udata)) continue;\r\n            if (!this.checkLocals(learn_cfg.triggers[i].client_vars)) continue;\r\n\r\n            if(debug_mode)console.log('trigger ' + i + ' activated');\r\n\r\n            return this.constructStep(i);\r\n        }\r\n\r\n        this.tikTak();\r\n    }\r\n\r\n    tikTak(){\r\n        clearInterval(this.trim_ivl);\r\n\r\n        gsap.killTweensOf(this.hand);\r\n\r\n        this.nullPointer();\r\n    }\r\n\r\n    constructStep(num) {\r\n        gsap.killTweensOf(this.hand);\r\n        \r\n        this.constructDown();\r\n\r\n        this.hand.tf_txt.text = learn_cfg.triggers[num].text;\r\n\r\n        this.showPointer(num);\r\n\r\n        if (!this.learn.parent) root.layer2_mc.addChild(this.learn);\r\n        this.learn.visible = true;\r\n    }\r\n\r\n    showPointer(num) {\r\n        this.trimStart(num);\r\n        this.constructHole(num);\r\n    }\r\n\r\n\r\n    trimStart(num){\r\n        let XY = this.countXY(num);\r\n\r\n        if (debug_mode) console.log(XY);\r\n\r\n        this.hand.anim.gotoAndPlay(0);\r\n\r\n        this.num = num;\r\n\r\n        gsap.to(this.hand, {\r\n            duration: 0.7, x: XY.x, y: XY.y, ease: 'expo.out', onComplete: () => {\r\n                this.hand.anim.gotoAndPlay(learn_cfg.triggers[num]['pointer']['type']);\r\n\r\n                if (!learn_cfg.triggers[num].trim) return;\r\n                this.trim_ivl = setInterval(() => {\r\n                    clearInterval(this.trim_ivl);\r\n                    if (!learn_cfg.triggers[this.num].trim) return;\r\n                    this.trimMove(num);\r\n                }, 1000); \r\n            }\r\n        });\r\n    }\r\n\r\n    trimMove(num){\r\n        if(num != this.num)return;\r\n        let XY = this.countXY(num, true);\r\n        gsap.to(this.hand, {\r\n            duration: 2, x: XY.x, y: XY.y, ease: 'none', onComplete: () => {\r\n                //wait...\r\n                this.hand.anim.gotoAndPlay(0);\r\n\r\n                this.trim_ivl = setInterval(() => {\r\n                    clearInterval(this.trim_ivl);\r\n                    if (num != this.num) return;\r\n                    if (!learn_cfg.triggers[this.num].trim) return;\r\n                    this.trimStart(num);\r\n                }, 1000);\r\n        }})\r\n    }\r\n\r\n    \r\n    constructDown() {\r\n        let downer = new PIXI.Graphics();\r\n\r\n        downer.beginFill();\r\n        downer.drawRect(0, 0, my_width, my_height);\r\n        downer.endFill();\r\n\r\n        this.learn.down_mc.addChild(downer);\r\n    }\r\n\r\n    constructHole(num) {\r\n        let XY = this.countXY(num);\r\n\r\n        this.drawHole(XY, num);\r\n\r\n        if (!learn_cfg.triggers[num].trim) return;\r\n\r\n        let radius = learn_cfg.triggers[num].radius;\r\n        let endXY = this.countXY(num, true);\r\n\r\n        let x_dist = Math.abs(XY.x - endXY.x); \r\n        let y_dist = Math.abs(XY.y - endXY.y); \r\n\r\n        if (debug_mode)console.log('x_dist = '+ x_dist)\r\n        if (debug_mode)console.log('y_dist = '+ y_dist)\r\n\r\n        let x_m = XY.x >= endXY.x ? -1:1;\r\n        let y_m = XY.y >= endXY.y ? -1:1;\r\n\r\n        let counter = Math.ceil(Math.max(x_dist/radius, y_dist/radius));\r\n\r\n        if (debug_mode)console.log('counter = ' +counter);\r\n\r\n        x_dist /= counter * x_m;\r\n        y_dist /= counter * y_m;\r\n\r\n        if (debug_mode)console.log('x_diff = ' + x_dist)\r\n        if (debug_mode)console.log('y_diff = ' + y_dist)\r\n\r\n        for(let i = 1; i < counter; i++){\r\n            this.drawHole({x: XY.x + x_dist*i, y: XY.y + y_dist*i}, num);\r\n        }\r\n    }\r\n\r\n    drawHole(XY, num){\r\n        let downer = this.learn.down_mc.children[0];\r\n\r\n        if(debug_mode)console.log(XY);\r\n\r\n        downer.beginHole();\r\n        downer.drawCircle(XY.x, XY.y, learn_cfg.triggers[num].radius * scale_coef);\r\n        downer.endHole();\r\n    }\r\n\r\n    checkVars(trigger) {\r\n        trigger = helper.toKeyVals(trigger);\r\n\r\n        for (let i = 0; i < trigger.keys.length; i++) {\r\n            let d_k = trigger.keys[i].split(' ');//триггер почти всегда отсылает к 2-уровневым ключам. Уровни разделены пробелом\r\n            let my_var = udata[d_k[0]];\r\n\r\n            for(let ii = 1; ii < d_k.length; ii++){\r\n                my_var = my_var[d_k[ii]];\r\n\r\n                my_var = my_var || 0;\r\n            }\r\n\r\n            if (my_var != trigger.values[i]) return false;//если есть несоответствие ключа - триггер не сработает и цикл закроется\r\n        }\r\n\r\n        return true;//если все ключи совпали\r\n    }\r\n\r\n    checkLocals(locals) {\r\n        locals = helper.toKeyVals(locals);\r\n\r\n        for (let i = 0; i < locals.keys.length; i++) {\r\n            //проверять нужно не только visible, но и parent\r\n            let cls = locals.keys[i].split('.');\r\n\r\n            if (!eval(\"window.\" + cls[0]) && !locals.values[i]) continue;\r\n            if (!eval(\"window.\" + cls[0]) && locals.values[i]) return false;\r\n\r\n            let mov = eval(locals.keys[i]);\r\n\r\n            if (Boolean(mov.parent) && mov.visible && !locals.values[i]) return false;\r\n            if ((!Boolean(mov.parent) || !mov.visible) && locals.values[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    nullPointer() {\r\n        clearInterval(this.trim_ivl);\r\n        this.hand.anim.gotoAndPlay(0);\r\n        gsap.to(this.hand, { duration: 0.7, x: my_width / 2 / scale_coef, y: -300 * window.devicePixelRatio, ease: 'expo.out', onComplete : ()=>{\r\n            this.learn.visible = false;\r\n        }});\r\n\r\n        while (this.learn.down_mc.children.length) this.learn.down_mc.removeChildAt(0);\r\n    }\r\n\r\n    countXY(num, trim = false){\r\n        let data = !trim ? learn_cfg.triggers[num] : learn_cfg.triggers[num]['trim'];\r\n        let out = {x: 0, y: 0};\r\n\r\n        switch (data['pointer']['dx']) {\r\n            case 'center':\r\n                out.x = my_width / 2 + data['pointer']['x']*scale_coef;\r\n                break;\r\n            \r\n            case 'left':\r\n                out.x += data['pointer']['x'] * scale_coef;\r\n                break;\r\n            \r\n            case 'right':\r\n                out.x = (my_width / scale_coef - data['pointer']['x']) * scale_coef;\r\n                break;\r\n        }\r\n\r\n        switch (data['pointer']['dy']) {\r\n            case 'center':\r\n                out.y = my_height / 2 + data['pointer']['y'] * scale_coef;\r\n                break;\r\n\r\n            case 'up':\r\n                out.y += data['pointer']['y'] * scale_coef;\r\n                break;\r\n\r\n            case 'down':\r\n                out.y = (my_height / scale_coef - data['pointer']['y']) * scale_coef;\r\n                break;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    initStyles(){\r\n        setTextStyle(this.hand.tf_txt, { miterLimit: 2, stroke: \"#333534\", strokeThickness: 5 });\r\n    }\r\n}","export default class Menu {\r\n    \r\n    constructor(level_icon, exp_icon, medals_icon, shop_icon, friends_panel, friends_icon, bg_movies, settings_movie, settings_icon) {\r\n        this.lvl_ico = level_icon;\r\n        this.exp = exp_icon;\r\n        this.medals = medals_icon;\r\n        this.sett_btn = settings_icon;\r\n        this.shop_ico = shop_icon;\r\n        this.friends_panel = friends_panel;\r\n        this.friends_ico = friends_icon;\r\n        this.root_scene = pre_control.preloader;\r\n\r\n        this.settings = helper.duplicate(settings_movie);\r\n\r\n        this.bg_movs = bg_movies;\r\n\r\n        this.blur_tree = game.game.btree1_mc;\r\n        this.big_tree = game.game.tree1_mc;\r\n\r\n        this.lvls = new PIXI.Container();\r\n\r\n        this.blur_trees_array = [helper.duplicate(this.blur_tree), helper.duplicate(this.blur_tree)];\r\n        this.big_trees_array =[];\r\n\r\n        this.trees_anim = new PIXI.Container();\r\n\r\n        this.trees_anim.interactive = this.settings.interactive = true;\r\n\r\n        this.level_points = {\r\n            \"first\": [],\r\n            \"default\":[]\r\n        }  \r\n\r\n        this.grad_info = [\r\n            {\r\n                from: '#def7fa',\r\n                to: '#def7fa',\r\n                del: '#abe3e1'\r\n            },\r\n            {\r\n                from: '#def7fa',\r\n                to: '#def7fa',\r\n                del: '#abe3e1'\r\n            },\r\n            {\r\n                from: '#92cfcd',\r\n                to: '#def7fa',\r\n                del: '#abe3e1'\r\n            },\r\n            {\r\n                from: '#5f8786',\r\n                to: '#92cfcd',\r\n                del: '#759f9d'\r\n            }\r\n        ]\r\n\r\n        this.cur_bg = 0;\r\n\r\n        this.preloader_movies = [pre_control.preloader.grounds_mc,\r\n                                pre_control.preloader.korni_mc,\r\n                                pre_control.preloader.boby_mc,\r\n                                pre_control.preloader.grounds_masker,\r\n                                pre_control.preloader.trees_mc,\r\n                                pre_control.preloader.stebel1_mc,\r\n                                pre_control.preloader.stebel2_mc,\r\n                                pre_control.preloader.stebel3_mc,\r\n                                pre_control.preloader.stebel4_mc,\r\n                                pre_control.preloader.anim_up,\r\n                                pre_control.preloader.anim_down];\r\n\r\n        for (let i = 0; i < this.preloader_movies.length; i++) this.preloader_movies[i].startY = this.preloader_movies[i].y;\r\n        \r\n        pre_control.preloader.back_mc.startY = pre_control.preloader.back_mc.y;\r\n\r\n        this.birds_width_coef = my_width/2;\r\n        this.birds = { big: [], small: [] };\r\n\r\n        this.airplanes_width_coef = my_width*1.2;\r\n        this.airplanes = { big: [], small: [] };\r\n\r\n        let fst_y = 176;\r\n        let def_y = 176;\r\n        let lst_y = 10;\r\n\r\n        let fst_stp = Math.floor((my_height-fst_y-lst_y)/10);\r\n        let def_stp = Math.floor((my_height-def_y-lst_y)/10);\r\n\r\n        for(let i = 0; i < 10; i++){\r\n            this.level_points['first'].push(Math.floor((my_height / scale_coef - fst_y) * scale_coef - fst_stp * i));\r\n            this.level_points['default'].push(Math.floor((my_height / scale_coef - def_y) * scale_coef - def_stp * i));\r\n        }  \r\n\r\n        this.shop_ico.on('pointertap', () => { sounds.playClick(); this.toShop()})\r\n\r\n        this.medals.on('pointertap', () => { sounds.playClick(); this.toShop(4) })\r\n\r\n        this.exp.on('pointertap', () => { sounds.playClick(); this.toShop(3) });\r\n\r\n        this.sett_btn.on('pointertap', () => { sounds.playClick(); this.showSettings()});\r\n        this.settings.win.close_mc.on('pointertap', () => { sounds.playClick();this.hideSettings()});\r\n\r\n        this.settings.win.render_mc.render_btn.on('pointertap', () => { sounds.playClick();this.showHideRender()});\r\n\r\n        this.settings.win.render_mc.blow_mc.webgl_btn.on('pointertap', () => { sounds.playClick(); this.changeRender('webgl')});\r\n        this.settings.win.render_mc.blow_mc.canvas_btn.on('pointertap', () => { sounds.playClick(); this.changeRender('canvas')});\r\n\r\n        this.settings.win.sounds_mc.sound_mc.on('pointertap', () => { sounds.playClick(); this.changeSound()});\r\n        this.settings.win.sounds_mc.music_mc.on('pointertap', () => { sounds.playClick(); this.changeMusic()});\r\n\r\n        this.initButtons();\r\n        this.initStyles();\r\n        this.countBigTrees();\r\n\r\n\r\n    }\r\n\r\n    startBgMusic(){\r\n        sounds.playBackMusic();\r\n    }\r\n\r\n    toShop(cat = 0){\r\n        modules.checkFlags(['game', 'shop'], () => shop.init(cat));\r\n    }\r\n\r\n    changeRender(type){\r\n        let old_val = localStore['canvas'];\r\n\r\n        localStore['canvas'] = type == 'webgl'?false:true;\r\n\r\n        this.settings.win.render_mc.naming_txt.text = localStore['canvas'] ? 'CANVAS' : 'WEBGL';\r\n        this.showHideRender();\r\n\r\n        saveLocalStorage(()=>{\r\n            if (old_val !== localStore['canvas']) window.open(\"https://vk.com/app\" + vk_params['api_id'], \"_parent\");\r\n        });\r\n    }\r\n\r\n    changeSound(){\r\n        this.settings.win.sounds_mc.sound_mc.disable_mc.visible = Boolean(localStore['sound']);\r\n\r\n        localStore['sound'] = !Boolean(localStore['sound']);\r\n\r\n        saveLocalStorage();\r\n    }\r\n\r\n    changeMusic(){\r\n        this.settings.win.sounds_mc.music_mc.disable_mc.visible = Boolean(localStore['music']);\r\n\r\n        localStore['music'] = !Boolean(localStore['music']);\r\n\r\n        window.bg_music.volume = localStore['music']?0.2:0;\r\n\r\n        saveLocalStorage();\r\n    }\r\n\r\n    showSettings() {\r\n        this.settings.win.scale.x = this.settings.win.scale.y = scale_coef;\r\n\r\n        this.settings.win.render_mc.naming_txt.text = localStore['canvas']?'CANVAS':'WEBGL';\r\n\r\n        this.settings.win.sounds_mc.sound_mc.disable_mc.visible = !Boolean(localStore['sound']);\r\n        this.settings.win.sounds_mc.music_mc.disable_mc.visible = !Boolean(localStore['music']);\r\n\r\n        this.settings.win.render_mc.open_mc.gotoAndStop(0);\r\n        helper.alphaAnimation(this.settings.win.render_mc.blow_mc, 0, 300);\r\n\r\n        this.settings.win.x = my_width /  2;\r\n        this.settings.win.y = -1 * (my_height / 2);\r\n\r\n        helper.drawShadow(this.settings.shadow_mc, () => gsap.to(this.settings.win, { duration: 0.5, y: my_height / 2, ease: 'back.out(1.7)' }));\r\n\r\n        if (!this.settings.parent) root.layer1_mc.addChild(this.settings);\r\n    }\r\n\r\n    hideSettings() {\r\n        gsap.to(this.settings.win, {\r\n            duration: 0.2, y: my_height * 2, ease: 'back.in(1.7)', onComplete: () => {\r\n                helper.alphaAnimation(this.settings.shadow_mc, 0, 100, () => this.settings.parent.removeChild(this.settings));\r\n            }\r\n        });\r\n    }\r\n\r\n    showHideRender(){\r\n        if (this.settings.win.render_mc.open_mc.currentFrame == 1){\r\n            this.settings.win.render_mc.open_mc.gotoAndStop(0);\r\n\r\n            helper.alphaAnimation(this.settings.win.render_mc.blow_mc, 0, 300);\r\n        }else{\r\n            this.settings.win.render_mc.open_mc.gotoAndStop(1);\r\n\r\n            helper.alphaAnimation(this.settings.win.render_mc.blow_mc, 1, 300);\r\n        }\r\n    }\r\n\r\n\r\n    countBigTrees(){\r\n        this.blur_trees_array[0].y = (-100*Math.random()-50)*scale_coef;\r\n        this.blur_trees_array[1].y = (-100*Math.random()-50)*scale_coef;\r\n        \r\n\r\n        let copyA = helper.duplicate(this.big_tree);\r\n        let copyZ = helper.duplicate(this.big_tree);\r\n\r\n        copyA.scale.x = copyA.scale.y = copyZ.scale.x = copyZ.scale.y = scale_coef;\r\n\r\n        copyA.endx = -1 * copyA.width / 5;\r\n\r\n        copyZ.endx = my_width - copyZ.width / 3 * 2;\r\n\r\n        copyZ.x = copyZ.startx = my_width;\r\n        copyA.x = copyA.startx = -1 * copyA.width;\r\n\r\n        let cnt = Math.ceil((my_width)/(100*scale_coef));\r\n        let stp = Math.ceil(100 * scale_coef);\r\n\r\n        this.big_trees_array.push(copyA);\r\n        this.big_trees_array[cnt-1] = copyZ;\r\n\r\n        for(let i = 1; i < cnt-1; i++){\r\n            this.big_trees_array[i] = helper.duplicate(this.big_tree);\r\n            this.big_trees_array[i].endx = copyA.endx + stp*i;\r\n\r\n            this.big_trees_array[i].scale.x = this.big_trees_array[i].scale.y = scale_coef;\r\n\r\n            i > Math.floor(cnt / 2) ? this.big_trees_array[i].x = this.big_trees_array[i].startx = my_width : this.big_trees_array[i].x = this.big_trees_array[i].startx = -1 * this.big_trees_array[i].width;\r\n\r\n            this.big_trees_array[i].y = (-200 * Math.random() - 50) * scale_coef;\r\n        }\r\n\r\n        for(let i = 1; i < cnt-1; i++)this.trees_anim.addChild(this.big_trees_array[i]);\r\n\r\n        this.trees_anim.addChild(copyA);\r\n        this.trees_anim.addChild(copyZ);\r\n\r\n        this.trees_anim.addChild(this.blur_trees_array[0]);\r\n        this.trees_anim.addChild(this.blur_trees_array[1]);\r\n    }\r\n\r\n    showBigTrees(callback){\r\n        if (this.tree_trig) return;\r\n        this.tree_trig = true;\r\n\r\n        this.blur_trees_array[0].x = -1 * this.blur_trees_array[0].width;\r\n        this.blur_trees_array[1].x = my_width;\r\n\r\n       \r\n\r\n        for(let i = 0; i < this.big_trees_array.length; i++){\r\n            gsap.to(this.big_trees_array[i], { duration: 1, x: this.big_trees_array[i].endx, ease: 'expo.out'})\r\n        }\r\n\r\n        gsap.to(this.blur_trees_array[0], { duration: 1, x: -1 * this.blur_trees_array[0].width / 2, ease: 'expo.out'})\r\n        gsap.to(this.blur_trees_array[1], { duration: 1, x: my_width - this.blur_trees_array[1].width / 2, ease: 'expo.out', onComplete: () => {\r\n            this.tree_trig = false;\r\n\r\n            if(callback) callback();\r\n\r\n            if(window.complete_tree)this.hideBigTrees();\r\n        }})\r\n\r\n        root.layer1_mc.addChild(this.trees_anim);\r\n    }\r\n\r\n    hideBigTrees(){\r\n        for (let i = 0; i < this.big_trees_array.length; i++) {\r\n            gsap.to(this.big_trees_array[i], { duration: 1, x: this.big_trees_array[i].startx, ease: 'expo.out' })\r\n        }\r\n\r\n        gsap.to(this.blur_trees_array[0], { duration: 1, x: -1 * this.blur_trees_array[0].width, ease: 'expo.out' })\r\n        gsap.to(this.blur_trees_array[1], {duration: 1, x: my_width, ease: 'expo.out', onComplete: () => {\r\n                //console.log('profit')\r\n            }\r\n        })\r\n    }\r\n\r\n    init(){\r\n        learn.nullPointer();\r\n\r\n        if (!window.bg_music) root.on('pointerdown', () => this.startBgMusic());\r\n\r\n        this.shop_ico.scale.x = this.shop_ico.scale.y = scale_coef;\r\n        this.exp.scale.x = this.exp.scale.y = scale_coef; \r\n        this.medals.scale.x = this.medals.scale.y = scale_coef;\r\n        this.sett_btn.scale.x = this.sett_btn.scale.y = scale_coef;\r\n\r\n        this.shop_ico.y = my_height;\r\n        this.shop_ico.x = (my_width/scale_coef/2 - 390)*scale_coef;\r\n\r\n        this.exp.y = this.sett_btn.y = this.medals.y = -100;\r\n        this.exp.x = (my_width/scale_coef/2 + 126) * scale_coef;\r\n        this.medals.x = (my_width/scale_coef/2 + 279) * scale_coef;\r\n\r\n        this.sett_btn.x = (my_width/scale_coef/2 + 408) * scale_coef;\r\n\r\n        \r\n\r\n        this.showValuta();\r\n\r\n        gsap.to(this.shop_ico, { duration: 0.5 + Math.random() * 0.25, y:(my_height/scale_coef-105)*scale_coef, ease: 'back.out(2)'});\r\n        gsap.to(this.exp, { duration: 0.5 + Math.random() * 0.25, y: 19*scale_coef, ease: 'back.out(2)'});\r\n        gsap.to(this.medals, { duration: 0.5 + Math.random() * 0.25, y: 19*scale_coef, ease: 'back.out(2)'});\r\n        gsap.to(this.sett_btn, { duration: 0.5 + Math.random() * 0.25, y: 25*scale_coef, ease: 'back.out(2)'});\r\n\r\n\r\n        root.layer0_mc.addChild(this.root_scene);\r\n        root.layer1_mc.addChild(this.shop_ico);\r\n        root.layer1_mc.addChild(this.medals);\r\n        root.layer1_mc.addChild(this.exp);\r\n        root.layer1_mc.addChild(this.sett_btn);\r\n\r\n\r\n        let lvl = Math.ceil(udata['level'] / 10);\r\n\r\n        console.log(lvl);\r\n\r\n        if (this.cur_bg + 1 !== lvl) {\r\n\r\n            for (let i = 0; i < this.preloader_movies.length; i++) this.preloader_movies[i].y = this.preloader_movies[i].startY;\r\n\r\n            pre_control.preloader.back_mc.y = pre_control.preloader.back_mc.startY;\r\n            \r\n            for (let i = 1; i <= 4; i++) {\r\n                pre_control.constructLoza(pre_control.preloader['stebel' + i + '_mc'],\r\n                    [pre_control.preloader['st' + i + '_0'], pre_control.preloader['st' + i + '_1'], pre_control.preloader['st' + i + '_2']], pre_control['stebel' + i + '_params'],\r\n                    i - 1,\r\n                    true,\r\n                    false,\r\n                    lvl);\r\n                //pre_control.preloader['stebel' + i + '_mc'].y += my_height;\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        this.constructBGS(lvl);\r\n        \r\n\r\n        window.text = new PIXI.Text();\r\n\r\n        text.x = 240;\r\n        \r\n        root.layer2_mc.addChild(text);\r\n    }\r\n\r\n    \r\n\r\n    constructBGS(end_lvl){\r\n        if (this.cur_bg + 1 == end_lvl) return this.initLevelIcons();\r\n        //if()\r\n\r\n        //console.log(end_lvl);\r\n\r\n        if (typeof (this.grad_info[this.cur_bg]) == 'undefined'){\r\n            this.cur_bg = 0;\r\n\r\n            return this.initLevelIcons();\r\n        }\r\n\r\n        let ease = 'none';\r\n        //if (this.cur_bg + 1 == end_lvl-1) ease = 'expo.out';\r\n\r\n        let bg = helper.gradient(this.grad_info[this.cur_bg]['from'], this.grad_info[this.cur_bg]['to'], this.grad_info[this.cur_bg]['del']);\r\n        bg.y = -1 * my_height * (this.cur_bg+1);\r\n        pre_control.preloader.back_mc.addChild(bg);\r\n        for (let i = 0; i < this.preloader_movies.length; i++)gsap.to(this.preloader_movies[i], { duration: 0.6, y: this.preloader_movies[i].y+my_height, ease: ease});\r\n\r\n        gsap.to(pre_control.preloader.back_mc, { duration: 0.6, y: pre_control.preloader.back_mc.y + my_height, onComplete: () => this.constructBGS(end_lvl), ease: ease});\r\n\r\n        if (this['constructBG' + (this.cur_bg + 1)]) this['constructBG' + (this.cur_bg + 1)]();\r\n\r\n        this.cur_bg++;\r\n    }\r\n\r\n    constructBG1(){\r\n        //начальный y\r\n        let startY = my_height / 2 - 26 * scale_coef;\r\n        let bird_lines = 2;//определяет количество основных линий. допов будет на 1 меньше (маленьких)\r\n        let cnt_birds = Math.ceil(my_width / this.birds_width_coef) + 1;//на каждой линии одинаковое количество птиц. за счет разности скоростей и стартового разброса по Х будут выглядеть хорошо\r\n\r\n\r\n        for (let n = 0; n < bird_lines; n++) {\r\n            //у каждой линии есть свой мини-дублёр, но последняя не добавляется в работу\r\n            let my_line = new PIXI.Container();\r\n            let my_line_small = new PIXI.Container();\r\n\r\n\r\n            let start_x = Math.random() * (-1 * this.birds_width_coef);\r\n            let start_x_small = Math.random() * (-1 * this.birds_width_coef);\r\n\r\n            let speed = 86 + Math.random() * 42;//задаем небольшой разброс по скорости для ЛИНИИ\r\n\r\n            for (let i = 0; i < cnt_birds; i++) {\r\n                let rand = ['bird_blue', 'bird_red'][Math.floor(Math.random() * 2)];\r\n\r\n                //у каждого облака в линии есть дублёр для бесшовной анимации\r\n                let bird = helper.duplicate(this.bg_movs[rand]);\r\n                let bird_copy = helper.duplicate(this.bg_movs[rand]);\r\n\r\n                \r\n\r\n                bird.scale.x = bird.scale.y = bird_copy.scale.x = bird_copy.scale.y = scale_coef * (Math.random() * 0.1 + 0.9);//дублер находится за сценой, поэтому ему анимация не нужна\r\n\r\n\r\n                this.birds.big.push(bird);//ЭТО ОСНОВНАЯ ЛИНИЯ. Кидаем в массив для АНИМАЦИИ\r\n\r\n\r\n\r\n                bird.y = bird_copy.y = -1 * my_height + startY + Math.random() * 20 + n * (185 * scale_coef);\r\n                bird.x = start_x + i * this.birds_width_coef;\r\n                bird_copy.x = start_x + i * this.birds_width_coef - (cnt_birds * this.birds_width_coef);//копию кидаем за кадр\r\n\r\n                bird_copy.alpha = bird.alpha = 0.9;\r\n\r\n                my_line.addChild(bird);\r\n                my_line.addChild(bird_copy);\r\n\r\n                let rand_small = ['bird_blue', 'bird_red'][Math.floor(Math.random()*2)];\r\n\r\n                let bird_small = helper.duplicate(this.bg_movs[rand_small]);\r\n                let bird_small_copy = helper.duplicate(this.bg_movs[rand_small]);\r\n\r\n                bird_small.scale.y = bird_small_copy.scale.y = scale_coef * (Math.random() * 0.1 + 0.7);\r\n                bird_small.scale.x = bird_small_copy.scale.x = bird_small_copy.scale.y*-1;\r\n\r\n                this.birds.small.push(bird_small);\r\n\r\n                bird_small.y = bird_small_copy.y = -1 * my_height + startY + 99 + Math.random() * 20 + n * (185 * scale_coef);//Доп линия смещена примерно на половину ширины линии (110px/2)\r\n                bird_small.x = start_x_small + i * this.birds_width_coef;\r\n                bird_small_copy.x = start_x_small + i * this.birds_width_coef + (cnt_birds * this.birds_width_coef);\r\n\r\n                bird_small_copy.alpha = bird_small.alpha = 0.8;\r\n\r\n                my_line_small.addChild(bird_small);\r\n                my_line_small.addChild(bird_small_copy);\r\n            }\r\n\r\n\r\n\r\n            //Тут происходит анимация движения облаков. со своими скоростями\r\n            //ЭТИ ФУНКЦИИ В ЦИКЛЕ построения линий. Держим это в голове\r\n\r\n            let f1 = () => gsap.to(my_line, { ease: \"none\", x: cnt_birds * this.birds_width_coef, duration: (cnt_birds * this.birds_width_coef) / speed, onComplete: f2 })\r\n            let f3 = () => gsap.to(my_line_small, { ease: \"none\", x: -1*cnt_birds * this.birds_width_coef, duration: (cnt_birds * this.birds_width_coef) / (speed / 2), onComplete: f4 });\r\n\r\n            let f2 = () => {\r\n                if (!my_line.parent) return;\r\n                my_line.x = 0;\r\n                f1();\r\n            }\r\n\r\n            let f4 = () => {\r\n                if (!my_line_small.parent) return;\r\n                my_line_small.x = 0;\r\n                f3();\r\n            }\r\n\r\n            f1();\r\n            f3();\r\n\r\n            pre_control.preloader.anim_up.addChild(my_line);\r\n            pre_control.preloader.anim_down.addChild(my_line_small);//доп линию на сцену кидаем ТОЛЬКО когда нужно\r\n        }\r\n        \r\n    }\r\n\r\n    constructBG2() {\r\n        //начальный y\r\n        let startY = my_height / 2 - 125 * scale_coef;\r\n        let airplane_lines = 1;//определяет количество основных линий. допов будет на 1 меньше (маленьких)\r\n        let cnt_airplanes = Math.ceil(my_width / this.airplanes_width_coef) + 1;//на каждой линии одинаковое количество птиц. за счет разности скоростей и стартового разброса по Х будут выглядеть хорошо\r\n\r\n\r\n        for (let n = 0; n < airplane_lines; n++) {\r\n            //у каждой линии есть свой мини-дублёр, но последняя не добавляется в работу\r\n            let my_line = new PIXI.Container();\r\n            let my_line_small = new PIXI.Container();\r\n\r\n\r\n            let start_x = Math.random() * (-1 * this.airplanes_width_coef);\r\n            let start_x_small = Math.random() * (-1 * this.airplanes_width_coef);\r\n\r\n            let speed = 126 + Math.random() * 42;//задаем небольшой разброс по скорости для ЛИНИИ\r\n\r\n            for (let i = 0; i < cnt_airplanes; i++) {\r\n                //у каждого облака в линии есть дублёр для бесшовной анимации\r\n                let airplane = helper.duplicate(this.bg_movs['airplane']);\r\n                let airplane_copy = helper.duplicate(this.bg_movs['airplane']);\r\n\r\n                airplane_copy.scale.x = airplane_copy.scale.y = airplane.scale.x = airplane.scale.y = scale_coef * (Math.random() * 0.3 + 0.7);//дублер находится за сценой, поэтому ему анимация не нужна\r\n\r\n\r\n                this.airplanes.big.push(airplane);//ЭТО ОСНОВНАЯ ЛИНИЯ. Кидаем в массив для АНИМАЦИИ\r\n\r\n\r\n                airplane.y = airplane_copy.y = -2 * my_height + startY + Math.random() * 50 + n * (250 * scale_coef);\r\n                airplane.x = start_x + i * this.airplanes_width_coef;\r\n                airplane_copy.x = start_x + i * this.airplanes_width_coef - (cnt_airplanes * this.airplanes_width_coef);//копию кидаем за кадр\r\n\r\n                airplane_copy.alpha = airplane.alpha = Math.random()*0.3 + 0.4;\r\n\r\n                my_line.addChild(airplane);\r\n                my_line.addChild(airplane_copy);\r\n\r\n\r\n                let airplane_small = helper.duplicate(this.bg_movs['airplane']);\r\n                let airplane_small_copy = helper.duplicate(this.bg_movs['airplane']);\r\n\r\n                airplane_small.scale.y = airplane_small_copy.scale.y = scale_coef * (Math.random() * 0.3 + 0.3);\r\n                airplane_small.scale.x = airplane_small_copy.scale.x = airplane_small_copy.scale.y * -1;\r\n\r\n                this.airplanes.small.push(airplane_small);\r\n\r\n                airplane_small.y = airplane_small_copy.y = -2 * my_height + startY + (175 * scale_coef) + Math.random() * 50 + n * (250 * scale_coef);//Доп линия смещена примерно на половину ширины линии (110px/2)\r\n                airplane_small.x = start_x_small + i * this.airplanes_width_coef;\r\n                airplane_small_copy.x = start_x_small + i * this.airplanes_width_coef + (cnt_airplanes * this.airplanes_width_coef);\r\n\r\n                airplane_small_copy.alpha = airplane_small.alpha = 0.8;\r\n\r\n                my_line_small.addChild(airplane_small);\r\n                my_line_small.addChild(airplane_small_copy);\r\n            }\r\n\r\n\r\n\r\n            //Тут происходит анимация движения облаков. со своими скоростями\r\n            //ЭТИ ФУНКЦИИ В ЦИКЛЕ построения линий. Держим это в голове\r\n\r\n            let f1 = () => gsap.to(my_line, { ease: \"none\", x: cnt_airplanes * this.airplanes_width_coef, duration: (cnt_airplanes * this.airplanes_width_coef) / speed, onComplete: f2 })\r\n            let f3 = () => gsap.to(my_line_small, { ease: \"none\", x: -1 * cnt_airplanes * this.airplanes_width_coef, duration: (cnt_airplanes * this.airplanes_width_coef) / (speed / 2), onComplete: f4 });\r\n\r\n            let f2 = () => {\r\n                if (!my_line.parent) return;\r\n                my_line.x = 0;\r\n                f1();\r\n            }\r\n\r\n            let f4 = () => {\r\n                if (!my_line_small.parent) return;\r\n                my_line_small.x = 0;\r\n                f3();\r\n            }\r\n\r\n            f1();\r\n            f3();\r\n\r\n            pre_control.preloader.anim_down.addChild(my_line);\r\n            pre_control.preloader.anim_down.addChild(my_line_small);//доп линию на сцену кидаем ТОЛЬКО когда нужно\r\n        }\r\n\r\n    }\r\n\r\n    constructBG3() {\r\n        gsap.to(pre_control.preloader.up_blows, { duration: 0.6, y: pre_control.preloader.up_blows.y + my_height});\r\n        gsap.to(pre_control.preloader.down_blows, { duration: 0.6, y: pre_control.preloader.down_blows.y + my_height});\r\n\r\n        let upper_plus = 230*scale_coef;\r\n        let down_minus = 109*scale_coef;\r\n\r\n        let f1 = ()=>{\r\n            let rocket = helper.duplicate(this.bg_movs['rocket']);\r\n\r\n            rocket.x = my_width / 2 + Math.random() * my_width / 2;\r\n            rocket.y = -2 * my_height + down_minus;\r\n\r\n            rocket.scale.x = rocket.scale.y = 0.7 + Math.random() * 0.2;\r\n\r\n            //rocket.alpha = rocket.scale.x + 0.5;\r\n\r\n\r\n            let speed = (120 + Math.random() * 50) * rocket.alpha;\r\n\r\n            rocket.rotation = -15 * (Math.PI / 180);\r\n\r\n            let end_y = -1 * down_minus + upper_plus + my_height;\r\n            let end_x = Math.tan(-1 * rocket.rotation) * end_y;\r\n            let distance = Math.sqrt(end_y * end_y + end_x * end_x);\r\n\r\n            gsap.to(rocket, { duration: distance / speed, alpha: 0, x: end_x, y: -1 * end_y - my_height * 2, onComplete: () => { pre_control.preloader.anim_down.removeChild(rocket); f1()} })\r\n\r\n            pre_control.preloader.anim_down.addChild(rocket);\r\n        }\r\n\r\n        f1();\r\n\r\n        /*let ivl = setInterval(() => {\r\n            f1();\r\n        }, 6000);*/\r\n\r\n    }\r\n\r\n    constructBG4(){\r\n        let ufo = helper.duplicate(this.bg_movs['ufo']);\r\n\r\n        let f1 = ()=>{\r\n            let minus = Boolean(Math.floor(Math.random()*2));\r\n\r\n            minus = minus?-1:1;\r\n\r\n            ufo.y = -4 * my_height +  (my_height / 2 + Math.random() * my_height / 4);\r\n\r\n            ufo.x = my_width * 1.5 * minus;\r\n\r\n            let center_diff = 150 + Math.random() * 150\r\n\r\n            gsap.to(ufo, {duration: 2, ease: 'expo.out', x: my_width / 2 + center_diff * minus, onComplete: () => {\r\n                    ufo.anim.play();\r\n\r\n                    let ivl = setInterval(() => {\r\n                        clearInterval(ivl);\r\n                        gsap.to(ufo, {duration: 2, ease: 'expo.in', x: -1 * my_width * 1.5 * minus, onComplete: ()=>{\r\n                            let ivl = setInterval(() => {\r\n                                clearInterval(ivl);\r\n                                f1();\r\n                            }, 3000);\r\n                        }});\r\n                    }, 3500);\r\n                }\r\n            });\r\n        }\r\n\r\n        f1();\r\n\r\n        pre_control.preloader.anim_down.addChild(ufo);\r\n    }\r\n\r\n    showValuta(){\r\n        helper.numberAnimation(this.medals.tf_txt, udata['medals']);\r\n        helper.numberAnimation(this.exp.tf_txt, udata['exp']);\r\n    }\r\n\r\n    initUserPhoto(){\r\n        helper.loadPhoto50(vk_params['viewer_id'], (data)=>{\r\n            this.my_level.ava_mc.scale.x = this.my_level.ava_mc.scale.y = 0;\r\n            this.my_level.ava_mc.visible = true;\r\n\r\n            data['photo'].width = data['photo'].height = 42;\r\n\r\n            this.my_level.ava_mc.photo_mc.addChild(data['photo']);\r\n\r\n            gsap.to(this.my_level.ava_mc.scale, {duration: 0.15, x: 1, y: 1, ease: 'back.out(2)', onComplete: ()=>{\r\n                learn.check();\r\n            }});\r\n\r\n            setTextStyle(this.my_level.ava_mc.tf_txt, { dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#4b413b\", strokeThickness: 3 });\r\n        })\r\n\r\n        this.updateLevelProgress();\r\n\r\n        this.my_level.on('pointertap', () => { sounds.playClick(); game.init()});\r\n    }\r\n\r\n    updateLevelProgress(){\r\n        udata['level_progress']['length'] = udata['level_progress']['length'] || 1;\r\n        udata['level_progress']['word'] = udata['level_progress']['word'] || [];\r\n\r\n        udata['levels_info']['cnt'][udata['level'] - 1] = udata['levels_info']['cnt'][udata['level'] - 1] || 0;\r\n\r\n\r\n\r\n        this.my_level.ava_mc.tf_txt.text = Math.floor((udata['levels_info']['cnt'][udata['level'] - 1] % 10) * 10 + Math.floor((udata['level_progress']['word'].length / udata['level_progress']['length']) * 10)) + '%';\r\n    }\r\n\r\n    initLevelIcons(type = 'default', num = 0){\r\n        num = Math.floor((udata['level']-1)/10);\r\n        if(udata['level'] < 11)type = 'first';\r\n\r\n        if (this.lvls.parent) this.lvls.parent.removeChild(this.lvls);\r\n\r\n        this.lvls = new PIXI.Container();\r\n\r\n        let base_up = my_height - this.root_scene.stebel1_mc.y;//насколько поднята лоза над нижним краем\r\n        let base_upper = this.root_scene.stebel1_mc.height - my_height;//сколько находится НАД верхним краем\r\n\r\n        this.lvls.y = -1 * this.root_scene.stebel1_mc.height + base_up + base_upper;//истинный 0 для уровней\r\n\r\n        this.root_scene.stebel1_mc.addChild(this.lvls);\r\n\r\n        let arr = [];\r\n        let ind = 0;\r\n\r\n        this.lvl_ics = [];\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            let copy = helper.duplicate(this.lvl_ico);\r\n\r\n            copy.scale.x = copy.scale.y = 0;\r\n\r\n            copy.y = this.level_points[type][i];\r\n\r\n            //тут подтыриваем индексы у магии, чтобы по лозе скоординировать иконки уровней\r\n            let index = Math.floor((-1 * base_up + my_height - copy.y) / scale_coef);\r\n            if (index >= loza_points.length) index = loza_points.length - 1;\r\n\r\n            copy.x = (loza_points[index] - 30) * scale_coef;\r\n\r\n            this.lvls.addChild(copy);\r\n\r\n            arr.push(copy);\r\n            this.lvl_ics[1+i + 10 * num] = copy;\r\n\r\n            udata['levels_info']['cnt'] = udata['levels_info']['cnt'] || [];\r\n\r\n            copy.level_txt.text = parseInt(i + 1 + 10 * num);\r\n            udata['levels_info']['cnt'][i + 10 * num] = udata['levels_info']['cnt'][i + 10 * num] || 0;\r\n\r\n            copy.icon_mc.gotoAndStop(helper.levelComplete(udata['levels_info']['cnt'][i + 10 * num]));\r\n\r\n            if ((i + 10 * num) >= udata['level'] && !udata['levels_info']['cnt'][i + 10 * num]){ \r\n                copy.level_txt.text = '';\r\n                copy.icon_mc.gotoAndStop(4);\r\n            }\r\n\r\n            if (i+10*num == udata['level'] - 1){\r\n                this.my_level = copy;\r\n\r\n                setButton(copy);\r\n            }\r\n\r\n            \r\n            copy.ava_mc.visible = false;\r\n        }\r\n\r\n        \r\n        //АНИМАЦИЯ ОТОБРАЖЕНИЯ\r\n        let f1 = () => {\r\n            gsap.to(arr[ind].scale, {\r\n                duration: 0.15, x: scale_coef, y: scale_coef, ease: 'back.out(2)', onComplete: () => {\r\n                    ind++;\r\n                    arr[ind]? f1() : this.initUserPhoto();\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        f1();\r\n\r\n        this.checkFrientPermits();\r\n    }\r\n\r\n    checkFrientPermits(){\r\n        bridge.send(\"VKWebAppCheckAllowedScopes\", { scopes: \"friends\" }).then(e => {\r\n            let real_res = Boolean(e['result'][0]['allowed']);\r\n\r\n            real_res ? this.getFriendTop():this.activateDefFriend();\r\n        });\r\n    }\r\n\r\n    getFriendTop(){\r\n        if (this.lvl_ics[parseInt(udata['level']) + 1])this.lvl_ics[parseInt(udata['level']) +1].friend_def.visible = false;\r\n\r\n        if (window.my_friends)return this.getTrueFriendTop();\r\n\r\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", { method: 'friends.getAppUsers', params: { access_token: VK_token, v: VK_version } }).then(data => {\r\n            let ids = '';\r\n\r\n\r\n            vk_params['api_result'] = data['response'];\r\n            vk_params['api_result'].length > 0 ? ids = vk_params['viewer_id'] + \",\" + vk_params['api_result'].join(\",\") : ids = vk_params['viewer_id'].toString();\r\n\r\n            window.my_friends = ids;\r\n\r\n            this.getTrueFriendTop();\r\n        })\r\n    }\r\n\r\n    getTrueFriendTop(){\r\n        TS.php('friends.get', { users: my_friends, level: udata['level'] }, (e) => { \r\n\r\n            this.lvl_friends = [];\r\n            \r\n            for(let i = 0; i < e.rating.length; i++){\r\n                if (e.rating[i].level == udata['level'])continue;\r\n                this.lvl_friends[e.rating[i].level] = this.lvl_friends[e.rating[i].level] || [];\r\n\r\n                this.lvl_friends[e.rating[i].level].push(e.rating[i].id);\r\n            }\r\n\r\n            helper.pushPhoto50(e.ids.split(','), (e)=>{if(e)this.loadFriendLvls()});\r\n\r\n        }, pre_control.onError);\r\n    }\r\n\r\n    loadFriendLvls(){\r\n        let keys = Object.keys(this.lvl_friends);\r\n\r\n        for(let i = 0; i < keys.length; i++){\r\n            let target = this.lvl_ics[keys[i]].friend_full;\r\n\r\n            helper.loadPhoto50(this.lvl_friends[keys[i]][0], (data)=>{\r\n                target.scale.x = target.scale.y = 0;\r\n                target.alpha = 1;\r\n                target.visible = true;\r\n\r\n                data['photo'].width = data['photo'].height = 42;\r\n\r\n                target.photo_mc.addChild(data['photo']);\r\n\r\n                setButton(target);\r\n\r\n                target.on('pointertap', ()=>{\r\n                    window.open(\"https://vk.com/id\" + this.lvl_friends[keys[i]][0], \"_blank\")\r\n                })\r\n\r\n                gsap.to(target.scale, {duration: 0.15, x: 1, y: 1, ease: 'back.out(2)'});\r\n\r\n                if (this.lvl_friends[keys[i]].length > 1) target.count_txt.text = '+' + (this.lvl_friends[keys[i]].length-1);\r\n\r\n                setTextStyle(target.count_txt, { dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#4b413b\", strokeThickness: 3 });\r\n            })\r\n        }\r\n    }\r\n\r\n    activateDefFriend(){\r\n        if (udata['level'] == 1 || !udata['level']%10) return;\r\n\r\n        this.lvl_ics[parseInt(udata['level']) +1].friend_def.alpha = 1;\r\n        this.lvl_ics[parseInt(udata['level']) +1].friend_def.scale.x = this.lvl_ics[parseInt(udata['level']) +1].friend_def.scale.y = 0;\r\n\r\n        gsap.to(this.lvl_ics[parseInt(udata['level']) +1].friend_def.scale, { x: 1, y: 1, duration: 0.3, ease: 'back.out(1.7)'});\r\n\r\n        setButton(this.lvl_ics[parseInt(udata['level']) +1].friend_def);\r\n\r\n        this.lvl_ics[parseInt(udata['level']) +1].friend_def.on('pointertap', ()=>{\r\n            bridge.send(\"VKWebAppGetAuthToken\", { \"app_id\": parseInt(vk_params['api_id']), \"scope\": \"friends\" }).then(e=>{\r\n\r\n                //console.log(e);\r\n\r\n                VK_token = e.access_token;\r\n                \r\n\r\n                helper.alphaAnimation(this.lvl_ics[parseInt(udata['level']) +1].friend_def, 0, 300, () => this.getFriendTop());\r\n            })\r\n        })\r\n    }\r\n\r\n    initButtons(){\r\n        setButton(this.shop_ico);\r\n        setButton(this.medals);\r\n        setButton(this.exp);\r\n        setButton(this.sett_btn);\r\n        setButton(this.settings.win.close_mc);\r\n        setButton(this.settings.win.render_mc.render_btn);\r\n\r\n        setButton(this.settings.win.render_mc.blow_mc.webgl_btn);\r\n        setButton(this.settings.win.render_mc.blow_mc.canvas_btn);\r\n\r\n        setButton(this.settings.win.sounds_mc.sound_mc);\r\n        setButton(this.settings.win.sounds_mc.music_mc);\r\n    }\r\n    initStyles(){\r\n        setTextStyle(this.exp.tf_txt, {dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#443f3d\", strokeThickness: 5});\r\n        setTextStyle(this.medals.tf_txt, {dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#443f3d\", strokeThickness: 5});\r\n\r\n    }\r\n\r\n}","export default class PreloaderControl{\r\n\tconstructor(preloader_movie){\r\n\t\tthis.preloader = preloader_movie;\r\n\r\n\t\tthis.error_win = this.preloader.error_full;\r\n\r\n\t\t//Hm - сколько нужно отступить от низа\r\n\t\t//Wm - сколько нужно отступить от центра в сторону\r\n\t\t//w1-w3 - высота частей\r\n\t\t//Wh - базовая ширина для маски\r\n\t\t//points - \"ведущие\" точки для магии и уровней\r\n\r\n\t\tthis.tree_params = {Wm:556, Hm:460};\r\n\t\tthis.ground_params = {Wm:407, Hm:130};\r\n\t\tthis.boby_params = {Wm:0, Hm:74};\r\n\t\tthis.korni_params = {Wm:0, Hm:50};\r\n\t\tthis.gmask_params = {Wm:0, Hm:139};\r\n\r\n\t\tthis.error_win.interactive = true;\r\n\r\n\t\twindow.my_width = window.innerWidth*window.devicePixelRatio;//реальная ширина\r\n\t\twindow.my_height = window.innerHeight*window.devicePixelRatio;//реальная высота\r\n\r\n\t\tthis.cuts_loza = [];\r\n\r\n\t\t\r\n\t\tthis.stebel1_params = {magic:this.preloader.magic1_mc, Wm:0, Hm:34, w1:594, w2:648, w3:122, Wh:150, points:[\r\n\t\t\t[-17,-18,-18,-18,-19,-19,-19,-20,-20,-20,-21,-21,-22,-22,-22,-23,-23,-23,-24,-24,-24,-24,-25,-25,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-26,-26,-25,-25,-25,-25,-24,-24,-24,-24,-23,-23,-23,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-17,-17,-17,-17,-17,-17,-16,-16,-16,-16,-16,-15,-15,-15,-14,-14,-13,-13,-12,-12,-11,-11,-10,-9,-9,-8,-7,-7,-7,-6,-5,-5,-5,-4,-4,-4,-3,-3,-2,-1,-1,-1,-1,0,0,0,1,2,2,3,3,4,4,5,6,6,7,8,9,10,10,12,12,13,13,14,15,16,17,17,17,18,19,19,20,20,21,21,21,21,22,22,22,22,23,23,23,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,27,28,28,28,29,29,30,30,30,30,31,32,32,32,33,33,33,33,34,34,35,36,36,37,37,38,39,39,40,41,41,42,42,43,43,44,44,45,45,45,45,45,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,48,48,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,50,50,50,49,49,48,48,48,47,47,47,46,46,46,45,44,44,44,44,43,43,43,43,42,42,42,41,41,40,40,40,39,39,38,38,38,37,37,36,35,35,34,33,33,31,31,30,30,28,27,25,24,23,22,21,20,19,18,17,16,16,15,14,13,13,11,10,9,9,7,6,5,5,3,2,1,0,-1,-2,-3,-4,-5,-6,-7,-8,-8,-9,-10,-10,-10,-11,-11,-12,-12,-13,-14,-14,-15,-15,-16,-17,-17,-18,-19,-19,-20,-21,-22,-22,-23,-23,-24,-25,-26,-26,-27,-27,-28,-28,-29,-30,-31,-31,-32,-32,-32,-32,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-35,-35,-35,-36,-36,-36,-36,-37,-37,-37,-38,-38,-38,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-38,-38,-38,-37,-37,-37,-36,-36,-35,-35,-34,-34,-33,-32,-32,-31,-30,-30,-29,-28,-28,-27,-27,-26,-25,-25,-24,-23,-23,-23,-22,-21,-21,-20,-20,-20,-19,-19,-18,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-13,-13,-13,-13,-12,-12,-12,-11,-11,-11,-10,-10,-9,-8,-8,-8,-7,-7,-7,-6,-5,-5,-4,-4,-4,-3,-3,-3,2,-1,-1,0,0,0,1,1,1,3,3,3,4,4,5,5,5,6,6,6,7,7,8,8,8,8,8,8,9,9,9,9,10,10,10,11,12,12,12,12,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14],\r\n\t\t\t[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,8,8,8,7,7,7,5,5,5,4,4,4,2,2,2,2,1,1,1,1,1,1,1,1,1,-2,-2,-2,-3,-3,-3,-5,-5,-5,-6,-6,-6,-8,-9,-9,-9,-11,-11,-12,-12,-12,-12,-14,-15,-15,-15,-17,-17,-17,-17,-17,-18,-18,-18,-20,-21,-21,-21,-21,-21,-23,-23,-23,-23,-24,-24,-24,-24,-25,-25,-25,-25,-25,-27,-27,-27,-27,-27,-27,-28,-28,-28,-28,-30,-30,-30,-30,-30,-31,-33,-33,-33,-33,-34,-34,-34,-34,-34,-34,-36,-36,-36,-36,-36,-36,-37,-37,-37,-37,-37,-39,-39,-39,-39,-39,-39,-39,-39,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-39,-39,-39,-37,-37,-37,-37,-36,-36,-36,-36,-36,-34,-34,-34,-33,-31,-31,-30,-30,-28,-28,-27,-25,-25,-25,-24,-24,-23,-21,-21,-20,-18,-18,-17,-17,-17,-15,-14,-14,-12,-9,-9,-8,-6,-5,-5,-2,-2,-2,1,2,2,5,5,5,8,10,10,11,13,13,14,17,17,19,20,20,20,23,25,25,26,27,27,29,30,30,32,33,33,35,36,36,38,38,38,39,41,41,41,42,42,42,44,44,44,45,47,47,47,48,48,48,48,48,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,54,54,54,52,52,52,51,51,51,51,51,50,50,50,50,48,48,48,47,47,47,45,45,45,44,44,44,44,42,42,42,42,42,41,39,39,39,38,38,36,36,36,33,33,33,32,30,29,29,27,26,26,25,23,23,22,20,20,20,19,19,16,16,16,14,13,13,10,8,8,8,5,4,4,1,1,1,-2,-3,-3,-5,-6,-6,-8,-9,-9,-11,-12,-12,-12,-14,-14,-15,-15,-15,-17,-17,-18,-18,-21,-21,-21,-23,-23,-23,-24,-24,-24,-27,-28,-28,-28,-30,-30,-30,-31,-31,-33,-33,-33,-33,-34,-34,-34,-36,-36,-36,-36,-37,-37,-37,-39,-39,-39,-39,-39,-40,-40,-40,-40,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-43,-43,-43,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-43,-43,-43,-42,-42,-40,-39,-39,-37,-37,-37,-36,-36,-36,-34,-34,-34,-34,-33,-33,-31,-31,-31,-31,-30,-30,-30,-28,-28,-28,-27,-27,-27,-25,-25,-25,-25,-24,-24,-24,-23,-23,-23,-23,-23,-21,-20,-20,-20,-18,-18,-18,-18,-18,-18,-17,-17,-17,-17,-15,-15,-14,-14,-14,-14,-12,-12,-12,-12,-12,-11,-11,-11,-9,-9,-8,-8,-8,-6,-6,-6,-5,-5,-3,-2,-2,-2,-2,-2,-2,1,1,1,1,1,2,2,2,4,5,5,5,5,7,7,7,7,7,7,8,8,8,8,8,8,8,8,10,10,10,11,11,11,11,11,11,11,11,11],\r\n\t\t\t[]\r\n\t\t]};\r\n\r\n\t\tthis.stebel2_params = {magic:this.preloader.magic2_mc, Wm:0, Hm:49, w1:512, w2:326, w3:198, Wh:150, points:[\r\n\t\t\t[-25,-25,-25,-25,-24,-23,-22,-22,-21,-21,-20,-20,-19,-18,-18,-18,-17,-17,-17,-17,-16,-16,-16,-16,-16,-15,-15,-14,-14,-14,-14,-14,-14,-14,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-13,-13,-13,-13,-13,-14,-14,-14,-14,-15,-15,-15,-15,-15,-16,-16,-16,-16,-16,-17,-17,-17,-17,-18,-18,-18,-18,-19,-19,-20,-20,-20,-21,-21,-21,-21,-22,-22,-22,-23,-23,-24,-24,-24,-24,-25,-25,-25,-25,-26,-26,-26,-27,-27,-27,-28,-28,-28,-28,-28,-29,-29,-29,-29,-29,-29,-29,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-32,-32,-32,-31,-31,-31,-31,-30,-30,-30,-29,-29,-29,-28,-28,-27,-26,-26,-25,-25,-24,-23,-23,-22,-22,-21,-21,-20,-19,-19,-18,-18,-18,-17,-17,-16,-16,-15,-14,-14,-14,-13,-12,-12,-12,-10,-10,-9,-9,-8,-7,-7,-6,-5,-5,-4,-4,-3,-2,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,6,5,5,5,5,4,4,4,4,3,3,2,1,1,1,1,1,1,-1,-1,-1,-2,-3,-3,-3,-4,-5,-5,-5,-6,-7,-7,-7,-8,-8,-9,-9,-10,-11,-11,-12,-12,-13,-14,-15,-15,-16,-17,-17,-18,-19,-20,-20,-21,-22,-22,-22,-24,-24,-24,-24,-25,-25,-26,-26,-26,-27,-28,-28,-28,-29,-29,-29,-30,-30,-30,-31,-31,-31,-32,-32,-32,-33,-33,-33,-33,-34,-34,-34,-34,-34,-35,-36,-36,-36,-36,-37,-37,-37,-37,-38,-38,-38,-38,-39,-40,-40,-40,-40,-40,-41,-41,-41,-41,-42,-42,-42,-42,-42,-43,-43,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-43,-43,-42,-42,-42,-42,-42],\r\n\t\t\t[-45,-45,-44,-44,-44,-43,-43,-43,-43,-42,-41,-41,-41,-40,-39,-39,-39,-37,-37,-36,-36,-35,-35,-34,-34,-33,-32,-32,-31,-31,-30,-30,-29,-28,-27,-27,-27,-26,-26,-25,-24,-24,-23,-23,-23,-22,-22,-21,-20,-20,-19,-18,-18,-17,-16,-16,-16,-15,-14,-14,-14,-14,-14,-13,-12,-12,-12,-12,-11,-11,-11,-11,-10,-10,-10,-9,-9,-9,-8,-8,-8,-8,-7,-7,-7,-7,-6,-6,-5,-5,-4,-4,-3,-3,-2,-2,-2,-1,-1,-1,-1,1,1,1,1,2,2,2,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,5,5,4,4,4,4,3,3,3,3,2,2,2,1,1,1,1,-1,-1,-2,-2,-3,-3,-3,-5,-5,-6,-6,-7,-8,-9,-10,-10,-11,-11,-13,-13,-14,-14,-15,-15,-17,-17,-18,-18,-19,-20,-21,-21,-22,-22,-23,-23,-24,-25,-25,-25,-26,-26,-26,-27,-27,-27,-28,-29,-29,-29,-30,-30,-30,-30,-31,-31,-31,-32,-33,-33,-33,-34,-34,-35,-35,-36,-36,-36,-37,-38,-38,-38,-39,-39,-39,-40,-40,-40,-41,-42,-42,-42,-43,-43,-43,-43,-44,-44,-44,-44,-45,-45,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-45,-45],\r\n\t\t\t[-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-46,-45,-45,-44,-44,-43,-43,-43,-42,-42,-42,-41,-40,-40,-40,-39,-39,-38,-38,-38,-37,-36,-36,-36,-36,-35,-35,-35,-34,-34,-33,-33,-32,-32,-31,-31,-31,-30,-30,-30,-29,-28,-28,-28,-27,-27,-26,-26,-26,-24,-24,-24,-23,-23,-22,-22,-22,-21,-20,-20,-19,-19,-18,-17,-17,-16,-15,-14,-13,-12,-10,-9,-9,-7,-6,-4,-3,-2,-1,1,1,3,4,5,6,7,8,9,10,11,12,14,15,15,16,18,19,19,21,22,23,24,24,26,27,27,28,29,30,30,31,31,32,33,34,34,35,35,36,36,37,38,38,38,39,39,40,40,41,42,42,43,43,44,44,44,45,46,46,46,47,47,48,48,49,49,49,49,50,51,51,51,52,52,52,52,53,53,53,54,54,55,55,55,56,56,56,57,57,58,58,58,59,59,59,60,60,60,60,60,60,60,61,61]\r\n\t\t]};\r\n\r\n\t\tthis.stebel3_params = {magic:this.preloader.magic3_mc, Wm:0, Hm:52, w1:636, w2:857, w3:64, Wh:150, points:[\r\n\t\t\t[3,3,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,7,6,6,5,5,5,5,5,5,4,4,4,4,4,4,4,3,3,3,3,3,3,3,2,2,2,1,1,1,1,1,1,1,-1,-1,-1,-2,-2,-2,-3,-3,-4,-4,-4,-4,-4,-5,-5,-5,-5,-5,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-4,-3,-3,-2,-2,-1,-1,-1,-1,1,2,2,3,3,4,4,5,6,6,6,7,7,8,8,9,10,10,11,11,12,12,13,14,14,15,15,16,16,17,18,18,19,19,19,20,20,20,21,21,22,23,23,23,24,24,25,25,26,26,27,28,28,29,30,31,31,31,32,32,33,33,34,35,35,36,36,36,37,37,38,39,39,39,40,40,40,40,41,41,41,41,42,43,43,43,44,44,45,45,45,45,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,56,56,56,56,55,54,54,54,54,54,54,54,54,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,52,52,52,52,52,52,52,52,52,52,51,51,51,51,51,51,50,50,50,50,50,50,50,50,50,50,50,49,49,49,49,49,49,49,49,49,49,48,48,48,48,48,46,46,45,45,44,43,42,42,41,41,40,39,38,37,37,36,36,35,34,34,33,32,32,32,31,30,30,29,29,28,28,27,27,25,25,25,24,23,23,22,21,20,20,19,19,18,17,17,16,15,15,14,13,13,12,12,11,10,9,9,8,8,7,7,6,5,5,4,4,3,2,1,1,-1,-2,-4,-5,-6,-8,-9,-10,-10,-12,-13,-13,-14,-15,-16,-16,-17,-17,-18,-18,-19,-20,-21,-21,-21,-22,-23,-23,-24,-25,-25,-25,-26,-26,-27,-28,-28,-28,-28,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-30,-30,-30,-30],\r\n\t\t\t[-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-29,-29,-29,-28,-28,-28,-27,-26,-25,-25,-24,-24,-23,-23,-22,-21,-20,-20,-19,-19,-18,-18,-17,-16,-15,-15,-14,-14,-12,-12,-11,-10,-8,-8,-7,-7,-6,-5,-5,-4,-3,-2,-2,-2,1,1,2,3,4,5,5,6,6,7,8,8,9,10,10,11,12,13,13,14,15,15,17,17,17,18,19,19,21,21,22,22,23,24,25,26,26,27,27,28,29,29,30,30,30,31,32,33,33,34,34,35,35,37,37,38,38,38,39,40,40,41,41,42,42,42,42,43,43,43,43,44,44,45,45,45,45,45,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,49,49,50,50,50,50,51,51,51,52,52,53,53,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,54,54,54,54,53,53,53,53,53,53,52,52,52,52,51,51,51,51,51,51,50,50,49,49,49,49,49,49,48,48,48,48,48,48,48,47,47,47,47,47,46,46,46,46,46,45,44,44,44,44,43,43,43,43,42,42,42,42,42,41,41,40,40,40,39,39,39,38,38,38,38,38,37,37,36,36,36,36,36,35,35,35,35,35,34,34,34,34,34,33,33,33,32,32,32,32,31,31,31,31,30,30,30,30,29,28,28,28,28,27,27,26,26,26,25,24,24,24,23,23,22,22,20,20,20,19,19,18,18,17,16,16,15,15,14,14,13,13,13,12,11,11,10,10,10,9,9,9,7,7,7,6,6,5,5,4,4,3,3,2,2,1,1,-1,-1,-2,-2,-3,-3,-5,-6,-7,-7,-8,-9,-10,-10,-10,-11,-11,-11,-11,-12,-13,-13,-13,-13,-13,-14,-14,-14,-14,-14,-14,-15,-15,-15,-15,-15,-15,-16,-16,-16,-16,-16,-16,-16,-17,-17,-17,-17,-17,-17,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-13,-12,-12,-11,-10,-9,-9,-8,-8,-7,-6,-6,-6,-5,-4,-4,-3,-3,-3,-2,-2,-2,-1,-1,-1,-1,1,1,1,2,2,3,4,4,5,5,6,6,8,8,8,9,9,10,10,11,12,12,13,13,14,14,14,15,15,16,16,17,17,18,18,18,19,20,21,21,22,22,23,23,24,25,25,26,26,27,27,28,29,29,29,30,30,31,31,31,32,33,33,33,34,34,35,35,35,36,37,37,37,37,38,38,38,38,39,39,39,39,39,40,40,41,41,41,41,41,42,42,42,43,43,43,43,43,43,44,44,45,45,45,45,45,45,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,49,49,49,50,50,50,50,50,50,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,52,52,52,52,52,52,51,51,51,51,50,49,49,49,49,48,48,48,47,47,46,46,46,45,45,45,44,44,44,44,43,43,43,43,42,42,42,42,41,41,41,40,40,40,40,40,40,39,39,39,39,39,38,38,38,38,38,37,37,36,36,36,36,35,35,35,34,34,33,33,32,32,31,31,30,30,29,28,28,27,27,26,26,25,24,24,23,23,22,22,21,20,20,19,18,18,18,16,16,15,15,14,13,12,11,10,9,7,6,6,4,4,3,2,1,1,-1,-2,-3,-5,-5,-6,-7,-9,-10,-11,-13,-14,-14,-15,-17,-17,-18,-18,-19,-20,-20,-22,-22,-23,-23,-24,-24,-25,-26,-26,-26,-27,-27,-27,-28,-28,-28,-29,-30,-30,-30,-31,-31,-31,-31,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-30,-30],\r\n\t\t\t[]\r\n\t\t]};\r\n\r\n\t\tthis.stebel4_params = {magic:this.preloader.magic4_mc, Wm:0, Hm:43, w1:442, w2:553, w3:244, Wh:150, points:[\r\n\t\t\t[35,33,32,32,31,30,29,28,28,27,26,25,25,24,23,22,22,21,20,20,19,19,18,18,18,18,17,17,17,17,16,16,16,16,16,16,15,15,15,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,17,17,17,17,17,18,19,19,19,19,20,20,20,21,21,21,22,23,24,24,25,25,26,27,27,28,28,29,29,30,30,31,31,31,32,32,32,32,33,33,33,33,34,34,34,35,35,36,36,36,37,37,37,37,38,38,38,39,39,40,40,40,41,41,41,41,41,42,42,42,42,43,43,43,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,44,44,44,43,43,43,43,43,43,43,43,43,43,42,42,42,42,42,41,41,41,40,39,39,38,38,37,37,36,35,35,35,34,34,33,32,32,32,30,29,29,28,27,26,25,24,24,22,21,21,19,18,17,17,16,15,14,14,13,13,12,12,11,10,9,8,8,7,6,6,5,4,3,2,1,1,-1,-2,-2,-3,-4,-5,-6,-7,-8,-9,-9,-10,-11,-12,-12,-13,-15,-15,-16,-16,-17,-18,-18,-19,-20,-20,-21,-21,-23,-23,-24,-24,-25,-25,-26,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-28,-28,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-28,-28,-28,-27,-27,-26,-26,-25,-25,-24,-24,-22,-22,-22,-22,-21,-21,-21,-20,-20,-19,-19,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-14,-14,-13,-13,-12,-12,-11,-10,-10,-10,-9,-9,-8,-8,-7,-6,-6,-6,-5,-5,-4,-4,-4,-2,-2,-1,-1,-1,-1,-1,-1,1,1,2,3,4,4,5,5,7,7,8,9,9,11,11,12,12,13,13,14,14,15,15,15,15,16,16,16,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],\r\n\t\t\t[18,18,18,18,17,16,16,16,15,15,15,15,15,14,14,14,14,14,14,14,13,13,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,7,7,7,6,6,6,5,5,5,4,4,3,3,3,2,2,1,1,1,-1,-1,-2,-2,-3,-4,-4,-5,-6,-7,-7,-8,-8,-9,-10,-10,-11,-12,-12,-13,-14,-14,-15,-15,-16,-17,-17,-18,-18,-19,-20,-20,-21,-22,-22,-22,-23,-23,-23,-24,-24,-24,-24,-25,-25,-25,-26,-26,-26,-26,-26,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-27,-26,-26,-25,-25,-25,-25,-25,-24,-24,-24,-23,-23,-23,-23,-22,-21,-21,-21,-20,-20,-19,-19,-19,-18,-17,-16,-15,-13,-13,-11,-10,-9,-8,-7,-6,-5,-5,-4,-3,-3,-2,-1,-1,1,1,2,3,4,4,5,6,7,7,8,9,9,10,11,12,13,13,14,15,16,17,18,18,20,21,21,22,24,25,26,27,28,29,30,31,32,33,33,34,35,37,37,38,39,39,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,43,43,43,43,43,43,43,43,44,44,45,45,45,46,46,46,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,47,47,47,47,46,46,46,45,44,44,44,43,43,42,42,42,41,40,40,40,39,38,38,37,36,36,35,34,34,33,33,32,31,31,31,30,30,29,29,28,27,26,26,25,25,24,23,22,22,21,20,19,19,18,17,17,15,15,14,14,13,11,10,10,9,7,6,6,5,3,2,1,1,-1,-2,-3,-3,-4,-6,-7,-7,-8,-9,-10,-10,-11,-12,-12,-13,-14,-14,-15,-16,-16,-17,-18,-19,-19,-20,-20,-21,-22,-22,-23,-23,-24,-24,-25,-26,-26,-27,-27,-27,-28,-28,-28,-28,-28,-28,-29,-29,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-29,-29,-28,-28,-28,-27,-27,-27,-26,-25,-25,-25,-24,-24,-24,-24,-24,-23,-23,-23,-23,-23,-23,-23,-22,-22,-21,-21,-21,-21,-21,-20,-20,-19,-19,-19,-17,-17,-16,-15,-15,-13,-12,-11,-11,-9,-9,-8,-8,-8,-7,-7,-7,-6,-6,-5,-4,-4,-3,-3,-2,-1,-1,-1,1,1,1,2,2,3,3,4,4,4,4,5,5,5,5,6,6,6,7,7,8,9,9,10,10,12,12,13,13,14,14,16,16,16,17,17,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,18,18,18,18],\r\n\t\t\t[18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,20,20,20,20,21,21,21,21,22,23,24,24,25,25,25,26,27,27,27,28,29,29,30,31,31,32,32,33,34,35,35,36,36,37,38,38,39,40,40,40,41,41,42,43,43,44,44,44,45,45,45,46,46,47,47,47,47,47,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,51,51,50,50,50,49,48,48,48,48,47,47,46,46,45,45,45,45,44,44,44,44,44,44,44,44,43,42,42,42,42,42,42,41,41,41,41,40,40,39,39,38,38,37,37,36,36,35,34,34,33,32,32,32,31,30,30,30,30]\r\n\t\t]};\r\n\r\n\t\tthis.anim_logo_params = [{sX:-239, sY:105, eX:-244, eY:95, obj:this.preloader.logo_game.logo_gw.i_ch},\r\n\t\t\t\t\t\t\t\t{sX:-119, sY:18, eX:-122, eY:10, obj:this.preloader.logo_game.logo_gw.g_ch},\r\n\t\t\t\t\t\t\t\t{sX:17, sY:-8, eX:20, eY:-15, obj:this.preloader.logo_game.logo_gw.r_ch},\r\n\t\t\t\t\t\t\t\t{sX:157, sY:26, eX:162, eY:16, obj:this.preloader.logo_game.logo_gw.a_ch}];\r\n\t\tthis.anim_logo_slov = [this.preloader.logo_game.logo_ww.s_ch, this.preloader.logo_game.logo_ww.l_ch, this.preloader.logo_game.logo_ww.o_ch, this.preloader.logo_game.logo_ww.v_ch];\r\n\r\n\t\tthis.base_d = 3.5;//базовое время анимации букв\r\n\r\n\r\n\t\twindow.scale_coef = this.scaller();//главный коэффициент масштабирования\r\n\t\twindow.scale_speed = [287*scale_coef];//нужен для анимации лозы\r\n\r\n\t\tthis.blows = {big: [], small: []};\r\n\t\tthis.blow_width_coef = 350 * scale_coef;//базовое расстояние между облаками\r\n\r\n\t\tthis.preloader.logo_game.alpha = 0;\r\n\r\n\t\tthis.preloader.logo_game.scale.x = this.preloader.logo_game.scale.y = scale_coef;\r\n\t\tthis.preloader.logo_game.x = my_width/2;\r\n\t\tthis.preloader.logo_game.y = my_height/2;\r\n\r\n\r\n\t\tthis.error_win.win.close_mc.on('pointertap', () => { sounds.playClick(); this.closeError()});\r\n\r\n\t\tsetButton(this.error_win.win.close_mc);\r\n\t\tsetButton(this.error_win.win.butt_mc);\r\n    \t\r\n\t\tthis.constructBG(this.preloader.trees_mc, this.preloader.tree, this.tree_params);\r\n\t\tthis.constructBG(this.preloader.grounds_mc, this.preloader.ground, this.ground_params);\r\n\r\n\t\tthis.constructBoby();\r\n\t\tthis.constructBlows();\r\n\r\n\t\tthis.preloader.back_mc.addChild(helper.gradient('#def7fa', '#d1f0f2'));\r\n\r\n\t\tthis.error_win.win.butt_mc.on('pointertap', () => {\r\n\t\t\tsounds.playClick();\r\n\t\t\twindow.error_f();\r\n\t\t\tthis.closeError();\r\n\t\t});\r\n\r\n\t\tsetTextStyle(this.error_win.win.butt_mc.tf_txt, { dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#843606\", strokeThickness: 5 });\r\n\t}\r\n\r\n\r\n\tconstructBlows(){\r\n\t\t//начальный y\r\n\t\tlet startY = -34*scale_coef;\r\n\r\n\t\t//конечный y\r\n\t\tlet endY = my_height/2 - 125*scale_coef;//определяет конечный Y облаков\r\n\r\n\t\tlet blow_lines = Math.ceil((Math.abs(startY)+Math.abs(endY))/(110*scale_coef));//определяет количество основных линий. допов будет на 1 меньше (маленьких)\r\n\r\n\t\t//тут должен начаться цикл с генерацией линий\r\n\r\n\t\tlet cnt_blows = Math.ceil(my_width / this.blow_width_coef)+1;//на каждой линии одинаковое количество облаков. за счет разности скоростей и стартового разброса по Х будут выглядеть хорошо\r\n\r\n\r\n\t\tfor(let n = 0; n < blow_lines; n++){\r\n\t\t\t//у каждой линии есть свой мини-дублёр, но последняя не добавляется в работу\r\n\t\t\tlet my_line = new PIXI.Container();\r\n\t\t\tlet my_line_small = new PIXI.Container();\r\n\r\n\t\t\tlet start_x = Math.random() * (-1 * this.blow_width_coef);\r\n\t\t\tlet start_x_small = Math.random() * (-1 * this.blow_width_coef);\r\n\r\n\t\t\tlet speed = 13+Math.random()*12;//задаем небольшой разброс по скорости для ЛИНИИ\r\n\r\n\t\t\tfor (let i = 0; i < cnt_blows; i++) {\r\n\t\t\t\tlet scale_blow = scale_coef * (Math.random() * 0.15 + 0.85);//в линии облака могут быть разных размеров, коэф храним для дублера который сделает бесшовную анимацию\r\n\t\t\t\t\r\n\t\t\t\t//у каждого облака в линии есть дублёр для бесшовной анимации\r\n\t\t\t\tlet blow = helper.duplicate(this.preloader.blow_mc);\r\n\t\t\t\tlet blow_copy = helper.duplicate(this.preloader.blow_mc);\r\n\r\n\t\t\t\tblow_copy.scale.x = blow_copy.scale.y = scale_blow;//дублер находится за сценой, поэтому ему анимация не нужна\r\n\r\n\t\t\t\tblow.scale.x = blow.scale.y = 0;\r\n\r\n\t\t\t\tthis.blows.big.push(blow);//ЭТО ОСНОВНАЯ ЛИНИЯ. Кидаем в массив для АНИМАЦИИ\r\n\r\n\t\t\t\tblow.end_scale = scale_blow;//запоминаем до каких размеров нужно РАЗДУТЬ облако\r\n\r\n\r\n\t\t\t\tblow.y = blow_copy.y = startY + Math.random() * 20 + n * (110 * scale_coef);\r\n\t\t\t\tblow.x = start_x + i * this.blow_width_coef;\r\n\t\t\t\tblow_copy.x = start_x + i * this.blow_width_coef - (cnt_blows * this.blow_width_coef);//копию кидаем за кадр\r\n\r\n\t\t\t\tmy_line.addChild(blow);\r\n\t\t\t\tmy_line.addChild(blow_copy);\r\n\r\n\t\t\t\tif (n < blow_lines-1){//начинаем работать с дополнительной линией\r\n\t\t\t\t\t//Тут повторяются те же этапы, кроме координаты по Y\r\n\r\n\t\t\t\t\tlet scale_blow_small = scale_coef * (Math.random() * 0.1 + 0.6);\r\n\t\t\t\t\tlet blow_small = helper.duplicate(this.preloader.blow_mc);\r\n\t\t\t\t\tlet blow_small_copy = helper.duplicate(this.preloader.blow_mc);\r\n\r\n\t\t\t\t\tblow_small_copy.scale.x = blow_small_copy.scale.y = scale_blow_small;\r\n\r\n\t\t\t\t\tthis.blows.small.push(blow_small);\r\n\t\t\t\t\tblow_small.end_scale = scale_blow_small;\r\n\r\n\t\t\t\t\tblow_small.scale.x = blow_small.scale.y = 0;\r\n\r\n\t\t\t\t\tblow_small.y = blow_small_copy.y = startY + 55 + Math.random() * 20 + n  * (110 * scale_coef);//Доп линия смещена примерно на половину ширины линии (110px/2)\r\n\t\t\t\t\tblow_small.x = start_x_small + i * this.blow_width_coef;\r\n\t\t\t\t\tblow_small_copy.x = start_x_small + i * this.blow_width_coef - (cnt_blows * this.blow_width_coef);\r\n\r\n\t\t\t\t\tmy_line_small.addChild(blow_small);\r\n\t\t\t\t\tmy_line_small.addChild(blow_small_copy);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t//Тут происходит анимация движения облаков. со своими скоростями\r\n\t\t\t//ЭТИ ФУНКЦИИ В ЦИКЛЕ построения линий. Держим это в голове\r\n\r\n\t\t\tlet f1 = () => gsap.to(my_line, { ease: \"none\", x: cnt_blows * this.blow_width_coef, duration: (cnt_blows * this.blow_width_coef) / speed, onComplete: f2 })\r\n\t\t\tlet f3 = () => gsap.to(my_line_small, { ease: \"none\", x: cnt_blows * this.blow_width_coef, duration: (cnt_blows * this.blow_width_coef) / (speed / 2), onComplete: f4 });\r\n\r\n\t\t\tlet f2 = () => {\r\n\t\t\t\tif (!my_line.parent) return;\r\n\t\t\t\tmy_line.x = 0;\r\n\t\t\t\tf1();\r\n\t\t\t}\r\n\r\n\t\t\tlet f4 = () => {\r\n\t\t\t\tif (!my_line_small.parent) return;\r\n\t\t\t\tmy_line_small.x = 0;\r\n\t\t\t\tf3();\r\n\t\t\t}\r\n\r\n\t\t\tf1();\r\n\t\t\tf3();\r\n\r\n\t\t\tthis.preloader.up_blows.addChild(my_line);\r\n\t\t\tif (n < blow_lines - 1) this.preloader.down_blows.addChild(my_line_small);//доп линию на сцену кидаем ТОЛЬКО когда нужно\r\n\t\t}\r\n\r\n\t\tthis.showBlows();\r\n\t\t\r\n\t}\r\n\r\n\tshowBlows(){\r\n\t\tlet big = 1;\r\n\t\tlet end_s = 0;\r\n\r\n\t\tlet f1 = (type = 'big') => {//для показа БОЛЬШОГО облака из ОСНОВНОЙ линии\r\n\t\t\tlet num = Math.floor(this.blows[type].length*Math.random());//стартовый рандом\r\n\r\n\t\t\twhile (this.blows[type][num].chk) num = Math.floor(this.blows[type].length * Math.random());//для приятной динамики выбираем рандомное облако\r\n\r\n\t\t\tthis.blows[type][num].chk = 1;//метим как использованное\r\n\r\n\t\t\tgsap.to(this.blows[type][num].scale, { duration: 0.15, ease: \"back.out(1.7)\", x: this.blows[type][num].end_scale, y: this.blows[type][num].end_scale, onComplete: f2 })\r\n\t\t}\r\n\r\n\t\tlet f2 = ()=>{\r\n\t\t\tlet num_b = 0;\r\n\t\t\tlet num_s = 0;\r\n\t\t\t//считаем уже показанные облака\r\n\t\t\tfor (let i = 0; i < this.blows.big.length; i++)if (this.blows.big[i].chk) num_b++;\r\n\t\t\tfor (let i = 0; i < this.blows.small.length; i++)if (this.blows.small[i].chk) num_s++;\r\n\r\n\t\t\tif (num_s >= this.blows.small.length)end_s = 1;//если допы кончились (их всегда меньше), делаем пометку\r\n\r\n\t\t\tif (big == 1 && num_s < this.blows.small.length){//если прошлая анимация была основной\r\n\t\t\t\tbig = 0;\r\n\t\t\t\tf1('small');\r\n\t\t\t} else if ((big == 0 || end_s) && num_b < this.blows.big.length) {//если прошлая анимация была побочкой\r\n\t\t\t\tbig = 1;\r\n\t\t\t\tf1('big');\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t}\r\n\r\n\r\n\t\tf1();\r\n\t}\r\n\r\n\tprogressEvent(data){\r\n\r\n\t}\r\n\r\n\tconstructBG(mov, child, params){\r\n\t\tlet counter = my_width/(child['width']*scale_coef);\r\n    \tlet ii = 1;\r\n\r\n    \twhile(ii < counter)if(counter > ii)ii += 2;//одна деталь центральная ВСЕГДА, цикл для подсчета ПАРНЫХ боковушек\r\n\r\n    \tfor(let i = 0; i < ii; i++){\r\n\t\t\tlet copy = helper.duplicate(child);\r\n    \t\tlet coef = -1*Math.floor(ii/2)+i;//определяет право/лево\r\n\r\n    \t\tcopy.scale.x = copy.scale.y = scale_coef;\r\n\r\n\t\t\t//сугубо для самоуспокоения, но PIXI сам все сделает если нужно\r\n    \t\tcopy.width = Math.ceil(copy.width);\r\n    \t\tcopy.height = Math.ceil(copy.height);\r\n\r\n    \t\tcopy.y = Math.ceil(my_height-params['Hm']*scale_coef);\r\n    \t\tcopy.x = Math.floor(Math.floor(Math.floor(my_width/2)-params['Wm']*scale_coef) + ((copy['width']-2)*coef));\r\n\r\n    \t\tmov.addChild(copy);\r\n    \t}\r\n\t}\r\n\r\n\tconstructBoby(){\r\n\t\t//ВЫСТАВЛЯЕМ бобы и корни на свои места\r\n\t\tthis.preloader.grounds_masker.alpha = 0;\r\n\r\n\t\tthis.preloader.boby_mc.scale.x = this.preloader.boby_mc.scale.y = scale_coef;\r\n\t\tthis.preloader.korni_mc.scale.x = this.preloader.korni_mc.scale.y = scale_coef;\r\n\t\tthis.preloader.grounds_masker.scale.x = this.preloader.grounds_masker.scale.y = scale_coef;\r\n\r\n\t\tthis.preloader.grounds_masker.y = Math.ceil(my_height-this.gmask_params['Hm']*scale_coef);\r\n\t\tthis.preloader.grounds_masker.x = Math.ceil(Math.floor(my_width/2)-this.gmask_params['Wm']*scale_coef);\r\n\r\n\t\tthis.preloader.boby_mc.y = Math.ceil(my_height-this.boby_params['Hm']*scale_coef);\r\n\t\tthis.preloader.boby_mc.x = Math.ceil(Math.floor(my_width/2)-this.boby_params['Wm']*scale_coef);\r\n\r\n\t\tthis.preloader.korni_mc.y = Math.ceil(my_height-this.korni_params['Hm']*scale_coef);\r\n\t\tthis.preloader.korni_mc.x = Math.ceil(Math.floor(my_width/2)-this.korni_params['Wm']*scale_coef);\r\n\r\n\t\tthis.preloader.boby_mc.b1.scale.x = this.preloader.boby_mc.b1.scale.y = this.preloader.boby_mc.b2.scale.x = this.preloader.boby_mc.b2.scale.y = this.preloader.boby_mc.b3.scale.x = this.preloader.boby_mc.b3.scale.y = 0;\r\n\r\n\t\tthis.preloader.korni_mc.visible = false;\r\n\r\n\r\n\t\t//Анимация\r\n\t\tgsap.to(this.preloader.boby_mc.b1.scale, {duration:0.5, x:1, y:1, ease:'back.out(2)', onComplete:()=>{\r\n\t\t\tgsap.to(this.preloader.boby_mc.b3.scale, {duration:0.3, x:1, y:1, ease:'back.out(2)', onComplete:()=>{\r\n\t\t\t\tgsap.to(this.preloader.boby_mc.b2.scale, {duration:0.3, x:1, y:1, ease:'back.out(2)', onComplete:()=>{\r\n\t\t\t\t\tthis.preloader.korni_mc.visible = true;\r\n\r\n\t\t\t\t\thelper.alphaAnimation(this.preloader.grounds_masker, 1, 500);\r\n\r\n\t\t\t\t\t//для уменьшения количества однотипного текста\r\n\t\t\t\t\tfor (let i = 1; i <= 4; i++){\r\n\t\t\t\t\t\tthis.preloader.korni_mc['k' + i].play();\r\n\t\t\t\t\t\tthis.constructLoza(this.preloader['stebel' + i + '_mc'], [this.preloader['st' + i + '_0'], this.preloader['st' + i + '_1'], this.preloader['st' + i + '_2']], this['stebel' + i + '_params'], i - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}})\r\n\t\t\t}})\r\n\t\t}})\r\n\r\n\t\tif(!debug_mode)return;\r\n\r\n\t\t//Для маленьких отладочных текстов\r\n\t\tthis.text = new PIXI.Text();\r\n\t\tthis.preloader.addChild(this.text);\r\n\r\n\t\tthis.text.y = 100;\r\n\r\n\t\tthis.text.text = 'DPR: ' + window.devicePixelRatio;\r\n\r\n\t}\r\n\r\n\tconstructLoza(mov, cuts, params, num, first = true, anim = true, height_coef = 1){\r\n\t\tlet counter = [0, 0, 0];\r\n\t\tlet height = 0;\r\n\t\tlet this_height = 0;\r\n\t\tlet end_height = my_height * height_coef;\r\n\r\n\t\tlet magic_points = [];\r\n\r\n\t\tthis.cuts_loza[num] = [];\r\n\r\n\t\t/*\r\n\t\t\tСЧИТАЕМ ОБЩУЮ ВЫСОТУ И КОЛИЧЕСТВО КУСОЧКОВ КАЖДОГО ТИПА\r\n\r\n\t\t\theight работает как промежуточное значение для цикла\r\n\t\t*/\r\n\r\n\t\t//Используется на загрузочном экране и на первых 10 уровнях игры\r\n\t\tif (first){\r\n\t\t\tcounter[0] = 1;//считаем сколько стартовых частей, обычно не более 1\r\n\t\t\theight += params['w1']*scale_coef;//считаем общую высоту\r\n\t\t}\r\n\r\n\r\n\t\twhile(height + params['w2']*scale_coef < end_height || (height < end_height && height+params['w3']*scale_coef < end_height)){//пока не заполним весь экран по высоте или не останется прикинуть только кончик\r\n\t\t\theight += params['w2']*scale_coef;//добавляем серединку\r\n\t\t\tcounter[1]++;//считаем серединки, может быть много\r\n\t\t}\r\n\r\n\t\tif (height - end_height < 0) counter[2] = 1;\r\n\r\n\r\n\t\t/*\r\n\t\t\tРАБОТА НЕПОСРЕДСТВЕННО СО СТЕБЛЕМ\r\n\t\t*/\r\n\r\n\t\twhile (mov.children.length) mov.removeChildAt(0);//чистим сцену от мусора\r\n\r\n\t\tmov.x = Math.ceil(Math.floor(my_width/2)-params['Wm']*scale_coef);\r\n\t\tmov.y = Math.ceil(end_height / height_coef-params['Hm']*scale_coef);\r\n\r\n\t\t//this_height используется для правильного позиционирования кусочков лозы\r\n\r\n\t\tfor(let i = 0; i < counter.length; i++){//обычно не более 3, т.к. 3 кусочка существует\r\n\t\t\tfor(let ii = 0; ii < counter[i]; ii++){\r\n\t\t\t\tlet copy = helper.duplicate(cuts[i]);//делаем копию кусочка\r\n\r\n\t\t\t\tmagic_points = magic_points.concat(params['points'][i]);//добавляем точки привязки магии в массив\r\n\r\n\t\t\t\tcopy.scale.x = copy.scale.y = scale_coef;\r\n\t\t\t\tcopy.y = this_height;//добавляем в самый верх\r\n\r\n\t\t\t\tcopy.width = Math.ceil(copy.width);\r\n    \t\t\tcopy.height = Math.ceil(copy.height);\r\n\r\n\t\t\t\tscale_coef !== 1?this_height -= Math.floor(copy.height-2):this_height -= Math.floor(copy.height);//чтобы швы не было видно на странных коэфах масштабирования\r\n\t\t\t\tmov.addChild(copy);\r\n\r\n\t\t\t\t//Добавляем в массив для показа анимации стручков и листьев\r\n\t\t\t\tif(!this.cuts_loza[num])this.cuts_loza[num] = [];\r\n\t\t\t\tthis.cuts_loza[num].push(copy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (num == 0) window.loza_points = JSON.parse(JSON.stringify(magic_points));//для лозы #1 пробрасываем точки привязки магии для привязки иконок уровней\r\n\t\t\r\n    \theight = -1*this_height;//получаем КОНЕЧНУЮ высоту, хотя по факту уже можно брать mov.height\r\n\r\n\t\t//код дальше ТОЛЬКО если нужна анимация с МАГИЕЙ, но это можно скипнуть\r\n\t\tif (!anim) return this.showLozaDecor(num);\r\n\r\n\t\tlet magic = helper.duplicate(this.preloader.blicks_mc);\r\n\r\n\t\tmagic.scale.x = magic.scale.y = scale_coef;\r\n\t\tmagic.x = mov.x - 20 * scale_coef;\r\n\t\tmagic.y = mov.y;\r\n\t\tmagic.alpha = 0;\r\n\r\n\t\tparams.magic.addChild(magic);\r\n\r\n\t\tlet masker = new PIXI.Graphics();\r\n\r\n    \tmasker.beginFill(0);\r\n    \tmasker.drawRect(Math.floor(my_width/2)-(params['Wh']*scale_coef)/2, magic.y, params['Wh']*2, -1*this_height);\r\n    \tmasker.endFill();\r\n\r\n\t\tmov.mask = masker;\r\n\r\n    \tthis.preloader.addChild(masker);\r\n\r\n\t\t//маска и магия движутся в одну точку, если грубо говоря. и с одной скоростью. ЭТО ВАЖНО, чтобы не было рассинхрона\r\n\r\n\t\tgsap.to(masker, { ease: \"none\", duration:(-1*this_height)/scale_speed[0], y:this_height});\r\n    \tgsap.to(magic, { ease: \"none\", duration:(-1*this_height)/scale_speed[0], y:magic.y + this_height, onComplete:()=>{\r\n\t\t\t\r\n    \t\thelper.alphaAnimation(magic, 0, 100, ()=>params.magic.removeChild(magic));//важно убрать магию со сцены, она жрет ресурсы!\r\n\r\n\t\t\t//Показваем декоративные росточки\r\n    \t\tthis.showLozaDecor(num);\r\n\r\n\t\t\t//ВАЖНО убрать маски, они роль сыграли и больше не нужны, а ресурсы жрут\r\n\t\t\tmov.mask = null;\r\n\t\t\tthis.preloader.removeChild(masker);\r\n\r\n\t\t\tif (!this.lgb) this.constructLogo();\r\n\r\n    \t}});\r\n\r\n\t\t//магия на все лозы должна появиться плавно для красоты\r\n\r\n    \thelper.alphaAnimation(magic, 1, 500);\r\n\r\n\t\t//КОСТЫЛЬ. Тут напраляем магию по точкам \"привязки\"\r\n    \tlet _int = setInterval(()=>{\r\n    \t\tif(masker.y == this_height)clearInterval(_int);\r\n    \t\tlet index = Math.max(0, Math.floor(-1*masker.y/scale_coef));\r\n\r\n    \t\tif(index >= magic_points.length)index = magic_points.length-1;\r\n\r\n    \t\tmagic.x = mov.x + Math.floor(magic_points[index]*scale_coef);\r\n\r\n    \t},1);\r\n\t}\r\n\r\n\tshowLozaDecor(num, fast = false){\r\n\r\n\t\tfor (let i = 0; i < this.cuts_loza[num].length; i++) {\r\n\t\t\tfor (let ii = 1; ii <= 4; ii++)if (this.cuts_loza[num][i]['anim' + ii]) {\r\n\t\t\t\t/*let fastloza = ()=>{\r\n\t\t\t\t\tthis.cuts_loza[num][i]['anim' + ii].mc.gotoAndStop(this.cuts_loza[num][i]['anim' + ii].mc._totalFrames - 1);\r\n\r\n\t\t\t\t\tif (this.cuts_loza[num][i]['anim' + ii].mc.plod1) this.cuts_loza[num][i]['anim' + ii].mc.plod1.gotoAndStop(this.cuts_loza[num][i]['anim' + ii].mc.plod1._totalFrames-1);\r\n\t\t\t\t\tif (this.cuts_loza[num][i]['anim' + ii].mc.plod2) this.cuts_loza[num][i]['anim' + ii].mc.plod2.gotoAndStop(this.cuts_loza[num][i]['anim' + ii].mc.plod2._totalFrames-1);\r\n\t\t\t\t}*/\r\n\r\n\t\t\t\t//!fast ? this.cuts_loza[num][i]['anim' + ii].mc.gotoAndPlay(1) : fastloza();\r\n\r\n\t\t\t\tthis.cuts_loza[num][i]['anim' + ii].mc.gotoAndPlay(1)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconstructLogo(){\r\n\t\tthis.lgb = true;\r\n\r\n\t\tfor(let i = 0; i < this.anim_logo_params.length; i++){\r\n\t\t\tthis.anim_logo_params[i]['obj'].y = -300;\r\n\t\t\tthis.anim_logo_params[i]['obj'].x = (my_width/4)*i - my_width/2;\r\n\r\n\t\t\tlet f2 = ()=>{gsap.to(this.anim_logo_params[i]['obj'], {x:this.anim_logo_params[i]['sX'], y:this.anim_logo_params[i]['sY'], duration:this.base_d+Math.random()*3, onComplete:()=>f1()})};\r\n\t\t\tlet f1 = ()=>{gsap.to(this.anim_logo_params[i]['obj'], {x:this.anim_logo_params[i]['eX'], y:this.anim_logo_params[i]['eY'], duration:this.base_d+Math.random()*3, onComplete:()=>f2()})};\r\n\r\n\t\t\tgsap.to(this.anim_logo_params[i]['obj'], {duration:1+Math.random(), x:this.anim_logo_params[i]['sX'], y:this.anim_logo_params[i]['sY'], ease: 'back.out(2)', onComplete:()=>{\r\n\t\t\t\tf1();\r\n\r\n\t\t\t\tif (!this.lgw) this.constructWordLogo();\r\n\t\t\t}})\r\n\t\t}\r\n\r\n\t\thelper.alphaAnimation(this.preloader.logo_game, 1, 500);\r\n\r\n\t}\r\n\r\n\tconstructWordLogo(){\r\n\t\tthis.lgw = true;\r\n\r\n\t\thelper.alphaAnimation(this.preloader.logo_game.logo_ww, 1, 100, ()=>{\r\n\t\t\tfor(let i = 0; i < this.anim_logo_slov.length; i++)gsap.to(this.anim_logo_slov[i], {duration:0.5, x:72*i, onComplete: ()=>{\r\n\t\t\t\twindow.show_logo = true;\r\n\t\t\t\tif (window.end_load && window.data_load) endLoadGame();\r\n\t\t\t}});\r\n\t\t});\r\n\t}\r\n\r\n\t//SERVER LOADING\r\n\r\n\tgetToken(){\r\n\t\tTS.php('security.getToken', { access_token: vk_params['access_token'] }, (e) => this.onGetToken(e), this.onError);\r\n\r\n\t\t\r\n\t}\r\n\r\n\tonGetToken(data){\r\n\t\tif (data['token']) TS.token = data['token'];\r\n\r\n\t\tTS.php(\"users.get\", { uid: vk_params['user_id'], hash: vk_params['hash'], ads: vk_params[\"referrer\"].split('ad_')[1] }, (e) => this.onGetUserInfo(e), this.onError);\r\n\t}\r\n\r\n\r\n\tonGetUserInfo(data){\r\n\t\thelper.getJSON(my_server + '/json/config_list.json', (e) => this.initJSONList(e), this.onError);\r\n\t}\r\n\r\n\tinitJSONList(input){\r\n\t\tlet json_keys = Object.keys(input);\r\n\t\tlet iter = 0;\r\n\r\n\t\tlet endLoad = (data) => {\r\n\t\t\twindow[json_keys[iter]] = data;\r\n\t\t\titer++;\r\n\t\t\titer < json_keys.length ? loadNext() : this.initJSON();\r\n\t\t}\r\n\r\n\t\tlet loadNext = () => {\r\n\t\t\thelper.getJSON(my_server + '/json/' + input[json_keys[iter]] + '.json?' + md5(Math.random().toString()), (e) => endLoad(e), this.onError);\r\n\t\t}\r\n\r\n\t\tloadNext();\t\t\r\n\t}\r\n\r\n\tinitJSON(){\r\n\t\tmain_const['_brush'] = helper.copyJSON(main_const['brush']);\r\n\t\twindow.data_load = true;\r\n\r\n\t\tloadGame();\r\n\r\n\t\tif (window.show_logo && window.data_load) endLoadGame();\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t//SERVICE FUNCTIONS\r\n\r\n\tscaller(){\r\n\t\tlet coef = 1;\r\n\t\tlet Yc = Math.min(my_height/700, 1);\r\n\t\tlet Xc = Math.min(my_width/1000, 1);\r\n\r\n\t\tcoef = Math.min(Xc, Yc);\r\n\r\n\t\tif (window.VKPlatform == 'web')window.devicePixelRatio >= 2 ? coef *= 1.6 : coef *= 1;\r\n\r\n\t\treturn coef;\r\n\t}\r\n\r\n\tonError(data){\r\n\t\tpre_control.error_win.x = 0;\r\n\t\tpre_control.error_win.y = 0;\r\n\r\n\t\tpre_control.error_win.shadow_mc.alpha = 0;\r\n\r\n\t\tpre_control.error_win.scale.x = pre_control.error_win.scale.y = scale_coef;\r\n\r\n\t\tpre_control.error_win.win.x = my_width/scale_coef / 2;\r\n\t\tpre_control.error_win.win.y = -1 * (my_height / 2);\r\n\r\n\t\tpre_control.error_win.win.tf_txt.text = data['text'];\r\n\r\n\t\thelper.drawShadow(pre_control.error_win.shadow_mc, () => gsap.to(pre_control.error_win.win, { duration: 0.5, y: my_height/scale_coef / 2, ease: 'back.out(1.7)' }))\r\n\r\n\t\tswitch (data.code) {\r\n\t\t\tcase 4:\r\n\t\t\t\t//в магаз на заряд кисти\r\n\t\t\t\tpre_control.initErrorF(0);\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 5:\r\n\t\t\t\t//в магаз на жизни\r\n\t\t\t\tpre_control.initErrorF(2);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 11:\r\n\t\t\t\t//в магаз на звезды\r\n\t\t\t\tpre_control.initErrorF(3);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 18:\r\n\t\t\t\t//в магаз на медали\r\n\t\t\t\tpre_control.initErrorF(4);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tpre_control.error_win.win.butt_mc.visible = false\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\troot.layer2_mc ? root.layer2_mc.addChild(pre_control.error_win) : pre_control.preloader.addChild(pre_control.error_win);\r\n\t}\r\n\r\n\tinitErrorF(cat = 0){\r\n\t\tpre_control.error_win.win.butt_mc.visible = true;\r\n\r\n\t\twindow.error_f = () =>{\r\n\t\t\tmodules.checkFlags(['game', 'shop'], () => shop.init(cat));\r\n\t\t}\r\n\t}\r\n\r\n\tcloseError(){\r\n\t\tgsap.to(pre_control.error_win.win, { duration: 0.2, y: my_height * 2, ease: 'back.in(1.7)', onComplete: ()=> {\r\n\t\t\thelper.alphaAnimation(pre_control.error_win.shadow_mc, 0, 100, () => this.error_win.parent.removeChild(this.error_win));\r\n\t\t}});\r\n\t}\r\n}","export default class Shop {\r\n\r\n    constructor(full_movie, slot_movie, mini_icons){\r\n        this.shop = full_movie;\r\n        this.slot = slot_movie;\r\n\r\n        this.minis = mini_icons;\r\n\r\n        this.category = 0;\r\n        this.page = 0;\r\n\r\n        this.slots = [];\r\n\r\n        this.shop.interactive = true;\r\n\r\n        this.initButtons();\r\n        this.initStyles();\r\n\r\n        for (let i = 0; i < 5; i++) this.shop.win['menu' + (i + 1) + '_btn'].on('pointertap', () => { sounds.playClick(); if (i !== this.category) this.showShop(i)})\r\n\r\n        this.shop.win.close_mc.on('pointertap', () => { sounds.playClick();this.hideShop()});\r\n\r\n        bridge.subscribe((e) => {\r\n            if (e.detail.type == \"VKWebAppShowOrderBoxResult\") {\r\n                this.successDonat(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    init(cat = 0){\r\n        if (this.shop.parent) return this.showShop(cat);\r\n\r\n        this.shop.win.x = my_width/scale_coef/2;\r\n        this.shop.win.y = my_height/scale_coef/2;\r\n        this.shop.scale.x = this.shop.scale.y = scale_coef;\r\n\r\n        if(!this.shop.btree1_mc){\r\n            this.shop.tree1_mc = helper.duplicate(modules.big_tree);\r\n            this.shop.tree2_mc = helper.duplicate(modules.big_tree);\r\n\r\n            this.shop.btree1_mc = helper.duplicate(modules.big_blur_tree);\r\n            this.shop.btree2_mc = helper.duplicate(modules.big_blur_tree);\r\n\r\n            this.shop.addChild(this.shop.tree1_mc, this.shop.tree2_mc, this.shop.btree1_mc, this.shop.btree2_mc);\r\n\r\n            this.shop.btree1_mc.y = menu.blur_trees_array[0].y;\r\n            this.shop.btree2_mc.y = menu.blur_trees_array[1].y;\r\n\r\n            //this.shop.tree1_mc.y -= 100*scale_coef;\r\n            //this.shop.tree2_mc.y -= 100*scale_coef;\r\n\r\n            this.shop.tree1_mc.scale.x = this.shop.tree1_mc.scale.y = scale_coef;\r\n            this.shop.btree1_mc.scale.x = this.shop.btree1_mc.scale.y = scale_coef;\r\n\r\n            this.shop.tree2_mc.scale.x = this.shop.tree2_mc.scale.y = scale_coef;\r\n            this.shop.btree2_mc.scale.x = this.shop.btree2_mc.scale.y = scale_coef;\r\n\r\n            this.shop.tree1_mc.x = -1 * this.shop.tree1_mc.width / 5 - (my_width/scale_coef < 1400? 50 * scale_coef:0);\r\n            this.shop.btree1_mc.x = -1 * this.shop.btree1_mc.width / 2;\r\n\r\n            this.shop.tree2_mc.x = my_width/scale_coef - this.shop.tree2_mc.width / 3 * 2 +( my_width/scale_coef < 1400 ? 50*scale_coef:0);\r\n            this.shop.btree2_mc.x = my_width/scale_coef - this.shop.btree2_mc.width / 2;\r\n        }\r\n\r\n        helper.numberAnimation(this.shop.win.medals_txt, udata['medals'])\r\n\r\n        helper.drawShadow(this.shop.shadow_mc, null, false);\r\n        window.complete_tree = true;\r\n\r\n        menu.showBigTrees(() => {\r\n            this.showShop(cat);\r\n        })\r\n    }\r\n\r\n    nextPage(){\r\n\r\n    }\r\n\r\n    prevPage(){\r\n\r\n    }\r\n\r\n    showShop(cat){\r\n        this.category = cat;\r\n\r\n        for (let i = 0; i < 5; i++) gsap.to(this.shop.win['menu' + (i + 1) + '_btn'], { duration: 0.2, y: -230 + (i == cat ? 5 : 0)});\r\n\r\n        this.constructCat();\r\n\r\n        if (!this.shop.parent)root.layer1_mc.addChild(this.shop);\r\n    }\r\n\r\n    filterCat(data){\r\n        data = helper.copyJSON(data);\r\n\r\n        for(let i = 0; i < data.length; i++){\r\n            let item_id = data[i];\r\n            let key = shop_info['items'][item_id].key;\r\n\r\n            udata['ads_limits'][key] = udata['ads_limits'][key] || 0;\r\n\r\n            if (udata['ads_limits'][key] >= main_const['ads_limits'][key] && shop_info['items'][item_id].price_type == 'ads')data.splice(i, 1);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    constructCat(){\r\n        while (this.shop.win.slots_mc.children.length) this.shop.win.slots_mc.removeChildAt(0);\r\n        this.slots = [];\r\n\r\n        shop_info['categories'][this.category] = shop_info['categories'][this.category] || [];\r\n\r\n        let full_cat = this.filterCat(shop_info['categories'][this.category]);\r\n\r\n        for (let i = this.page * 8; i < full_cat.length && i - this.page * 8 < 8; i++){\r\n            let line = Math.floor((i - this.page * 8)/4);\r\n\r\n            let copy = helper.duplicate(this.slot);\r\n            this.slots.push(copy);\r\n\r\n            let item_id = full_cat[i];\r\n\r\n            copy.x = (i - this.page * 8) * 147 - (line * 4 * 147);\r\n            copy.y = line*214;\r\n\r\n            //copy.name_txt.text = shop_info['items'][item_id].name;\r\n            copy.price_mc.value_txt.text = shop_info['items'][item_id].price;\r\n\r\n            copy.price_mc.icons_mc.gotoAndStop(shop_info['items'][item_id].price_type);\r\n\r\n            copy.icons_mc.gotoAndStop(item_id);\r\n            \r\n            copy.buy_btn.gotoAndStop(1);\r\n\r\n            this.constructBuyButton(copy.buy_btn, item_id);\r\n\r\n            setTextStyle(copy.price_mc.value_txt, { dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#443f3d\", strokeThickness: 3 });\r\n\r\n            switch (shop_info['items'][item_id].price_type) {\r\n                case 'ads':\r\n                    copy.price_mc.value_txt.visible = false;\r\n                    break;\r\n                case 'votes':\r\n                    setTextStyle(copy.price_mc.value_txt, { fill: \"#bfdde0\"});\r\n\r\n                    break;\r\n            }\r\n\r\n            if(shop_info['items'][item_id].timer){\r\n                copy.timer_mc.alpha = 1;\r\n                \r\n                copy.timer_mc.tf_txt.text = 'на ' + Math.floor(shop_info['items'][item_id].timer/60) + ' мин'\r\n            }\r\n\r\n            copy.buy_btn.interactive = copy.buy_btn.buttonMode = true;\r\n\r\n            copy.buy_btn.on('mouseover', (e)=>this.overBuy(e));\r\n            copy.buy_btn.on('mouseout', (e)=>this.outBuy(e));\r\n            \r\n\r\n            //setTextStyle(copy.name_txt, { dropShadow: true, dropShadowAngle: 90, dropShadowDistance: 3, dropShadowColor: \"#8f490d\" });\r\n\r\n            copy.scale.x = copy.scale.y = 0;\r\n\r\n            gsap.to(copy.scale, {duration: 0.15*((i - this.page * 8)+1), x:1, y:1, ease: 'back.out(1.7)'})\r\n\r\n            this.shop.win.slots_mc.addChild(copy);\r\n        }\r\n    }\r\n\r\n    constructBuyButton(butt, item_id){\r\n        switch (shop_info['items'][item_id].price_type) {\r\n            case 'ads':\r\n                butt.gotoAndStop(3);\r\n\r\n                butt.on('pointertap', (e) => {\r\n                    sounds.playClick();\r\n                    bridge.send(\"VKWebAppCheckNativeAds\", {ad_format: \"reward\", use_waterfall: true}).then(e=>{\r\n                        console.log(e);\r\n\r\n                        //if(!e.result)return;\r\n\r\n                        this.add_item = item_id;\r\n                        this.add_iof = this.slots.indexOf(butt.parent);\r\n\r\n                        TS.php('shop.newAd', { item_id: item_id }, (data) => this.successInitAd(data), pre_control.onError);\r\n                    });\r\n                });\r\n\r\n                break;\r\n\r\n            case 'votes':\r\n                butt.on('pointertap', (e) => {\r\n                    sounds.playClick();\r\n                    bridge.send(\"VKWebAppShowOrderBox\", { type: 'item', item: 'item' + item_id });\r\n\r\n                    this.vote_item = item_id;\r\n                    this.vote_iof = this.slots.indexOf(butt.parent);\r\n                })\r\n            break;\r\n        \r\n            default:\r\n                butt.on('pointertap', (e) => {\r\n                    sounds.playClick();\r\n                    TS.php('shop.buy', { item_id: item_id }, (data) => this.onSuccessBuy(this.slots.indexOf(butt.parent), item_id), pre_control.onError);\r\n                })\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    successInitAd(data){\r\n        this.add_id = data['ad_id']['id'];\r\n\r\n        bridge.send(\"VKWebAppShowNativeAds\", { ad_format: \"reward\", use_waterfall: true })\r\n            .then(data => {\r\n                console.log(data);\r\n                if (!data.result)return;\r\n\r\n                //тут нужно выполнить вопрос к серверу и дать окончательный ответ по рекламке\r\n\r\n                TS.php('shop.endAd', { ad_id: this.add_id }, (data) => this.successEndAd(data), pre_control.onError);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    successEndAd(data){\r\n        this.onSuccessBuy(this.add_iof, this.add_item);\r\n    }\r\n\r\n    successDonat(e) {\r\n        udata[shop_info['items'][this.vote_item]['key']] = parseInt(udata[shop_info['items'][this.vote_item]['key']]) + parseInt(shop_info['items'][this.vote_item]['value']);\r\n\r\n        this.onSuccessBuy(this.vote_iof, this.vote_item);\r\n    }\r\n\r\n    onSuccessBuy(iof, item_id){\r\n        if(iof < 0)return;\r\n\r\n        sounds.playBuy();\r\n\r\n        let my_item = shop_info['items'][item_id];\r\n        let XY = { x: this.slots[iof].worldTransform.tx, y: this.slots[iof].worldTransform.ty};\r\n\r\n        switch (my_item['key']) {\r\n            case 'energy':\r\n                helper.iconGenerator(this.minis.energy_mini, my_item['value'], XY, 'energy')\r\n                break;\r\n\r\n            case 'lifes':\r\n                helper.iconGenerator(this.minis.lifes_mini, my_item['value'], XY, 'life')\r\n                break;\r\n            \r\n            case 'energytimer':\r\n                helper.iconGenerator(this.minis.otkat_mini, my_item['value'], XY)\r\n                break;\r\n\r\n            case 'exp':\r\n                helper.iconGenerator(this.minis.exp_mini, my_item['value'], XY, 'star')\r\n                break;\r\n\r\n            case 'medals':\r\n                helper.iconGenerator(this.minis.medals_mini, my_item['value'], XY, 'medal')\r\n                break;\r\n\r\n            case 'lifes_unlim':\r\n                helper.iconGenerator(this.minis.lifes_mini, my_item['value'], XY, 'life')\r\n                break;\r\n        }\r\n\r\n        menu.showValuta();\r\n        helper.numberAnimation(this.shop.win.medals_txt, udata['medals']);\r\n\r\n        if(game){\r\n            game.showEnergy(udata['energy']);\r\n            game.updateLifes();\r\n        }\r\n    }\r\n\r\n    overBuy(e){\r\n        let target = e.currentTarget;\r\n        \r\n        switch (target.currentFrame) {\r\n            case 1:\r\n                target.gotoAndStop(2);\r\n                break;\r\n            case 3:\r\n                target.gotoAndStop(4);\r\n                break;\r\n        }\r\n    }\r\n    outBuy(e){\r\n        let target = e.currentTarget;\r\n\r\n        switch (target.currentFrame) {\r\n            case 2:\r\n                target.gotoAndStop(1);\r\n                break;\r\n            case 4:\r\n                target.gotoAndStop(3);\r\n                break;\r\n        }\r\n    }\r\n\r\n    hideShop(){\r\n        //тут надо проверить что на заднем фоне. ну так, чисто на всякий\r\n\r\n        window.complete_tree = true;\r\n\r\n        menu.showBigTrees(() => root.layer1_mc.removeChild(this.shop));\r\n    }\r\n\r\n    initButtons(){\r\n        setButton(this.shop.win.close_mc);\r\n        setButton(this.shop.win.prev_btn);\r\n        setButton(this.shop.win.next_btn);\r\n        setButton(this.shop.win.menu1_btn);\r\n        setButton(this.shop.win.menu2_btn);\r\n        setButton(this.shop.win.menu3_btn);\r\n        setButton(this.shop.win.menu4_btn);\r\n        setButton(this.shop.win.menu5_btn);\r\n    }\r\n\r\n    initStyles(){\r\n        setTextStyle(this.shop.win.medals_txt, { dropShadow: true, dropShadowAlpha: 0.12, dropShadowAngle: 90, dropShadowDistance: 3, miterLimit: 3, stroke: \"#443f3d\", strokeThickness: 5 });\r\n    }\r\n\r\n}","export default class Sounds {\r\n    constructor(){\r\n\r\n    }\r\n\r\n    playBackMusic(){\r\n        if (!window.bg_music) {\r\n            window.bg_music = PIXI.sound.Sound.from({\r\n                url: sound_cfg['main_theme']['url'],\r\n                volume: localStore['music'] ? 0.2 : 0,\r\n                loop: true,\r\n                autoPlay: true\r\n            })\r\n        }\r\n    }\r\n\r\n    playLozeChar(){\r\n        if (localStore['sound']) this.playCustom(sound_cfg['loze_char']);\r\n    }\r\n\r\n    playTrueChar() {\r\n        if (localStore['sound']) this.playCustom(sound_cfg['right_char']);\r\n    }\r\n\r\n    playComplete() {\r\n        if (localStore['sound']) this.playCustom(sound_cfg['complete']);\r\n    }\r\n\r\n    playBuy() {\r\n        if (localStore['sound']) this.playCustom(sound_cfg['buy']);\r\n    }\r\n\r\n    playClick(){\r\n        if (localStore['sound']) this.playCustom(sound_cfg['default_click']);\r\n    }\r\n\r\n    playCustom(config){\r\n        PIXI.sound.Sound.from({\r\n            url: config['url'],\r\n            volume: config['volume'],\r\n            loop: false,\r\n            autoPlay: true\r\n        })\r\n    }\r\n}","import Menu from \"../game/menu\";\r\nimport Game from \"../game/game\";\r\nimport Shop from \"../game/shop\";\r\nimport Learn from \"../game/learn\";\r\n\r\nexport default class ModuleControl{\r\n\r\n    constructor(){\r\n    \tthis.flags = {};\r\n\r\n    \tthis.names = {};\r\n\r\n    }\r\n\r\n    //LOADING FUNCTIONS\r\n\r\n    load(name, callback){\r\n\t\twindow[content_links[name]].setup(PIXI.animate);\r\n\t\tscene.load(window[content_links[name]], e => {\r\n\t\t\tthis.flags[name] = true;\r\n\t\t\tthis.names[name] = e;\r\n\r\n\t\t\tthis.nulledXY(e);\r\n\r\n\t\t\tif (callback) callback();\r\n\t\t});\r\n    }\r\n\r\n   \r\n\r\n    loadMenu(callback){\r\n        this.load('menu', callback);\r\n    }\r\n\tloadGame(callback) {\r\n\t\tthis.load('game', callback);\r\n\t}\r\n\tloadShop(callback){ \r\n\t\tthis.load('shop', callback);\r\n\t}\r\n    \r\n\r\n    //CONSTRUCT FUNCTIONS\r\n\r\n    constructMenu(){\r\n\t\twindow.menu = new Menu(this.names['menu'].main_level_icon, \r\n\t\t\t\t\t\t\tthis.names['menu'].main_exp, \r\n\t\t\t\t\t\t\tthis.names['menu'].main_medals, \r\n\t\t\t\t\t\t\tthis.names['menu'].main_shop_icon, \r\n\t\t\t\t\t\t\tthis.names['menu'].main_friends, \r\n\t\t\t\t\t\t\tthis.names['menu'].main_friends_icon,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tbird_blue: this.names['menu'].main_bbird,\r\n\t\t\t\t\t\t\t\tbird_red: this.names['menu'].main_rbird,\r\n\t\t\t\t\t\t\t\tairplane: this.names['menu'].main_airplane,\r\n\t\t\t\t\t\t\t\trocket: this.names['menu'].main_rocket,\r\n\t\t\t\t\t\t\t\tufo: this.names['menu'].main_ufo\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tthis.names['menu'].main_settings,\r\n\t\t\t\t\t\t\tthis.names['menu'].main_settings_icon);\r\n\t\t\r\n\t\twindow.learn = new Learn(this.names['menu'].learn_hand);\r\n\t}\r\n\r\n\tconstructGame(){\r\n\t\twindow.game = new Game(this.names['game'].game_full,\r\n\t\t\t\t\t\t\tthis.names['game'].game_lines,\r\n\t\t\t\t\t\t\tthis.names['game'].game_body_sky,\r\n\t\t\t\t\t\t\tthis.names['game'].game_yellow_char,\r\n\t\t\t\t\t\t\tthis.names['game'].game_char_red,\r\n\t\t\t\t\t\t\tthis.names['game'].game_complete);\r\n\t\tthis.big_tree = helper.duplicate(this.names['game'].game_full.tree1_mc);\r\n\t\tthis.big_blur_tree = helper.duplicate(this.names['game'].game_full.btree1_mc);\r\n\t}\r\n\r\n\tconstructShop(){\r\n\t\twindow.shop = new Shop(this.names['shop'].shop_full,\r\n\t\t\tthis.names['shop'].shop_slot,\r\n\t\t\tthis.names['shop'].shop_mini);\r\n\t}\r\n\r\n    \r\n\r\n\r\n    //SERVICE FUNCTIONS\r\n\r\n    nulledXY(e){\r\n    \tlet keys = Object.keys(e);\r\n\r\n\t\twhile (e.children.length) e.removeChildAt(0);\r\n\r\n    \tfor(let i = 0; i < keys.length; i++)if(e[keys[i]] !== null && typeof e[keys[i]] == 'object')e[keys[i]].x = e[keys[i]].y = 0;\r\n    }\r\n\r\n\t\r\n\tcheckFlags(flags, callback){\r\n\t\tfor(let i = 0; i < flags.length; i++){\r\n\t\t\tif(!this.flags[flags[i]]){\r\n                if (TS.mc) TS.mc.visible = true;\r\n\t\t\t\tthis['load'+this.ucFirst(flags[i])](()=>{\r\n\t\t\t\t\tif(this['construct'+this.ucFirst(flags[i])])this['construct'+this.ucFirst(flags[i])]();\r\n                    if (TS.mc) TS.mc.visible = false;\r\n\r\n\t\t\t\t\tthis.checkFlags(flags, callback);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(callback)callback();\r\n\t}\r\n\r\n\tucFirst(str){\r\n\t  \tif (!str) return str;\r\n\r\n\t  \treturn str[0].toUpperCase() + str.slice(1);\r\n\t}\r\n}","﻿import Timers from \"../tolmasoft/timers.js\";\r\n\r\nexport default class Server {\r\n\t/**********************************/\r\n\t/********Vlad Tolmachev***********/\r\n\t/**********2021******************/\r\n\r\n\t/*Class for Tolmasoft Engine 3.2*/\r\n\t/*Use for multirequest AJAX*/\r\n\r\n\tconstructor(input_data, loading_movie) {\r\n\r\n\t\tthis.arr = input_data;\r\n\t\tthis.mc = loading_movie;\r\n\r\n\t\tthis.scriptURL = this.arr[3] + '/universal.php';//ссылка на сервер\r\n\t\tthis.req_key = 'skriYjhHx';\r\n\r\n\t\tthis.reqs = [];\r\n\t\tthis.wait = false;//чтобы случайно не закончить запрос\r\n\r\n\t\tthis.reqsJSON = [];\r\n\r\n\t\twindow.errors = [{ text: 'Undefined function', code: 0 }, { text: 'Invalid request', code: 1 }, { text: 'Output have invalid format', code: 2 }];//ошибки\r\n\r\n\t\tif(!this.mc)return;\r\n\r\n\t\tthis.drawMC();\r\n\t}\r\n\r\n\tdrawMC(){\r\n\t\tif (this.mc) return;\r\n\t\tthis.mc = new PIXI.Graphics();\r\n\r\n\t\tthis.mc.beginFill();\r\n\t\tthis.mc.drawRect(0, 0, my_width, my_height);\r\n\t\tthis.mc.endFill();\r\n\r\n\t\tthis.mc.alpha = 0.01;\r\n\r\n\t\tthis.mc.visible = false;\r\n\t\tthis.mc.interactive = true;\r\n\t\troot.layer2_mc.addChild(this.mc);\r\n\t}\r\n\r\n\tphp(method, yourParameters, onC, onE) {\r\n\t\tthis.reqs.push({ \"m\": method, \"p\": yourParameters, \"c\": onC, \"e\": onE });\r\n\t\tthis.nextReq();\r\n\r\n\t\tif (window.debug_mode) {\r\n\t\t\tconsole.log(method);\r\n\t\t\tconsole.log(yourParameters);\r\n\t\t}\r\n\t}\r\n\r\n\tnextReq() {\r\n\t\tif (this.wait || this.reqs.length <= 0) return;//тут же если что завершаем\r\n\r\n\t\tthis.thisReq = this.reqs.shift();\r\n\t\tthis.loadReq(this.thisReq['m'], this.thisReq['p']);\r\n\r\n\t\tif (!this.mc && root.layer2_mc) {\r\n\t\t\tthis.drawMC();\r\n\t\t} \r\n\t\tif (this.mc)this.mc.visible = true;\r\n\t}\r\n\r\n\tloadReq(method, yourParameters) {//запрос\r\n\r\n\t\tthis.MSS = new XMLHttpRequest();//жрем клиентскую оперативу. КОСТЫЛЬ!\r\n\r\n\t\tthis.parameters = JSON.stringify(yourParameters);//доп параметры\r\n\r\n\t\tthis.MSSURL = this.scriptURL + \"?h=\" + md5(Math.floor(Math.random() * 1000000).toString());//формируем уникальную ссылку\r\n\r\n\t\tthis.MSSparams = 'method=' + method + '&params=' + btoa(btoa(this.parameters)) + '&token=' + this.token + '&uid=' + this.arr[1] + '&user_id=' + this.arr[4];//кодируем параметры (оч тупо, надо чот придумать получше)\r\n\t\tthis.MSSparams += '&auth=' + this.arr[2];//это если надо получить первичный или повторный токен\r\n\t\tthis.MSSparams += '&req_key=' + this.req_key;//защита от мультизапроса\r\n\r\n\t\tthis.MSS.open(\"POST\", this.MSSURL, true);//открыли сокет\r\n\r\n\t\tthis.MSS.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");//ВАЖНО! без этого не будет передаваться тело запроса\r\n\r\n\t\tthis.MSS.send(this.MSSparams);//закрыли сокет\r\n\r\n\t\tthis.MSS.addEventListener(\"loadend\", () => this.completeRequest(this.MSS));\r\n\t}\r\n\r\n\tcompleteRequest(e) {\r\n\t\tif (this.MSS.readyState === 4 && this.MSS.status === 200) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.json = JSON.parse(this.MSS.response.toString().trim());\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tthis.json = errors[2];\r\n\t\t\t\tthis.json['status'] = 'error';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.json = errors[1];\r\n\t\t\tthis.json['status'] = 'error';\r\n\t\t}\r\n\r\n\t\tif (window.debug_mode) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t\tif (this.json['current_time']) {\r\n\t\t\t!window.TIMERS ? window.TIMERS = new Timers(this.json['current_time']) : TIME = this.json['current_time'];\r\n\t\t}\r\n\r\n\t\tthis.parseUD();\r\n\r\n\t\tthis.req_key = this.json['req_key'];\r\n\r\n\t\tthis.json['status'] == \"error\" ? this.onError() : this.onComplete();\r\n\r\n\t\tif (this.mc) this.mc.visible = false;\r\n\r\n\t\tthis.nextReq();\r\n\t}\r\n\r\n\tonError() {\r\n\t\tif (Boolean(this.thisReq['e'])) this.thisReq['e'](this.json);\r\n\t}\r\n\tonComplete() {\r\n\t\tif (Boolean(this.thisReq['c'])) this.thisReq['c'](this.json);\r\n\t}\r\n\r\n\t//Функция создана для замещения стандартных значений, которые могут прийти в ответе\r\n\r\n\tparseUD() {//UD is User Data\r\n\t\tif (this.json['udata']) window.udata = this.json['udata'];\r\n\t\tif (this.json['brush_info']) window.udata = this.json;\r\n\t}\r\n\r\n}","export default class Timers{\r\n\tconstructor(real_time){\r\n\t\twindow.TIME = parseInt(real_time);\r\n\t\twindow.DATE = new Date(TIME * 1000);\r\n\t\twindow.SEASON = ['winter','spring','summer','autumn'][parseInt((DATE.getMonth()+1)/3)%4];\r\n\r\n\t\tthis.start_t = new Date().getTime();\r\n\t\tthis.current_energy = 0;\r\n\t\t\r\n\t\tthis.timers = {};\r\n\r\n\t\tthis.interval = setInterval(()=>{this.tick()}, 100);\r\n\t}\r\n\r\n\ttick(){\r\n\t\tlet end_t = new Date().getTime();\r\n\r\n\t\tlet plus = Math.floor((end_t - this.start_t)/1000);\r\n\r\n\t\tTIME += plus;\r\n\r\n\t\tif(!plus)return;\r\n\r\n\t\tthis.start_t = end_t;\r\n\r\n\t\tlet dt = new Date();\r\n\r\n\t\tlet utc_kek = Math.floor(dt.getTimezoneOffset() / 60)+3;\r\n\r\n\t\tDATE = new Date((TIME+3600*utc_kek) * 1000);\r\n\t\tSEASON = ['winter','spring','summer','autumn'][parseInt((DATE.getMonth()+1)/3)%4];\r\n\r\n\t\tlet keys = Object.keys(this.timers);\r\n\r\n\t\tfor(let i = 0; i < keys.length; i++){\r\n\t\t\tif (this.timers[keys[i]]['init']) this.timers[keys[i]]['tick'](this[keys[i] + 'Control']());\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n\tenergyControl(){\r\n\t\tif (parseInt(udata['energy']) >= parseInt(udata['emax'])) return { 'status': 'max' };\r\n\r\n\t\tlet dob = Math.floor((TIME - parseInt(udata['etime'])) / udata['energytimer']);//считаем, сколько восстановили с последнего визита\r\n\t\tlet timerSec = 0;\r\n\r\n\t\tif (dob < 0) return;\r\n\r\n\t\tif (dob > parseInt(udata['emax']) - parseInt(udata['energy'])) dob = parseInt(udata['emax']) - parseInt(udata['energy']);\r\n\t\tudata['energy'] = parseInt(udata['energy']) + dob;//начисляем\r\n\r\n\t\tif (parseInt(udata['energy']) >= parseInt(udata['emax'])) {//если начислили много или достаточно\r\n\t\t\tudata['energy'] = udata['emax'];//ставим максимальный уровень\r\n\t\t\tudata['etime'] = TIME;//ставим текущее время\r\n\r\n\t\t\treturn { 'status': 'plus', 'time': 0 };\r\n\t\t} else {\r\n\t\t\ttimerSec = (dob + 1) * udata['energytimer'] - (TIME - parseInt(udata['etime']));//считаем сколько времени нужно для следующей энергии\r\n\t\t\tif (dob > 0) {\r\n\t\t\t\tudata['etime'] = TIME - (udata['energytimer'] - timerSec);//ставим время, когда восстановилась последняя энергия\r\n\t\t\t\treturn { 'status': 'plus', 'time': timerSec };\r\n\t\t\t} else {\r\n\t\t\t\treturn { 'status': 'tick', 'time': timerSec };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\totkatControl(){\r\n\t\tif (TIME - parseInt(udata['otkat_bonus_timer']) > 0) return { 'status': 'max' };\r\n\r\n\t\treturn { 'status': 'tick', 'time': parseInt(udata['otkat_bonus_timer']) - TIME };\r\n\t}\r\n\r\n\tlifes_unlimControl(){\r\n\t\tif(TIME - parseInt(udata['full_lifes_timer']) > 0) return { 'status': 'max' };\r\n\r\n\t\treturn { 'status': 'tick', 'time': parseInt(udata['full_lifes_timer']) - TIME};\r\n\t}\r\n\r\n\tlifesControl() {\r\n\t\tif (parseInt(udata['lifes']) >= 5) return { 'status': 'max' };\r\n\r\n\t\tlet dob = Math.floor((TIME - parseInt(udata['lifetime'])) / udata['lifetimer']);//считаем, сколько восстановили с последнего визита\r\n\t\tlet timerSec = 0;\r\n\r\n\t\tif (dob < 0) return;\r\n\r\n\t\tif (dob > 5 - parseInt(udata['lifes'])) dob = 5 - parseInt(udata['lifes']);\r\n\t\tudata['lifes'] = parseInt(udata['lifes']) + dob;//начисляем\r\n\r\n\t\tif (parseInt(udata['lifes']) >= 5) {//если начислили много или достаточно\r\n\t\t\tudata['lifes'] = 5;//ставим максимальный уровень\r\n\t\t\tudata['lifetime'] = TIME;//ставим текущее время\r\n\r\n\t\t\treturn { 'status': 'plus', 'time': 0 };\r\n\t\t} else {\r\n\t\t\ttimerSec = (dob + 1) * udata['lifetimer'] - (TIME - parseInt(udata['lifetime']));//считаем сколько времени нужно для следующей энергии\r\n\t\t\tif (dob > 0) {\r\n\t\t\t\tudata['lifetime'] = TIME - (udata['lifetimer'] - timerSec);//ставим время, когда восстановилась последняя энергия\r\n\t\t\t\treturn { 'status': 'plus', 'time': timerSec };\r\n\t\t\t} else {\r\n\t\t\t\treturn { 'status': 'tick', 'time': timerSec };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","export default class UniHelp{\r\n    constructor(){\r\n        this.scale_anims = [];\r\n    }\r\n\r\n    iconGenerator(example, count, XY = {x:0, y:0}, type = null){\r\n        let arr = [];\r\n        let zn = [-1, 1];\r\n        //let XY = { x: example.worldTransform.x, y: example.worldTransform.y };\r\n\r\n        switch (type) {\r\n            case 'star':\r\n                XY.eX = menu.exp.x;\r\n                XY.eY = menu.exp.y;\r\n                break;\r\n\r\n            case 'medal':\r\n                XY.eX = menu.medals.x;\r\n                XY.eY = menu.medals.y;\r\n                break;\r\n            \r\n            case 'life':\r\n                XY.eX = 0;\r\n                XY.eY = my_height/2;\r\n                break;\r\n            \r\n            case 'energy':\r\n                XY.eX = my_width;\r\n                XY.eY = my_height / 2;\r\n                break;\r\n        \r\n            default:\r\n                XY.eX = my_width;\r\n                XY.eY = 0;\r\n                break;\r\n        }\r\n\r\n        let interval = setInterval(() => {\r\n            clearInterval(interval);\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                this.alphaAnimation(arr[i], 0, 1000);\r\n                gsap.to(arr[i], { duration: 1, x: XY.eX, y: XY.eY, ease: 'power1.out' })\r\n            }\r\n\r\n            interval = setInterval(() => {\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    let l = arr.pop();\r\n                    if (l.parent) l.parent.removeChild(l);\r\n                }\r\n                clearInterval(interval);\r\n            }, 1000);\r\n        }, 700);\r\n\r\n        if (type !== 'life')count = Math.abs(Math.ceil(Math.min(21, count)/3)) ;\r\n\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            let l = this.duplicate(example);\r\n            l.x = XY.x;\r\n            l.y = XY.y;\r\n\r\n            l.scale.x = l.scale.y = scale_coef;\r\n\r\n            root.layer2_mc.addChild(l);\r\n            arr.push(l);\r\n\r\n            gsap.to(l, { duration: 0.5, x: XY.x + (Math.random() * 40) * zn[Math.floor(Math.random() * 2)], y: XY.y + Math.random() * 30 + 20, ease: 'bounce.out' });\r\n        }\r\n\r\n    }\r\n\r\n    scaleAnimator(act, mov){\r\n        let toMin = (movie) =>{\r\n            gsap.to(movie.scale, {duration: 0.3, x: 0.95, y: 0.95, ease: 'none', onComplete: ()=>{\r\n                movie.status != 'stop' ? toMax(movie) : movie.go_anim = false;\r\n            }})\r\n        }\r\n\r\n        let toMax = (movie) =>{\r\n            gsap.to(movie.scale, {duration: 0.3, x: 1, y: 1, ease: 'none', onComplete: ()=>{\r\n                movie.status != 'stop' ? toMin(movie) : movie.go_anim = false;\r\n            }})\r\n        }\r\n\r\n        if (this.scale_anims.indexOf(mov) == -1) this.scale_anims.push(mov);\r\n\r\n        mov.status = act;\r\n        \r\n        for(let i = 0; i < this.scale_anims.length; i++){\r\n            if (!this.scale_anims[i].go_anim && this.scale_anims[i].status == 'start')toMin(this.scale_anims[i]);\r\n        }\r\n    }\r\n\r\n    alphaAnimation(mc, alpha = 1, time = 100, callback = null) {\r\n        let _start = Math.floor(performance.now());//время со старта приложения\r\n        let timeOut = time;//время за которое нужно обновить число\r\n        let startAlpha = mc.alpha;\r\n\r\n        if (startAlpha == alpha) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        let interval = setInterval(() => {\r\n            let percent = (Math.floor(performance.now()) - _start) / timeOut;\r\n\r\n            startAlpha < alpha ? mc.alpha = startAlpha + (alpha - startAlpha) * percent : mc.alpha = startAlpha - (startAlpha - alpha) * percent;\r\n\r\n            if (percent >= 1) {               // если весь временной путь пройден\r\n                mc.alpha = alpha;\r\n\r\n                if (mc.alpha > 1) mc.alpha = 1;\r\n                if (mc.alpha < 0) mc.alpha = 0;\r\n\r\n                clearInterval(interval);// отключаем таймер\r\n\r\n                if (callback) callback(); // и вызываем функцию обратного вызова, если она задана\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n    gradient(from, to, del = null) {\r\n        let c = document.createElement(\"canvas\");\r\n        c.setAttribute('height', my_height);\r\n        c.setAttribute('width', my_width);\r\n        let ctx = c.getContext(\"2d\");\r\n        let grd = ctx.createLinearGradient(0, 0, 0, my_height/2);\r\n        grd.addColorStop(0, from);\r\n        if(del)grd.addColorStop(0.42, del);\r\n        grd.addColorStop(1, to);\r\n        ctx.fillStyle = grd;\r\n        ctx.fillRect(0, 0, my_width, my_height);\r\n\r\n        let sp = new PIXI.Sprite(new PIXI.Texture.from(c));\r\n\r\n        //sp.width = my_width;\r\n        //sp.height = my_height;\r\n\r\n        return sp;\r\n    }\r\n\r\n    clickControl(mov, down, click, trim) {\r\n        mov.on('pointerdown', (e) => {\r\n            if (down) down(e);\r\n            mov.dn_trig = true;\r\n\r\n            if (trim) this.ivls.push(setInterval(() => {\r\n                for (let i = 0; i < this.ivls.length; i++)clearInterval(this.ivls[i]);\r\n\r\n                mov.dn_trig = false;\r\n                trim(e);\r\n            }, 200));\r\n        });\r\n\r\n        mov.on('pointerup', (e) => {\r\n            if (click && mov.dn_trig) click(e);\r\n        });\r\n    }\r\n\r\n    duplicate(obj) {\r\n        return new obj.constructor();\r\n    }\r\n\r\n    getZeros(m) {\r\n        let mS = '';\r\n        m < 10 ? mS = '0' + m : mS = +m;\r\n\r\n        return mS;\r\n    }\r\n\r\n    shortText(value) {\r\n        let ends = ['', 'K', 'M', 'B', 'T', 'q'];\r\n        let nums = [1, 1000, 1000000, 1000000000, 1000000000000, 1000000000000000];\r\n        let ind = nums.length - 1;\r\n\r\n        while (value / nums[ind] < 1 && ind > 0) ind--;\r\n\r\n        let transit = value / nums[ind];\r\n\r\n        return (Math.round(transit * 10) / 10) + ends[ind];\r\n    }\r\n\r\n    fullText(text) {\r\n        let ends = ['', 'K', 'M', 'B', 'T', 'q'];\r\n        let nums = [1, 1000, 1000000, 1000000000, 1000000000000, 1000000000000000];\r\n        let ind = nums.length - 1;\r\n\r\n        let num = text.substring(0, text.length-1);\r\n        let end = text.substring(text.length - 1, text.length);\r\n\r\n        if(!isNaN(end)){\r\n            return parseInt(text);\r\n        }else{\r\n            return parseFloat(text) * nums[ends.indexOf(end)];\r\n        }\r\n    }\r\n\r\n    numberAnimation(tf, val, time = 100, callback = null) {\r\n        \r\n        if (tf.text == this.shortText(val)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        let _start = Math.floor(performance.now());//время со старта приложения\r\n        let oldval = 0;\r\n\r\n        oldval = this.fullText(tf.text);\r\n\r\n        let newval = parseInt(val);\r\n        let timeOut = time;//время за которое нужно обновить число\r\n\r\n        let interval = setInterval(() => {\r\n            let percent = (Math.floor(performance.now()) - _start) / timeOut;\r\n\r\n            if (newval < oldval) {\r\n                tf.text = this.shortText(parseInt(oldval - ((oldval - newval) * percent)));\r\n            } else {\r\n                tf.text = this.shortText(parseInt(oldval + ((newval - oldval) * percent)));\r\n            }\r\n\r\n            if (percent >= 1) {\r\n                tf.text = this.shortText(newval)\r\n                clearInterval(interval);\r\n\r\n                if (callback) callback();\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n    levelComplete(value){\r\n        let nums = [0, 10, 50, 100];\r\n        let frames = [3, 2, 1, 0];\r\n\r\n        for(let i = nums.length-1; i >= 0; i--)if(value >= nums[i])return frames[i];\r\n    }\r\n\r\n    getJSON(link, complete, error) {\r\n        let request = new XMLHttpRequest();\r\n        request.open('GET', link + '?h=' + session_hash);\r\n        request.responseType = 'json';\r\n        request.send();\r\n\r\n        request.addEventListener('loadend', () => {\r\n            if (request.readyState === 4 && request.status === 200) {\r\n                complete(request.response);\r\n            } else {\r\n                error(errors[1]);\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    loadPhoto50(id, callback = null, url = null) {\r\n        let iof = bitmaps50['id'].indexOf(id);\r\n        if (iof !== -1) url = bitmaps50['bm'][iof];\r\n\r\n        if (!bitmaps50['name'][iof]) bitmaps50['name'][iof] = 'Пригласить';\r\n\r\n\r\n        if (!url) return bridge.sendPromise(\"VKWebAppCallAPIMethod\", { method: 'users.get', params: { fields: 'photo_50', user_ids: id, access_token: VK_token, v: VK_version } }).then(data => {\r\n            this.loadPhoto50(id, callback, data['response'][0]['photo_50'])\r\n\r\n            bitmaps50['id'].push(id);\r\n            bitmaps50['name'].push(data['response'][0]['first_name']);\r\n            bitmaps50['bm'].push(data['response'][0]['photo_50']);\r\n        });\r\n\r\n        if (url !== null_photo50 && url.split('userapi.com').length < 2) {\r\n            bitmaps50['id'].push(id);\r\n            bitmaps50['name'].push(data['response'][0]['first_name']);\r\n            bitmaps50['bm'].push(null_photo50);\r\n\r\n            return this.loadPhoto50(id, callback, null_photo50);\r\n        }\r\n\r\n        if (callback) callback({ photo: new PIXI.Sprite.from(url), name: bitmaps50['name'][iof]});\r\n    }\r\n\r\n    pushPhoto50(ids, callback =  null){\r\n        for (let i = 0; i < ids.length; i++){\r\n            let iof = bitmaps50['id'].indexOf(ids[i]);\r\n\r\n            if (iof !== -1) ids.slice(iof, 1);\r\n        }\r\n\r\n        if (ids.length < 1){\r\n            if(callback) callback(true);\r\n            return;\r\n        }\r\n\r\n\r\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", { method: 'users.get', params: { fields: 'photo_50', user_ids: ids.join(','), access_token: VK_token, v: VK_version } }).then(data => {\r\n            for (let i = 0; i < data['response'].length; i++){\r\n                bitmaps50['id'].push(data['response'][i]['id']);\r\n                bitmaps50['name'].push(data['response'][i]['first_name']);\r\n                \r\n\r\n                data['response'][i]['photo_50'].split('userapi.com').length < 2 ? bitmaps50['bm'].push(data['response'][i]['photo_50']) : bitmaps50['bm'].push(null_photo50);\r\n            }\r\n\r\n            if (callback) callback(true);\r\n\r\n        }).catch(() => {\r\n            if(callback) callback(false);\r\n        });\r\n    }\r\n\r\n    drawShadow(mov, callback, anim = true){\r\n        mov.alpha = 0;\r\n        if (mov.children.length < 1) {\r\n            let grp = new PIXI.Graphics();\r\n\r\n            grp.beginFill('0x333333');\r\n            grp.drawRect(0, 0, my_width, my_height);\r\n            grp.endFill();\r\n\r\n            mov.addChild(grp);\r\n\r\n            mov.scale.x = mov.scale.y = scale_coef;\r\n        }\r\n\r\n        if(anim){\r\n            this.alphaAnimation(mov, 0.33, 200, () => {\r\n                if (callback) callback();\r\n            })\r\n        }else{\r\n            mov.alpha = 0.33;\r\n            if (callback) callback();\r\n        }\r\n    }\r\n\r\n    parse(json) {\r\n        let arr = [];\r\n\r\n        try {\r\n            arr = JSON.parse(json);\r\n        } catch (e) { }\r\n\r\n        return arr;\r\n    }\r\n    encode64(text) {\r\n        return btoa(unescape(encodeURIComponent(text)));\r\n    }\r\n    decode64(text) {\r\n        try {\r\n            return decodeURIComponent(escape(window.atob(text)));\r\n        } catch (e) {\r\n            return text;\r\n        }\r\n    }\r\n\r\n    toKeyVals(arr){\r\n        if(arr[0])return {keys: 'key', values: arr};\r\n\r\n        return {keys: Object.keys(arr), values: Object.values(arr)};\r\n    }\r\n\r\n    copyJSON(data){\r\n        return JSON.parse(JSON.stringify(data));\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import PreloaderControl from './game/preloadercontrol.js';\r\nimport UniHelp from './tolmasoft/universal_helper.js';\r\nimport ModuleControl from './tolmasoft/module_control.js';\r\nimport Server from './tolmasoft/server.js';\r\nimport Sounds from './game/sounds.js';\r\n\r\nwindow.bridge = vkBridge;\r\n\r\nwindow.debug_mode = true;\r\n\r\nlet partsData = document.location.search.substr(1).split(\"&\");//Дробим информацию на части (для ВК)\r\nlet userDataVk = {}, currentData;\r\nfor(let i = 0; i < partsData.length; i++) {\r\n\tcurrentData = partsData[i].split('=');//Дробим данные на ключ - значения\r\n\tuserDataVk[currentData[0]] = currentData[1];//Записываем ключи и их значения\r\n}\r\n\r\nbridge.send(\"VKWebAppInit\").then(e => {\r\n\twindow.VKinit = true;\r\n\r\n\twindow.VKPlatform = userDataVk['platform'];\r\n\r\n\tif (window.VKPlatform !== 'web' || !debug_mode)return;\r\n\r\n\tlet stats = new Stats();\r\n\r\n\tstats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\r\n\tdocument.body.appendChild(stats.dom);\r\n\r\n\tfunction animate() {\r\n\r\n\t\tstats.begin();\r\n\r\n\t\t// monitored code goes here\r\n\r\n\t\tstats.end();\r\n\r\n\t\trequestAnimationFrame(animate);\r\n\r\n\t}\r\n\r\n\trequestAnimationFrame(animate);\r\n});\r\n\r\n\r\n\r\nwindow.load_info = window.prog = window.root = window.udata = window.pre_control = null; \r\n\r\nwindow.vk_params = userDataVk;\r\nwindow.VK_token = vk_params['access_token'];\r\nwindow.VK_version = '5.120';\r\nwindow.bridge = bridge;\r\n\r\nwindow.session_hash = md5(Math.floor(Math.random() * 1000000).toString());\r\n\r\nwindow.helper = new UniHelp();\r\nwindow.modules = new ModuleControl();\r\n\r\nwindow.sounds = new Sounds();\r\n\r\nwindow.my_server = 'https://tolmasoft.com/gameword/server';\r\nif (window.debug_mode) window.my_server = 'https://tolmasoft.com/gameword/_test/server';\r\n\r\nwindow.TS = new Server([vk_params['api_id'], vk_params['viewer_id'], vk_params['auth_key'], my_server, vk_params['user_id']]);\r\n\r\nwindow.bitmaps50 = { id: [], bm: [], name: [] };\r\nwindow.bitmaps100 = { id: [], bm: [], name: [] };\r\nwindow.bitmaps200 = { id: [], bm: [], name: [] };\r\n\r\nwindow.null_photo50 = my_server + '/images/noicon.png';\r\nwindow.null_photo100 = my_server + '/images/noicon100.png';\r\nwindow.null_photo200 = my_server + '/images/noicon200.png';\r\n\r\n\r\n//Когда весь контент игры загружен\r\nwindow.endLoadGame = ()=>{\r\n\tif (window.init_game) return;\r\n\twindow.init_game = true;\r\n\t\r\n\thelper.alphaAnimation(pre_control.preloader.logo_game, 0, 500, () => {\r\n\r\n\t\twhile (root.children.length) root.removeChildAt(0);\r\n\t\t\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\troot['layer' + i + '_mc'] = new PIXI.Container();\r\n\t\t\troot.addChild(root['layer' + i + '_mc']);\r\n\t\t}\r\n\r\n\t\tlearn.init();\r\n\t\tmenu.init();\r\n\t});\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\n//Предзагрузка графона\r\nwindow.loadGame = ()=>{\r\n\t//начинаем загрузку ресурсов игры\r\n\tmodules.checkFlags(['game', 'menu'], () => {\r\n\t\twindow.end_load = true;\r\n\r\n\t\tif (window.show_logo && window.data_load) endLoadGame();\r\n\t})\r\n}\r\n\r\n\r\n\r\n\r\n//Предзагрузка прелоадера (тафтология но суть ясна)\r\nwindow.canv = document.createElement(\"canvas\");\r\ncanv.setAttribute(\"id\", \"stage\");\r\ncanv.setAttribute(\"width\", \"100%\");\r\ncanv.setAttribute(\"height\", \"100%\");\r\n\r\ndocument.body.appendChild(canv);\r\n\r\n\r\nPIXI.settings.ROUND_PIXELS = true;\r\n\r\n\r\nlet onGetLinks = (e) => {\r\n\twindow.content_links = e;\r\n\tlet keys = Object.keys(content_links);\r\n\r\n\tfor (let i = 0; i < keys.length; i++)include('libs/' + content_links[keys[i]] + '.min.js?' + session_hash);\r\n\r\n\t\r\n\tgameConnect();\r\n}\r\n\r\n\r\nlet gameConnect = () => {\r\n\tpre_control.getToken();\r\n}\r\n\r\n\r\n\r\n\r\n//Сервисные функции\r\nwindow.setButton = (e) => {\r\n\te.interactive = true;\r\n\te.buttonMode = true;\r\n\r\n\te._totalFrames = e._totalFrames || 1;\r\n\r\n\tif (e._totalFrames < 2) return;\r\n\r\n\te.gotoAndStop(0);\r\n\r\n\te.on('mouseover', () => e.gotoAndStop(1));\r\n\te.on('mouseout', () => e.gotoAndStop(0));\r\n}\r\n\r\nwindow.include = (url) => {\r\n\tlet script = document.createElement('script');\r\n\tscript.src = url;\r\n\tscript.type = 'text/javascript';\r\n\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n}\r\n\r\nwindow.include_preload = (url, type = \"font/ttf\") => {\r\n\tlet link = document.createElement('link');\r\n\tlink.rel = 'preload';\r\n\tlink.href = url;\r\n\tlink.as = 'font'\r\n\tlink.type = type;\r\n\tlink.crossorigin = true;\r\n\tdocument.getElementsByTagName('head')[0].appendChild(link);\r\n}\r\n\r\nwindow.setTextStyle = (txt, dop_params = {}) => {\r\n\tlet arr = Object.keys(dop_params);\r\n\r\n\tfor (let i = 0; i < arr.length; i++)txt.style[arr[i]] = dop_params[arr[i]];\r\n}\r\n\r\n\r\nwindow.iconScaleIn = (e)=>{\r\n\tlet target = e.currentTarget;\r\n\tgsap.to(target.scale, { duration: 0.2, x: 1.05, y: 1.05, ease: \"back.out(3)\" });\r\n}\r\nwindow.iconScaleOut = (e)=>{\r\n\tlet target = e.currentTarget;\r\n\tgsap.to(target.scale, { duration: 0.1, x: 1, y: 1 })\r\n}\r\n\r\nlet webglDetect = (return_context) => {\r\n\tif (!!window.WebGLRenderingContext) {\r\n\t\tlet canvas = document.createElement(\"canvas\"),\r\n\t\t\tnames = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"],\r\n\t\t\tcontext = false;\r\n\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tcontext = canvas.getContext(names[i]);\r\n\t\t\t\tif (context && typeof context.getParameter == \"function\") {\r\n\t\t\t\t\t// WebGL is enabled\r\n\t\t\t\t\tif (return_context) {\r\n\t\t\t\t\t\t// return WebGL object if the function argument is present\r\n\t\t\t\t\t\treturn { name: names[i], gl: context };\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// else, return just true\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) { }\r\n\t\t}\r\n\r\n\t\t// WebGL is supported, but disabled\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// WebGL not supported\r\n\treturn false;\r\n}\r\n\r\nlet initLocalStore = (cb = false) => {\r\n\r\n\twindow.localStore = [];\r\n\r\n\tlet garant = { music: true, sound: true, canvas: false };\r\n\r\n\tif (!webglDetect()) garant = { music: true, sound: true, canvas: true }\r\n\r\n\tlet check = () => {\r\n\t\tif (localStore['music'] === undefined || !localStore['canvas'] === undefined) localStore = garant;\r\n\r\n\t\tsaveLocalStorage();\r\n\r\n\t\tif (cb) cb();\r\n\t}\r\n\r\n\tlet localCheck = () => {\r\n\t\ttry {\r\n\t\t\tlocalStorage.setItem('test', 'test');\r\n\t\t\tlocalStorage.removeItem('test');\r\n\r\n\t\t\tlet keke;\r\n\r\n\t\t\tlocalStorage.getItem('gameword') ? keke = true : keke = false;\r\n\r\n\t\t\treturn [true, keke];\r\n\t\t} catch (e) {\r\n\t\t\twindow.incognito = true;\r\n\r\n\t\t\tconsole.warn('Внимание! Вы не разрешили хранить игре данные у себя на устройстве. Уровень музыки и настройки графикисбросятся при перезагрузке игры');\r\n\r\n\t\t\treturn [false, false];\r\n\t\t}\r\n\t}\r\n\r\n\tlet VKcheck = (callback) => {\r\n\t\tbridge.sendPromise(\"VKWebAppCallAPIMethod\", { method: \"storage.get\", params: { key: 'gameword', access_token: VK_token, v: VK_version } }).then(e => {\r\n\r\n\t\t\te.response[0]['value'] == '' ? callback(false) : callback(helper.decode64(e.response[0]['value']));\r\n\r\n\t\t\tif(debug_mode)console.log(helper.decode64(e.response[0]['value']));\r\n\r\n\t\t}).catch(e => {\r\n\t\t\tcallback(false);\r\n\t\t});\r\n\t}\r\n\r\n\tVKcheck((out) => {\r\n\t\tlet loc = localCheck();\r\n\t\tif (!out && !loc[0]) window.localStore = garant;\r\n\r\n\t\tif (out) {\r\n\t\t\twindow.localStore = helper.parse(out);\r\n\r\n\t\t} else if (loc[1]) {\r\n\t\t\twindow.localStore = helper.parse(localStorage.getItem('gameword'));\r\n\t\t}\r\n\r\n\t\tcheck();\r\n\t});\r\n\r\n}\r\n\r\ninitLocalStore(() => {\r\n\tif (!webglDetect()){\r\n\t\tlocalStore['canvas'] = true;\r\n\t\tsaveLocalStorage();\r\n\t}\r\n\r\n\twindow.scene = new PIXI.animate.Scene({ width: window.innerWidth * window.devicePixelRatio, height: window.innerHeight * window.devicePixelRatio, view: canv, transparent: true, antialias: true, forceCanvas: Boolean(window.localStore.canvas)});\r\n\r\n\tscene.renderer.options.backgroundColor = null;\r\n\r\n\twindow['preloader'].setup(PIXI.animate);\r\n\tscene.load(window['preloader'], e => {\r\n\t\twindow.root = scene.stage;\r\n\r\n\t\tlet prc = '-' + (25*(window.devicePixelRatio-1))+'%';\r\n\r\n\t\tif (window.VKPlatform == 'web')canv.style.transform = 'translate('+prc+', '+prc+')scale(' + 1 / window.devicePixelRatio + ')';\r\n\r\n\t\t//root.scale.x = root.scale.y = 1/window.devicePixelRatio;\r\n\r\n\t\tpre_control = new PreloaderControl(e);\r\n\r\n\t\thelper.getJSON(my_server + '/json/links.json', (e) => onGetLinks(e), (e) => pre_control.onError(e));\r\n\t});\r\n});\r\n\r\nwindow.saveLocalStorage = (callback = null) => {\r\n\tif (!window.incognito) localStorage.setItem('gameword', JSON.stringify(localStore));//обязательно вписываем в кэш\r\n\r\n\tbridge.sendPromise(\"VKWebAppCallAPIMethod\", { method: \"storage.set\", params: { key: 'gameword', value: helper.encode64(JSON.stringify(localStore)), access_token: VK_token, v: VK_version } }).then(e => {\r\n\t\tif (debug_mode)console.log('Success save local data');\r\n\r\n\t\tif(callback)callback();\r\n\t}).catch(e => console.log(e));\r\n}\r\n\r\n\r\n//PrintScreen protect\r\n\r\ndocument.oncontextmenu = () => {return false};\r\nwindow.addEventListener('focus', () => { if (window.game) game.mask_mc.y = 0});\r\nwindow.addEventListener('blur', () => { if (window.game) game.mask_mc.y = -10000});\r\n\r\n//let div = document.getElementById(\"text_area\");\r\nwindow.copyTextarea = document.createElement(\"textarea\");\r\ncopyTextarea.value = 'Создание скриншотов в игре ЗАПРЕЩЕНО';\r\n\r\n\r\nlet copyToClipboard =  () => {\r\n\r\n\tdocument.body.appendChild(copyTextarea);\r\n\r\n\tcopyTextarea.focus();\r\n\tcopyTextarea.select();\r\n\r\n\ttry {\r\n\t\tlet successful = document.execCommand('copy');\r\n\t\tlet msg = successful ? 'successful' : 'unsuccessful';\r\n\r\n\t\tdocument.body.removeChild(copyTextarea);\r\n\t} catch (err) {\r\n\r\n\t\tdocument.body.removeChild(copyTextarea);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\n\r\nwindow.addEventListener('keyup', (e)=>{\r\n\tif(e.keyCode == 44)copyToClipboard('prot');\r\n})"],"names":[],"sourceRoot":""}